---
title: "Analyses Section 1: Demographics and Associations"
html:
  embed-resources: true
format: html
---

# ‚≠êÔ∏è Overview

## This File

This file performs the initial explorations and analyses of demographics within the MedStar 5-year follow-up data, internally referred to as "Section 1: Demographics and Associations".

## MedStar Data Background

The MedStar records were originally recorded in Filemaker Pro. Processing of this data was extensive and across multiple data files. These files are documented in the [wiki](https://github.com/brad-cannell/detect_fu_interviews_public/wiki).

The primary files of interest for subject-level interest included participant demographic data in the `participant_import.rds` file [created in a separate Quarto file](https://github.com/brad-cannell/detect_fu_interviews_public/blob/main/data_management/data_01_participant_import.qmd), and the original within-set unique subject ID assignment in `participant_unique_ids.rds` file [created in a separate Quarto file](https://github.com/brad-cannell/detect_fu_interviews_public/blob/main/data_management/unique_person_identification/data_02_unique_person_detect_fu_data.qmd).

These files originally contained 92,160 observations of approximately 30 demographic variables. Refinement of unique subject ID assignments in subject-linkage to APS resulted in 41,955 values of `ms_id`.

## Internal Files

This document was created as part of the DETECT project, specifically the merger of APS and MedStar data for analysis using the full follow-up period data. Internal documents relating to these files, which contain PHI, are securely stored on the research group's SharePoint in the [5-year data manuscript directory](https://uthtmc.sharepoint.com/:f:/r/sites/SPHDETECT-RPC/Shared%20Documents/DETECT%20R01%202018/Manuscripts/Brianna%20Morri%20-%20APS%205%20year%20year%20update?csf=1&web=1&e=fhfOfL).

**Notes for analyses** start at the parent document["00_DETECT 5-year Analysis Notes.docx"](https://uthtmc.sharepoint.com/:w:/r/sites/SPHDETECT-RPC/Shared%20Documents/DETECT%20R01%202018/Manuscripts/Brianna%20Morri%20-%20APS%205%20year%20year%20update/tables/00_DETECT%205-Year%20Analysis%20Notes.docx?d=w09a61782c9ef4fe78780683996fdbd1b&csf=1&web=1&e=OWsgTv). Notes for this file are in ["section 1 - demographics tables.docx"](https://uthtmc.sharepoint.com/:w:/r/sites/SPHDETECT-RPC/Shared%20Documents/DETECT%20R01%202018/Manuscripts/Brianna%20Morri%20-%20APS%205%20year%20year%20update/tables/section%201%20-%20demographics%20tables.docx?d=w07f8144ba5c24ef093d232b5ed68b65b&csf=1&web=1&e=d85qHJ).

Notes for the MedStar data are located in the [notes_00_data_medstar.docx](https://uthtmc.sharepoint.com/:w:/r/sites/SPHDETECT-RPC/Shared%20Documents/DETECT%20R01%202018/02%20Shared%20Folders/DETECT%20Follow-up%20Interview%20Data%20Shared/data/notes_documents/notes_00_data_medstar.docx?d=w7367b418df5644fbb3ff5117908f27d9&csf=1&web=1&e=gueXsZ) file.

Please note: as these files contain PHI and proprietary information, they are not publicly available. Links are internal to the research team.

# üì¶ Load Packages and Functions

## Library Imports

```{r}
#| label: imports-libraries
#| warning: FALSE
suppressPackageStartupMessages({
  library(tidyverse)
  library(here)
})
```

### Versioning

This file was created with:

-   R version 4.4.1 ("Race for Your Life").
-   tidyverse version 2.0.0, including all attached packages
-   here version 1.0.1
-   stats version 4.4.1

## Functions

```{r}
#| label: imports-functions
# Function to reduce code repetition in informative imports of data
source(here::here("r", "informative_df_import.R"))

# Function that creates a modified version of table output, allowing
# simplified manual review of unique values in a given column or set of
# columns
source(here::here("r", "get_unique_value_summary.R"))

# Function that creates a text-based, human-legible summary statistic table
# for a numeric column
source(here::here("r", "get_cont_summary.R"))
# Function that wraps "get_cont_summary()" to process multiple groups at once.
source(here::here("r", "get_group_cont_summary.R"))

# Function that creates a text-based, human-legible summary statistic table
# for a categorical column
source(here::here("r", "get_cat_summary.R"))
# Function that wraps "get_cat_summary()" to process multiple groups at once.
source(here::here("r", "get_group_cat_summary.R"))

## Function that performs 2-Category Chi-Square and Fisher Exact and produces
## a human-legible summary table
source(here::here("r", "get_chi_fisher.R"))

## Function that performs 2-category T-Test and Wilcox Rank-Sum test and 
## produces a human-legible summary table
source(here::here("r", "get_twos_num_stats.R"))
```

# üì• Load Data

## MedStar Data

We loaded our MedStar record-level data.

```{r}
#| label: load-ms-records
# Load MedStar Record Level Data
## Path to data
path <- here::here(
    "data", "cleaned_rds_files", "analysis", 
    "medstar_01_record-lvl.rds"
    )

## Load
informative_df_import(
    "ms_records", path, overwrite = T
  )

 # [PLACEHOLDER]
```

We loaded our MedStar subject-level data.

```{r}
#| label: load-ms-subjs
# Load MedStar Subject Level Data
## Path to data
path <- here::here(
    "data", "cleaned_rds_files", "analysis", 
    "medstar_02_subj-lvl.rds"
    )

## Load
informative_df_import(
    "ms_subjs", path, overwrite = T
  )

 # [PLACEHOLDER]
```

# Analyses

We set the path to where we wished to save our plot files.

```{r}
#| label: set-plot-path
# Set path to directory to save plot image files
plot_path <- paste0(here::here('data', 'figs'), '/')
```

We set the order we wanted to present Sex, Race, and Hispanic Ethnicity Values in our summary tables.

```{r}
#| label: set-value-orders
# Set order of values when presented in summary table functions
## Sex value order
sex_val_list = list(
    male = 'Male', female = 'Female', uta = 'Unable to Assess', 
    missing = 'Missing (NA)'
    )

## Race value order
race_val_list = list(
  white = "White", black = "Black or African American", asian = "Asian", 
  nhpi = "Native Hawaiian or Other Pacific Islander", 
  aian = "American Indian or Alaska Native", 
  mena = "Middle Eastern or North African", 
  other = "Other Race", multiracial = "Multiracial", missing = "Missing (NA)"
  )

## Hispanic Ethnicity value order
hispanic_val_list = list(
  hispanic = 'Hispanic or Latino', nonhispanic = 'Not Hispanic or Latino', 
  missing = 'Missing (NA)'
  )
```

## Section 1: Demographics and Associations

### Overall Demographics

#### Table 1.1: Response-Level (#sec1-t1-demo-overall-resp)

We wished to examine overall demographics within our data at the response level. We stored this internally as Table 1.1. We performed statistical tests for in comparison with [US Census data for Fort Worth, 2022](https://www.census.gov/quickfacts/fact/table/fortworthcitytexas/POP060210).

```{r}
#| label: sec1-t1-demo-overall-resp-subset
# Take response-level subset for the following analyses
t_df <- ms_records |>
  ## Drop "Duplicate" flagged records
  dplyr::filter(!dup_drop)
```

We briefly examined the screening performance, positive screen counts, and screens with recorded intent to report in this section.

```{r}
#| label: sec1-t1-demo-overall-resp-overview
# Present Screened, Positive Screen, and Report Intent Counts for Section
## Name columns of interest
t_vars <- c('dt_screened', 'dt_positive', 'dt_aps_reported')

## Generate table counting TRUE/FALSE values
count_table <- tibble::tibble(
  ### Start with the variable names 
  var_name = t_vars
  ) |>
  ### Add counts of the True, False, and Missing values
  dplyr::bind_cols(
    t_df |>
      dplyr::select(dplyr::all_of(t_vars)) |>
      #### Convert boolean/logical values to character, so NA is not omitted
      dplyr::mutate(dplyr::across(
        dplyr::everything(), 
        ~dplyr::case_when(
          is.na(.x) ~ "Missing",
          .x ~ "True",
          TRUE ~ "False"
        ))
      ) |>
      #### Get counts of the values into the table
      purrr::map_df(table)
  ) |>
  ### Add a row-wise total
  dplyr::rowwise() |>
  dplyr::mutate(
    total = sum(dplyr::c_across(False:Missing), na.rm = T)
    ) |>
  dplyr::ungroup()

## Present table
count_table
```

##### Age

We calculated summary statistics for calculated age.

```{r}
#| label: sec1-t1-demo-all-resp-age-summ
# Get Summary Statistics for Age, Response-Level
get_cont_summary(as.vector(na.omit(t_df$age_calc))) |>
  dplyr::rename_at('summary_text', ~'Overall (All Responses)')
```

We used a histogram to broadly examine the distribution of values for age. Values demonstrated a significant left skew, and were not approximately normally distributed

```{r}
#| label: sec1-t1-demo-all-resp-age-hist-f0-1
# Figure 0.1: Distribution of Age, Overall, Response-Level
## Create Histogram
plot <- ggplot2::ggplot(
  t_df, 
  ggplot2::aes(
    x = age_calc, y = ggplot2::after_stat(density),
  )) +
  ggplot2::scale_alpha(guide = "none") +
  ggplot2::geom_histogram(binwidth = 1, position = 'identity') +
  ### Convert y-axis scale to a percent
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ### Labels
  ggplot2::labs(
    title="Distribution of Age, Overall, Response-Level",
    x= "Calculated Age at Encounter (Years)", 
    y = "Frequency (%)") +
  ### Colors
  ggplot2::scale_fill_brewer(palette="Spectral")

## Save plot
ggplot2::ggsave(
  filename = paste0(
    plot_path, 
    "f0-1_age-overall-resp-hist.png"
    ),
  plot = plot
  )

## Display plot
plot
```

There was no subset of the US Census that provided age values for those above 65, which would be required for statistical testing.

##### Sex

We calculated summary statistics for sex.

```{r}
#| label: sec1-t1-demo-all-resp-sex-summ
# Get Summary Statistics for Sex, Response-Level
## Calculate summary statistics
obs <- get_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      sex_cat = ifelse(is.na(sex_cat), 'missing', sex_cat)
    ),
  "sex_cat",
  .val_order = sex_val_list
  )

## Display table
obs |>
  dplyr::select(value_name, text)
```

We performed Chi-Square and Fisher's Exact test to compare these values to the US Census Data.

```{r}
#| label: sec1-t1-demo-all-resp-sex-stats
# Chi-Square and Fisher's Exact test, Census Comparison
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, n) |>
  dplyr::filter(value_name != "TOTAL") |>
  ## Add Census Percentages:
  ## Male, Female, UTA, Missing
  dplyr::mutate(
    ## Percentages from US Census: 
    ## (Male, Female, UTA, Missing)
    probs = c(0.512, (1-0.512), 0, 0),
    ## Predicted counts from percentages
    preds = sum(n) * probs),
  .counts_a_var = 'n',
  .counts_b_var = 'preds',
  .probs_b_var = 'probs',
  .value_var = 'value_name',
  .omit_vals = c('Unable to Assess', 'Missing (NA)')
  )
```


##### Race

We calculated summary statistics for race.

```{r}
#| label: sec1-t1-demo-all-resp-race-summ
# Get Summary Statistics for Race, Response-Level
## Calculate summary statistics
obs <- get_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      race_cat = ifelse(is.na(race_cat), 'missing', race_cat)
    ),
  "race_cat",
  .val_order = race_val_list
  )

## Display table
obs |>
  dplyr::select(value_name, text)
```

We performed Chi-Square and Fisher's Exact test to compare these values to the US Census Data.

```{r}
#| label: sec1-t1-demo-all-resp-race-stats
# Chi-Square and Fisher's Exact test, Census Comparison
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, n) |>
  dplyr::filter(value_name != "TOTAL") |>
  ## Add Census Percentages:
  ## White, Black, Asian, NHPI, AIAN, MENA, Other, Multiracial, Missing
  dplyr::mutate(
    ## Percentages from US Census: 
    ## (White, Black, Asian, NHPI, AIAN, MENA, Other, Multiracial, Missing)
    probs = c(0.558, 0.188, 0.049, 0.001, 0.005, 0, 0.113, 0.086, 0),
    ## Predicted counts from percentages
    preds = sum(n) * probs),
  .counts_a_var = 'n',
  .counts_b_var = 'preds',
  .probs_b_var = 'probs',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```

Of note, "Middle Eastern or North African" was not provided in Census Data. We performed additional sensitivity testing when combining this category into "Other Race".

```{r}
#| label: sec1-t1-demo-all-resp-race-stats-menaomit
# Chi-Square and Fisher's Exact test, Census Comparison, MENA/Other Combined
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, n) |>
    ## Combine MENA into Other
    dplyr::mutate(
      n = ifelse(
        value_name == "Other Race",
        obs[obs$value_name == "Other Race",]$n + 
          obs[obs$value_name == "Middle Eastern or North African",]$n,
        n
      )
    ) |>
    dplyr::filter(
      !value_name %in% c("TOTAL", "Middle Eastern or North African")
      ) |>
    ## Add Census Percentages:
    ### White, Black, Asian, NHPI, AIAN, MENA/Other, Multiracial, Missing
    dplyr::mutate(
      ### Percentages from US Census: 
      ### (White, Black, Asian, NHPI, AIAN, MENA/Other, Multiracial, Missing)
      probs = c(0.558, 0.188, 0.049, 0.001, 0.005, 0.113, 0.086, 0),
      ### Predicted counts from percentages
      preds = sum(n) * probs
      ),
  .counts_a_var = 'n',
  .counts_b_var = 'preds',
  .probs_b_var = 'probs',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```

##### Ethnicity

We calculated summary statistics for ethnicity.

```{r}
#| label: sec1-t1-demo-all-resp-ethn-summ
# Get Summary Statistics for Ethnicity, Response-Level
## Calculate summary statistics
obs <- get_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      hispanic = dplyr::case_when(
        is.na(hispanic) ~ 'missing',
        hispanic ~ 'hispanic',
        !hispanic ~ 'nonhispanic'
      )
    ),
  "hispanic",
  .val_order = hispanic_val_list
  )

## Display table
obs |>
  dplyr::select(value_name, text)
```

We performed Chi-Square and Fisher's Exact test to compare these values to the US Census Data.

```{r}
#| label: sec1-t1-demo-all-resp-ethn-stats
# Chi-Square and Fisher's Exact test, Census Comparison
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, n) |>
  dplyr::filter(value_name != "TOTAL") |>
  ## Add Census Percentages:
  ## Hispanic, Non-Hispanic, Missing
  dplyr::mutate(
    ## Percentages from US Census: 
    ## (Hispanic, Non-Hispanic, Missing)
    probs = c(0.353, (1-0.353), 0),
    ## Predicted counts from percentages
    preds = sum(n) * probs),
  .counts_a_var = 'n',
  .counts_b_var = 'preds',
  .probs_b_var = 'probs',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```

#### Table 1.2: Subject-Level (#sec1-t2-demo-overall-subj)

We wished to examine overall demographics within our data at the subject level. We stored this internally as Table 1.2. We performed statistical tests for in comparison with [US Census data for Fort Worth, 2022](https://www.census.gov/quickfacts/fact/table/fortworthcitytexas/POP060210).

```{r}
#| label: sec1-t2-demo-overall-subj-subset
# Take response-level subset for the following analyses
t_df <- ms_subjs
```

We briefly examined the screening performance, positive screen counts, and screens with recorded intent to report in this section.

```{r}
#| label: sec1-t2-demo-overall-subj-overview
# Present Screened, Positive Screen, and Report Intent Counts for Section
## Name columns of interest
t_vars <- c('dt_screened', 'dt_positive', 'dt_aps_reported')

## Generate table counting TRUE/FALSE values
count_table <- tibble::tibble(
  ### Start with the variable names 
  var_name = t_vars
  ) |>
  ### Add counts of the True, False, and Missing values
  dplyr::bind_cols(
    t_df |>
      dplyr::select(dplyr::all_of(t_vars)) |>
      #### Convert boolean/logical values to character, so NA is not omitted
      dplyr::mutate(dplyr::across(
        dplyr::everything(), 
        ~dplyr::case_when(
          is.na(.x) ~ "Missing",
          .x ~ "True",
          TRUE ~ "False"
        ))
      ) |>
      #### Get counts of the values into the table
      purrr::map_df(table)
  ) |>
  ### Add a row-wise total
  dplyr::rowwise() |>
  dplyr::mutate(
    total = sum(dplyr::c_across(False:Missing), na.rm = T)
    ) |>
  dplyr::ungroup()

## Present table
count_table
```

We also calculated summary statistics for the number of responses for each subject.

```{r}
#| label: sec1-t2-demo-overall-subj-numresps
get_cont_summary(t_df$num_resps) |>
  dplyr::rename_at('summary_text', ~'Responses per Subject')
```

##### Age

We calculated summary statistics for calculated age.

```{r}
#| label: sec1-t2-demo-all-subj-age-summ
# Get Summary Statistics for Age, Subject-Level
get_cont_summary(t_df$age_avg) |>
  dplyr::rename_at('summary_text', ~'Overall (All Responses)')
```

We used a histogram to broadly examine the distribution of values for age. Values demonstrated a significant left skew, and were not approximately normally distributed

```{r}
#| label: sec1-t2-demo-all-subj-age-hist-f0-2
# Figure 0.2: Distribution of Age, Overall, Subject-Level
## Create Histogram
plot <- ggplot2::ggplot(
  t_df, 
  ggplot2::aes(
    x = age_avg, y = ggplot2::after_stat(density),
  )) +
  ggplot2::scale_alpha(guide = "none") +
  ggplot2::geom_histogram(binwidth = 1, position = 'identity') +
  ### Convert y-axis scale to a percent
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ### Labels
  ggplot2::labs(
    title="Distribution of Age, Overall, Subject-Level",
    x= "Average Calculated Age at Encounter (Years)", 
    y = "Frequency (%)") +
  ### Colors
  ggplot2::scale_fill_brewer(palette="Spectral")

## Save plot
ggplot2::ggsave(
  filename = paste0(
    plot_path, 
    "f0-2_age-overall-subj-hist.png"
    ),
  plot = plot
  )

## Display plot
plot
```

There was no subset of the US Census that provided age values for those above 65, which would be required for statistical testing.

##### Sex

We calculated summary statistics for sex.

```{r}
#| label: sec1-t2-demo-all-subj-sex-summ
# Get Summary Statistics for Sex, Subject-Level
## Calculate summary statistics
obs <- get_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      sex_cat = ifelse(is.na(sex_cat), 'missing', sex_cat)
    ),
  "sex_cat",
  .val_order = sex_val_list
  )

## Display table
obs |>
  dplyr::select(value_name, text)
```

We performed Chi-Square and Fisher's Exact test to compare these values to the US Census Data.

```{r}
#| label: sec1-t2-demo-all-subj-sex-stats
# Chi-Square and Fisher's Exact test, Census Comparison
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, n) |>
  dplyr::filter(value_name != "TOTAL") |>
  ## Add Census Percentages:
  ## Male, Female, UTA, Missing
  dplyr::mutate(
    ## Percentages from US Census: 
    ## (Male, Female, UTA, Missing)
    probs = c(0.512, (1-0.512), 0, 0),
    ## Predicted counts from percentages
    preds = sum(n) * probs),
  .counts_a_var = 'n',
  .counts_b_var = 'preds',
  .probs_b_var = 'probs',
  .value_var = 'value_name',
  .omit_vals = c('Unable to Assess', 'Missing (NA)')
  )
```


##### Race

We calculated summary statistics for race.

```{r}
#| label: sec1-t2-demo-all-subj-race-summ
# Get Summary Statistics for Race, Subject-Level
## Calculate summary statistics
obs <- get_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      race_cat = ifelse(is.na(race_cat), 'missing', race_cat)
    ),
  "race_cat",
  .val_order = race_val_list
  )

## Display table
obs |>
  dplyr::select(value_name, text)
```

We performed Chi-Square and Fisher's Exact test to compare these values to the US Census Data.

```{r}
#| label: sec1-t2-demo-all-subj-race-stats
# Chi-Square and Fisher's Exact test, Census Comparison
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, n) |>
  dplyr::filter(value_name != "TOTAL") |>
  ## Add Census Percentages:
  ## White, Black, Asian, NHPI, AIAN, MENA, Other, Multiracial, Missing
  dplyr::mutate(
    ## Percentages from US Census: 
    ## (White, Black, Asian, NHPI, AIAN, MENA, Other, Multiracial, Missing)
    probs = c(0.558, 0.188, 0.049, 0.001, 0.005, 0, 0.113, 0.086, 0),
    ## Predicted counts from percentages
    preds = sum(n) * probs),
  .counts_a_var = 'n',
  .counts_b_var = 'preds',
  .probs_b_var = 'probs',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```

Of note, "Middle Eastern or North African" was not provided in Census Data. We performed additional sensitivity testing when combining this category into "Other Race".

```{r}
#| label: sec1-t2-demo-all-subj-race-stats-menaomit
# Chi-Square and Fisher's Exact test, Census Comparison, MENA/Other Combined
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, n) |>
    ## Combine MENA into Other
    dplyr::mutate(
      n = ifelse(
        value_name == "Other Race",
        obs[obs$value_name == "Other Race",]$n + 
          obs[obs$value_name == "Middle Eastern or North African",]$n,
        n
      )
    ) |>
    dplyr::filter(
      !value_name %in% c("TOTAL", "Middle Eastern or North African")
      ) |>
    ## Add Census Percentages:
    ### White, Black, Asian, NHPI, AIAN, MENA/Other, Multiracial, Missing
    dplyr::mutate(
      ### Percentages from US Census: 
      ### (White, Black, Asian, NHPI, AIAN, MENA/Other, Multiracial, Missing)
      probs = c(0.558, 0.188, 0.049, 0.001, 0.005, 0.113, 0.086, 0),
      ### Predicted counts from percentages
      preds = sum(n) * probs
      ),
  .counts_a_var = 'n',
  .counts_b_var = 'preds',
  .probs_b_var = 'probs',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```

##### Ethnicity

We calculated summary statistics for ethnicity.

```{r}
#| label: sec1-t2-demo-all-subj-ethn-summ
# Get Summary Statistics for Ethnicity, Subject-Level
## Calculate summary statistics
obs <- get_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      hispanic = dplyr::case_when(
        is.na(hispanic) ~ 'missing',
        hispanic ~ 'hispanic',
        !hispanic ~ 'nonhispanic'
      )
    ),
  "hispanic",
  .val_order = hispanic_val_list
  )

## Display table
obs |>
  dplyr::select(value_name, text)
```

We performed Chi-Square and Fisher's Exact test to compare these values to the US Census Data.

```{r}
#| label: sec1-t2-demo-all-subj-ethn-stats
# Chi-Square and Fisher's Exact test, Census Comparison
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, n) |>
  dplyr::filter(value_name != "TOTAL") |>
  ## Add Census Percentages:
  ## Hispanic, Non-Hispanic, Missing
  dplyr::mutate(
    ## Percentages from US Census: 
    ## (Hispanic, Non-Hispanic, Missing)
    probs = c(0.353, (1-0.353), 0),
    ## Predicted counts from percentages
    preds = sum(n) * probs),
  .counts_a_var = 'n',
  .counts_b_var = 'preds',
  .probs_b_var = 'probs',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```

### By Screening Performance

#### Table 1.3: Response-Level (#sec1-t3-demo-screen-resp)

We wished to examine demographic differences between responses that did and did not receive a DETECT screening. We stored this internally as Table 1.3.

```{r}
#| label: sec1-t3-demo-screen-resp-subset
# Take response-level subset for the following analyses
t_df <- ms_records |>
  ## Drop "Duplicate" flagged records
  dplyr::filter(!dup_drop) |>
  ## Convert grouping variable to text for table functions
  dplyr::mutate(
    dt_screened = dplyr::case_when(
      dt_screened ~ 't',
      !dt_screened ~ 'f'
    )
  )

## Subset-specific group order for tables
t_group_order = list(t = 'Screened', f = 'Not Screened')
```


##### Age

We calculated summary statistics for calculated age.

```{r}
#| label: sec1-t3-demo-screen-resp-age-summ
# Get Summary Statistics for Age by Screening Status, Response-Level
get_group_cont_summary(
  .df = t_df,
  .var_name = "age_calc",
  .group_var = "dt_screened",
  .group_order = t_group_order
  ) 
```

We used a histogram to broadly examine the distribution of values for age. Values demonstrated a significant left skew, and were not approximately normally distributed

```{r}
#| label: sec1-t3-demo-screen-resp-age-hist-f0-3
# Figure 0.3: Distribution of Age by Screening Status, Response-Level
## Create Histogram
plot <- ggplot2::ggplot(
  t_df |>
    dplyr::mutate(
      dt_screened = factor(
        dt_screened, levels = names(t_group_order),
        labels = as.character(t_group_order), ordered = T
        )
    ), 
  ggplot2::aes(
    x = age_calc, fill = dt_screened, y = ggplot2::after_stat(density),
    alpha = 0.5
  )) +
  ggplot2::scale_alpha(guide = "none") +
  ggplot2::geom_histogram(binwidth = 1, position = 'identity') +
  ### Convert y-axis scale to a percent
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ### Labels
  ggplot2::labs(
    title="Distribution of Age by Screening Status, Response-Level",
    x= "Calculated Age at Encounter (Years)", 
    y = "Frequency (%)",
    fill = "Screening Status"
    ) +
  ### Colors
  ggplot2::scale_fill_brewer(palette="Spectral")

## Save plot
ggplot2::ggsave(
  filename = paste0(
    plot_path,
    "f0-3_age-screen-resp-hist.png"
    ),
  plot = plot
  )

## Display plot
plot
```

We performed Student T-Test and Wilcox Rank-Sum testing to assess for a statistical association.

```{r}
#| label: sec1-t3-demo-screen-resp-age-stats
# T-Test and Wilcox Rank-Sum for Age, by Screening Status
get_twos_num_stats(
  .df = t_df |>
    dplyr::mutate(
      dt_screened = dplyr::case_when(
        dt_screened == 't' ~ T,
        dt_screened == 'f' ~ F
      )
    ),
  .var_name = 'age_calc',
  .binary_var = 'dt_screened'
)
```

##### Sex

We calculated summary statistics for sex.

```{r}
#| label: sec1-t3-demo-screen-resp-sex-summ
# Get Summary Statistics for Sex, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      sex_cat = ifelse(is.na(sex_cat), 'missing', sex_cat)
    ),
  "sex_cat",
  .val_order = sex_val_list,
  .group_var = "dt_screened",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t3-demo-screen-resp-sex-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Unable to Assess', 'Missing (NA)')
  )
```

##### Race

We calculated summary statistics for race.

```{r}
#| label: sec1-t3-demo-screen-resp-race-summ
# Get Summary Statistics for Race, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      race_cat = ifelse(is.na(race_cat), 'missing', race_cat)
    ),
  "race_cat",
  .val_order = race_val_list,
  .group_var = "dt_screened",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t3-demo-screen-resp-race-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```


##### Ethnicity

We calculated summary statistics for ethnicity.

```{r}
#| label: sec1-t3-demo-screen-resp-ethn-summ
# Get Summary Statistics for Ethnicity, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      hispanic = dplyr::case_when(
        is.na(hispanic) ~ 'missing',
        hispanic ~ 'hispanic',
        !hispanic ~ 'nonhispanic'
      )
    ),
  "hispanic",
  .val_order = hispanic_val_list,
  .group_var = "dt_screened",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t3-demo-screen-resp-ethn-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```

#### Table 1.4: Subject-Level (#sec1-t4-demo-screen-subj)

We wished to examine demographic differences between subjects that did and did not receive a DETECT screening. We stored this internally as Table 1.4.

```{r}
#| label: sec1-t4-demo-screen-subj-subset
# Take response-level subset for the following analyses
t_df <- ms_subjs |>
  ## Convert grouping variable to text for table functions
  dplyr::mutate(
    dt_screened = dplyr::case_when(
      dt_screened ~ 't',
      !dt_screened ~ 'f'
    )
  )

## Subset-specific group order for tables
t_group_order = list(t = 'Screened', f = 'Not Screened')
```


##### Age

We calculated summary statistics for calculated age.

```{r}
#| label: sec1-t4-demo-screen-subj-age-summ
# Get Summary Statistics for Age by Screening Status, Subject-Level
get_group_cont_summary(
  .df = t_df,
  .var_name = "age_avg",
  .group_var = "dt_screened",
  .group_order = t_group_order
  ) 
```

We used a histogram to broadly examine the distribution of values for age. Values demonstrated a significant left skew, and were not approximately normally distributed

```{r}
#| label: sec1-t4-demo-screen-subj-age-hist-f0-4
# Figure 0.4: Distribution of Age by Screening Status, Subject-Level
## Create Histogram
plot <- ggplot2::ggplot(
  t_df |>
    dplyr::mutate(
      dt_screened = factor(
        dt_screened, levels = names(t_group_order),
        labels = as.character(t_group_order), ordered = T
        )
    ), 
  ggplot2::aes(
    x = age_avg, fill = dt_screened, y = ggplot2::after_stat(density),
    alpha = 0.5
  )) +
  ggplot2::scale_alpha(guide = "none") +
  ggplot2::geom_histogram(binwidth = 1, position = 'identity') +
  ### Convert y-axis scale to a percent
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ### Labels
  ggplot2::labs(
    title="Distribution of Age by Screening Status, Subject-Level",
    x= "Average Calculated Age at Encounter (Years)", 
    y = "Frequency (%)",
    fill = "Screening Status"
    ) +
  ### Colors
  ggplot2::scale_fill_brewer(palette="Spectral")

## Save plot
ggplot2::ggsave(
  filename = paste0(
    plot_path,
    "f0-4_age-screen-subj-hist.png"
    ),
  plot = plot
  )

## Display plot
plot
```

We performed Student T-Test and Wilcox Rank-Sum testing to assess for a statistical association.

```{r}
#| label: sec1-t4-demo-screen-subj-age-stats
# T-Test and Wilcox Rank-Sum for Age, by Screening Status
get_twos_num_stats(
  .df = t_df |>
    dplyr::mutate(
      dt_screened = dplyr::case_when(
        dt_screened == 't' ~ T,
        dt_screened == 'f' ~ F
      )
    ),
  .var_name = 'age_avg',
  .binary_var = 'dt_screened'
)
```

##### Sex

We calculated summary statistics for sex.

```{r}
#| label: sec1-t4-demo-screen-subj-sex-summ
# Get Summary Statistics for Sex, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      sex_cat = ifelse(is.na(sex_cat), 'missing', sex_cat)
    ),
  "sex_cat",
  .val_order = sex_val_list,
  .group_var = "dt_screened",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t4-demo-screen-subj-sex-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Unable to Assess', 'Missing (NA)')
  )
```

##### Race

We calculated summary statistics for race.

```{r}
#| label: sec1-t4-demo-screen-subj-race-summ
# Get Summary Statistics for Race, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      race_cat = ifelse(is.na(race_cat), 'missing', race_cat)
    ),
  "race_cat",
  .val_order = race_val_list,
  .group_var = "dt_screened",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t4-demo-screen-subj-race-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```

##### Ethnicity

We calculated summary statistics for ethnicity.

```{r}
#| label: sec1-t4-demo-screen-subj-ethn-summ
# Get Summary Statistics for Ethnicity, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      hispanic = dplyr::case_when(
        is.na(hispanic) ~ 'missing',
        hispanic ~ 'hispanic',
        !hispanic ~ 'nonhispanic'
      )
    ),
  "hispanic",
  .val_order = hispanic_val_list,
  .group_var = "dt_screened",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t4-demo-screen-subj-ethn-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```

### By Screening Result (Positive/Negative)

#### Table 1.5: Response-Level (#sec1-t5-demo-result-resp)

We wished to examine demographic differences between responses that received positive and negative DETECT screening outcomes, with a "positive" outcome defined as a "yes" response to at least one DETECT Tool question item. We stored this internally as Table 1.5.

```{r}
#| label: sec1-t5-demo-result-resp-subset
# Take response-level subset for the following analyses
t_df <- ms_records |>
  ## Drop "Duplicate" flagged records
  dplyr::filter(!dup_drop) |>
  ## Select only records with a DETECT screening
  dplyr::filter(dt_screened) |>
  ## Convert grouping variable to text for table functions
  dplyr::mutate(
    dt_positive = dplyr::case_when(
      dt_positive ~ 't',
      !dt_positive ~ 'f'
    )
  )

## Subset-specific group order for tables
t_group_order = list(t = 'Positive Screen', f = 'Negative Screen')
```


##### Age

We calculated summary statistics for calculated age.

```{r}
#| label: sec1-t5-demo-result-resp-age-summ
# Get Summary Statistics for Age by Screening Result, Response-Level
get_group_cont_summary(
  .df = t_df,
  .var_name = "age_calc",
  .group_var = "dt_positive",
  .group_order = t_group_order
  ) 
```

We used a histogram to broadly examine the distribution of values for age. Values demonstrated a significant left skew, and were not approximately normally distributed

```{r}
#| label: sec1-t5-demo-result-resp-age-hist-f0-5
# Figure 0.5: Distribution of Age by Screening Result, Response-Level
## Create Histogram
plot <- ggplot2::ggplot(
  t_df |>
    dplyr::mutate(
      dt_positive = factor(
        dt_positive, levels = names(t_group_order),
        labels = as.character(t_group_order), ordered = T
        )
    ), 
  ggplot2::aes(
    x = age_calc, fill = dt_positive, y = ggplot2::after_stat(density),
    alpha = 0.5
  )) +
  ggplot2::scale_alpha(guide = "none") +
  ggplot2::geom_histogram(binwidth = 1, position = 'identity') +
  ### Convert y-axis scale to a percent
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ### Labels
  ggplot2::labs(
    title="Distribution of Age by Screening Result, Response-Level",
    x= "Calculated Age at Encounter (Years)", 
    y = "Frequency (%)",
    fill = "Screening Result"
    ) +
  ### Colors
  ggplot2::scale_fill_brewer(palette="Spectral")

## Save plot
ggplot2::ggsave(
  filename = paste0(
    plot_path,
    "f0-5_age-result-resp-hist.png"
    ),
  plot = plot
  )

## Display plot
plot
```

We performed Student T-Test and Wilcox Rank-Sum testing to assess for a statistical association.

```{r}
#| label: sec1-t5-demo-result-resp-age-stats
# T-Test and Wilcox Rank-Sum for Age, by Screening Result
get_twos_num_stats(
  .df = t_df |>
    dplyr::mutate(
      dt_positive = dplyr::case_when(
        dt_positive == 't' ~ T,
        dt_positive == 'f' ~ F
      )
    ),
  .var_name = 'age_calc',
  .binary_var = 'dt_positive'
)
```

##### Sex

We calculated summary statistics for sex.

```{r}
#| label: sec1-t5-demo-result-resp-sex-summ
# Get Summary Statistics for Sex, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      sex_cat = ifelse(is.na(sex_cat), 'missing', sex_cat)
    ),
  "sex_cat",
  .val_order = sex_val_list,
  .group_var = "dt_positive",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t5-demo-result-resp-sex-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Unable to Assess', 'Missing (NA)')
  )
```

##### Race

We calculated summary statistics for race.

```{r}
#| label: sec1-t5-demo-result-resp-race-summ
# Get Summary Statistics for Race, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      race_cat = ifelse(is.na(race_cat), 'missing', race_cat)
    ),
  "race_cat",
  .val_order = race_val_list,
  .group_var = "dt_positive",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t5-demo-result-resp-race-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```

##### Ethnicity

We calculated summary statistics for ethnicity.

```{r}
#| label: sec1-t5-demo-result-resp-ethn-summ
# Get Summary Statistics for Ethnicity, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      hispanic = dplyr::case_when(
        is.na(hispanic) ~ 'missing',
        hispanic ~ 'hispanic',
        !hispanic ~ 'nonhispanic'
      )
    ),
  "hispanic",
  .val_order = hispanic_val_list,
  .group_var = "dt_positive",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t5-demo-result-resp-ethn-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```

#### Table 1.6: Subject-Level (#sec1-t6-demo-result-subj)

We wished to examine demographic differences between subjects that received positive and negative DETECT screening outcomes, with a "positive" outcome defined as a "yes" response to at least one DETECT Tool question item at at least one screening. We stored this internally as Table 1.6.

```{r}
#| label: sec1-t6-demo-result-subj-subset
# Take response-level subset for the following analyses
t_df <- ms_subjs |>
  ## Filter to only subjects with at least one screening
  dplyr::filter(dt_screened) |>
  ## Convert grouping variable to text for table functions
  dplyr::mutate(
    dt_positive = dplyr::case_when(
      dt_positive ~ 't',
      !dt_positive ~ 'f'
    )
  )

## Subset-specific group order for tables
t_group_order = list(t = 'Positive Screen', f = 'Negative Screen')
```


##### Age

We calculated summary statistics for calculated age.

```{r}
#| label: sec1-t6-demo-result-subj-age-summ
# Get Summary Statistics for Age by Screening Result, Subject-Level
get_group_cont_summary(
  .df = t_df,
  .var_name = "age_avg",
  .group_var = "dt_positive",
  .group_order = t_group_order
  ) 
```

We used a histogram to broadly examine the distribution of values for age. Values demonstrated a significant left skew, and were not approximately normally distributed

```{r}
#| label: sec1-t6-demo-result-subj-age-hist-f0-6
# Figure 0.6: Distribution of Age by Screening Result, Subject-Level
## Create Histogram
plot <- ggplot2::ggplot(
  t_df |>
    dplyr::mutate(
      dt_positive = factor(
        dt_positive, levels = names(t_group_order),
        labels = as.character(t_group_order), ordered = T
        )
    ), 
  ggplot2::aes(
    x = age_avg, fill = dt_positive, y = ggplot2::after_stat(density),
    alpha = 0.5
  )) +
  ggplot2::scale_alpha(guide = "none") +
  ggplot2::geom_histogram(binwidth = 1, position = 'identity') +
  ### Convert y-axis scale to a percent
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ### Labels
  ggplot2::labs(
    title="Distribution of Age by Screening Result, Subject-Level",
    x= "Average Calculated Age at Encounter (Years)", 
    y = "Frequency (%)",
    fill = "Screening Result"
    ) +
  ### Colors
  ggplot2::scale_fill_brewer(palette="Spectral")

## Save plot
ggplot2::ggsave(
  filename = paste0(
    plot_path,
    "f0-6_age-result-subj-hist.png"
    ),
  plot = plot
  )

## Display plot
plot
```

We performed Student T-Test and Wilcox Rank-Sum testing to assess for a statistical association.

```{r}
#| label: sec1-t6-demo-result-subj-age-stats
# T-Test and Wilcox Rank-Sum for Age, by Screening Status
get_twos_num_stats(
  .df = t_df |>
    dplyr::mutate(
      dt_positive = dplyr::case_when(
        dt_positive == 't' ~ T,
        dt_positive == 'f' ~ F
      )
    ),
  .var_name = 'age_avg',
  .binary_var = 'dt_positive'
)
```

##### Sex

We calculated summary statistics for sex.

```{r}
#| label: sec1-t6-demo-result-subj-sex-summ
# Get Summary Statistics for Sex, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      sex_cat = ifelse(is.na(sex_cat), 'missing', sex_cat)
    ),
  "sex_cat",
  .val_order = sex_val_list,
  .group_var = "dt_positive",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t6-demo-result-subj-sex-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Unable to Assess', 'Missing (NA)')
  )
```

##### Race

We calculated summary statistics for race.

```{r}
#| label: sec1-t6-demo-result-subj-race-summ
# Get Summary Statistics for Race, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      race_cat = ifelse(is.na(race_cat), 'missing', race_cat)
    ),
  "race_cat",
  .val_order = race_val_list,
  .group_var = "dt_positive",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t6-demo-result-subj-race-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```

##### Ethnicity

We calculated summary statistics for ethnicity.

```{r}
#| label: sec1-t6-demo-result-subj-ethn-summ
# Get Summary Statistics for Ethnicity, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      hispanic = dplyr::case_when(
        is.na(hispanic) ~ 'missing',
        hispanic ~ 'hispanic',
        !hispanic ~ 'nonhispanic'
      )
    ),
  "hispanic",
  .val_order = hispanic_val_list,
  .group_var = "dt_positive",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t6-demo-result-subj-ethn-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```

### By Reporting Intent

#### All Screenings

##### Table 1.7: Response-Level (#sec1-t7-demo-intent-all-resp)

We wished to examine demographic differences between responses that did and did not have a DETECT Tool recorded intent to report. We stored this internally as Table 1.7.

```{r}
#| label: sec1-t7-demo-intent-all-resp-subset
# Take response-level subset for the following analyses
t_df <- ms_records |>
  ## Drop "Duplicate" flagged records
  dplyr::filter(!dup_drop) |>
  ## Select only records with a DETECT screening
  dplyr::filter(dt_screened) |>
  ## Convert grouping variable to text for table functions
  dplyr::mutate(
    dt_aps_reported = dplyr::case_when(
      dt_aps_reported ~ 't',
      !dt_aps_reported ~ 'f'
    )
  )

## Subset-specific group order for tables
t_group_order = list(t = 'Intent to Report', f = 'No Intent')
```

###### Age

We calculated summary statistics for calculated age.

```{r}
#| label: sec1-t7-demo-intent-all-resp-age-summ
# Get Summary Statistics for Age by Intent to Report, Response-Level
get_group_cont_summary(
  .df = t_df,
  .var_name = "age_calc",
  .group_var = "dt_aps_reported",
  .group_order = t_group_order
  ) 
```

We used a histogram to broadly examine the distribution of values for age. Values demonstrated a significant left skew, and were not approximately normally distributed

```{r}
#| label: sec1-t7-demo-intent-all-resp-age-hist-f0-7
# Figure 0.7: Distribution of Age by Intent to Report, Response-Level
## Create Histogram
plot <- ggplot2::ggplot(
  t_df |>
    dplyr::mutate(
      dt_aps_reported = factor(
        dt_aps_reported, levels = names(t_group_order),
        labels = as.character(t_group_order), ordered = T
        )
    ), 
  ggplot2::aes(
    x = age_calc, fill = dt_aps_reported, y = ggplot2::after_stat(density),
    alpha = 0.5
  )) +
  ggplot2::scale_alpha(guide = "none") +
  ggplot2::geom_histogram(binwidth = 1, position = 'identity') +
  ### Convert y-axis scale to a percent
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ### Labels
  ggplot2::labs(
    title="Distribution of Age by Intent to Report, Response-Level",
    x= "Calculated Age at Encounter (Years)", 
    y = "Frequency (%)",
    fill = "Intent to Report"
    ) +
  ### Colors
  ggplot2::scale_fill_brewer(palette="Spectral")

## Save plot
ggplot2::ggsave(
  filename = paste0(
    plot_path,
    "f0-7_age-intent-all-resp-hist.png"
    ),
  plot = plot
  )

## Display plot
plot
```

We performed Student T-Test and Wilcox Rank-Sum testing to assess for a statistical association.

```{r}
#| label: sec1-t7-demo-intent-all-resp-age-stats
# T-Test and Wilcox Rank-Sum for Age, by Intent to Report
get_twos_num_stats(
  .df = t_df |>
    dplyr::mutate(
      dt_aps_reported = dplyr::case_when(
        dt_aps_reported == 't' ~ T,
        dt_aps_reported == 'f' ~ F
      )
    ),
  .var_name = "age_calc",
  .binary_var = "dt_aps_reported"
)
```

###### Sex

We calculated summary statistics for sex.

```{r}
#| label: sec1-t7-demo-intent-all-resp-sex-summ
# Get Summary Statistics for Sex, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      sex_cat = ifelse(is.na(sex_cat), 'missing', sex_cat)
    ),
  "sex_cat",
  .val_order = sex_val_list,
  .group_var = "dt_aps_reported",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t7-demo-intent-all-resp-sex-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Unable to Assess', 'Missing (NA)')
  )
```

###### Race

We calculated summary statistics for race.

```{r}
#| label: sec1-t7-demo-intent-all-resp-race-summ
# Get Summary Statistics for Race, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      race_cat = ifelse(is.na(race_cat), 'missing', race_cat)
    ),
  "race_cat",
  .val_order = race_val_list,
  .group_var = "dt_aps_reported",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t7-demo-intent-all-resp-race-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```

###### Ethnicity

We calculated summary statistics for ethnicity.

```{r}
#| label: sec1-t7-demo-intent-all-resp-ethn-summ
# Get Summary Statistics for Ethnicity, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      hispanic = dplyr::case_when(
        is.na(hispanic) ~ 'missing',
        hispanic ~ 'hispanic',
        !hispanic ~ 'nonhispanic'
      )
    ),
  "hispanic",
  .val_order = hispanic_val_list,
  .group_var = "dt_aps_reported",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t7-demo-intent-all-resp-ethn-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```

##### Table 1.8: Subject-Level (#sec1-t8-demo-intent-all-subj)

We wished to examine demographic differences between subjects that did and did not have a DETECT Tool recorded intent to report. We stored this internally as Table 1.8.

```{r}
#| label: sec1-t8-demo-intent-all-subj-subset
# Take response-level subset for the following analyses
t_df <- ms_subjs |>
  ## Filter to only subjects with at least one screening
  dplyr::filter(dt_screened) |>
  ## Convert grouping variable to text for table functions
  dplyr::mutate(
    dt_aps_reported = dplyr::case_when(
      dt_aps_reported ~ 't',
      !dt_aps_reported ~ 'f'
    )
  )

## Subset-specific group order for tables
t_group_order = list(t = 'Intent to Report', f = 'No Intent')
```


###### Age

We calculated summary statistics for calculated age.

```{r}
#| label: sec1-t8-demo-intent-all-subj-age-summ
# Get Summary Statistics for Age by Intent to Report, Subject-Level
get_group_cont_summary(
  .df = t_df,
  .var_name = "age_avg",
  .group_var = "dt_aps_reported",
  .group_order = t_group_order
  ) 
```

We used a histogram to broadly examine the distribution of values for age. Values demonstrated a significant left skew, and were not approximately normally distributed

```{r}
#| label: sec1-t8-demo-intent-all-subj-age-hist-f0-8
# Figure 0.8: Distribution of Age by Intent to Report, Subject-Level
## Create Histogram
plot <- ggplot2::ggplot(
  t_df |>
    dplyr::mutate(
      dt_aps_reported = factor(
        dt_aps_reported, levels = names(t_group_order),
        labels = as.character(t_group_order), ordered = T
        )
    ), 
  ggplot2::aes(
    x = age_avg, fill = dt_aps_reported, y = ggplot2::after_stat(density),
    alpha = 0.5
  )) +
  ggplot2::scale_alpha(guide = "none") +
  ggplot2::geom_histogram(binwidth = 1, position = 'identity') +
  ### Convert y-axis scale to a percent
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ### Labels
  ggplot2::labs(
    title="Distribution of Age by Intent to Report, Subject-Level",
    x= "Average Calculated Age at Encounter (Years)", 
    y = "Frequency (%)",
    fill = "Intent to Report"
    ) +
  ### Colors
  ggplot2::scale_fill_brewer(palette="Spectral")

## Save plot
ggplot2::ggsave(
  filename = paste0(
    plot_path,
    "f0-8_age-intent-all-subj-hist.png"
    ),
  plot = plot
  )

## Display plot
plot
```

We performed Student T-Test and Wilcox Rank-Sum testing to assess for a statistical association.

```{r}
#| label: sec1-t8-demo-intent-all-subj-age-stats
# T-Test and Wilcox Rank-Sum for Age, by Screening Status
get_twos_num_stats(
  .df = t_df |>
    dplyr::mutate(
      dt_aps_reported = dplyr::case_when(
        dt_aps_reported == 't' ~ T,
        dt_aps_reported == 'f' ~ F
      )
    ),
  .var_name = "age_avg",
  .binary_var = "dt_aps_reported"
)
```

###### Sex

We calculated summary statistics for sex.

```{r}
#| label: sec1-t8-demo-intent-all-subj-sex-summ
# Get Summary Statistics for Sex, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      sex_cat = ifelse(is.na(sex_cat), 'missing', sex_cat)
    ),
  "sex_cat",
  .val_order = sex_val_list,
  .group_var = "dt_aps_reported",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t8-demo-intent-all-subj-sex-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Unable to Assess', 'Missing (NA)')
  )
```

###### Race

We calculated summary statistics for race.

```{r}
#| label: sec1-t8-demo-intent-all-subj-race-summ
# Get Summary Statistics for Race, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      race_cat = ifelse(is.na(race_cat), 'missing', race_cat)
    ),
  "race_cat",
  .val_order = race_val_list,
  .group_var = "dt_aps_reported",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t8-demo-intent-all-subj-race-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```

###### Ethnicity

We calculated summary statistics for ethnicity.

```{r}
#| label: sec1-t8-demo-intent-all-subj-ethn-summ
# Get Summary Statistics for Ethnicity, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      hispanic = dplyr::case_when(
        is.na(hispanic) ~ 'missing',
        hispanic ~ 'hispanic',
        !hispanic ~ 'nonhispanic'
      )
    ),
  "hispanic",
  .val_order = hispanic_val_list,
  .group_var = "dt_aps_reported",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t8-demo-intent-all-subj-ethn-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```

##### Table 1.9: Positive Screenings, Response-Level (#sec1-t9-demo-intent-pos-resp)

We wished to examine demographic differences between responses with positive DETECT screenings that did and not have a DETECT Tool recorded intent to report. We stored this internally as Table 1.9.

```{r}
#| label: sec1-t9-demo-intent-pos-resp-subset
# Take response-level subset for the following analyses
t_df <- ms_records |>
  ## Drop "Duplicate" flagged records
  dplyr::filter(!dup_drop) |>
  ## Select only records with a DETECT screening
  dplyr::filter(dt_screened) |>
  ## Select only positive DETECT screenings
  dplyr::filter(dt_positive) |>
  ## Convert grouping variable to text for table functions
  dplyr::mutate(
    dt_aps_reported = dplyr::case_when(
      dt_aps_reported ~ 't',
      !dt_aps_reported ~ 'f'
    )
  )

## Subset-specific group order for tables
t_group_order = list(t = 'Intent to Report', f = 'No Intent')
```

###### Age

We calculated summary statistics for calculated age.

```{r}
#| label: sec1-t9-demo-intent-pos-resp-age-summ
# Get Summary Statistics for Age by Intent to Report, Response-Level
get_group_cont_summary(
  .df = t_df,
  .var_name = "age_calc",
  .group_var = "dt_aps_reported",
  .group_order = t_group_order
  ) 
```

We used a histogram to broadly examine the distribution of values for age. Values demonstrated a significant left skew, and were not approximately normally distributed

```{r}
#| label: sec1-t9-demo-intent-pos-resp-age-hist-f0-9
# Figure 0.9: Distribution of Age by Intent to Report, Positive Screenings, 
# Response-Level
## Create Histogram
plot <- ggplot2::ggplot(
  t_df |>
    dplyr::mutate(
      dt_aps_reported = factor(
        dt_aps_reported, levels = names(t_group_order),
        labels = as.character(t_group_order), ordered = T
        )
    ), 
  ggplot2::aes(
    x = age_calc, fill = dt_aps_reported, y = ggplot2::after_stat(density),
    alpha = 0.5
  )) +
  ggplot2::scale_alpha(guide = "none") +
  ggplot2::geom_histogram(binwidth = 1, position = 'identity') +
  ### Convert y-axis scale to a percent
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ### Labels
  ggplot2::labs(
    title = paste0(
      "Distribution of Age by Intent to Report, Positive Screenings,",
      " Response-Level"
      ),
    x = "Calculated Age at Encounter (Years)", 
    y = "Frequency (%)",
    fill = "Intent to Report"
    ) +
  ### Colors
  ggplot2::scale_fill_brewer(palette="Spectral")

## Save plot
ggplot2::ggsave(
  filename = paste0(
    plot_path,
    "f0-9_age-intent-pos-resp-hist.png"
    ),
  plot = plot
  )

## Display plot
plot
```

We performed Student T-Test and Wilcox Rank-Sum testing to assess for a statistical association.

```{r}
#| label: sec1-t9-demo-intent-pos-resp-age-stats
# T-Test and Wilcox Rank-Sum for Age, by Intent to Report
get_twos_num_stats(
  .df = t_df |>
    dplyr::mutate(
      dt_aps_reported = dplyr::case_when(
        dt_aps_reported == 't' ~ T,
        dt_aps_reported == 'f' ~ F
      )
    ),
  .var_name = "age_calc",
  .binary_var = "dt_aps_reported"
)
```

###### Sex

We calculated summary statistics for sex.

```{r}
#| label: sec1-t9-demo-intent-pos-resp-sex-summ
# Get Summary Statistics for Sex, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      sex_cat = ifelse(is.na(sex_cat), 'missing', sex_cat)
    ),
  "sex_cat",
  .val_order = sex_val_list,
  .group_var = "dt_aps_reported",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t9-demo-intent-pos-resp-sex-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Unable to Assess', 'Missing (NA)')
  )
```

###### Race

We calculated summary statistics for race.

```{r}
#| label: sec1-t9-demo-intent-pos-resp-race-summ
# Get Summary Statistics for Race, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      race_cat = ifelse(is.na(race_cat), 'missing', race_cat)
    ),
  "race_cat",
  .val_order = race_val_list,
  .group_var = "dt_aps_reported",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t9-demo-intent-pos-resp-race-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```

###### Ethnicity

We calculated summary statistics for ethnicity.

```{r}
#| label: sec1-t9-demo-intent-pos-resp-ethn-summ
# Get Summary Statistics for Ethnicity, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      hispanic = dplyr::case_when(
        is.na(hispanic) ~ 'missing',
        hispanic ~ 'hispanic',
        !hispanic ~ 'nonhispanic'
      )
    ),
  "hispanic",
  .val_order = hispanic_val_list,
  .group_var = "dt_aps_reported",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t9-demo-intent-pos-resp-ethn-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```

##### Table 1.10: Positive Screenings, Response-Level (#sec1-t10-demo-intent-neg-resp)

We wished to examine demographic differences between responses with negative DETECT screenings that did and not have a DETECT Tool recorded intent to report. We stored this internally as Table 1.10.

```{r}
#| label: sec1-t10-demo-intent-neg-resp-subset
# Take response-level subset for the following analyses
t_df <- ms_records |>
  ## Drop "Duplicate" flagged records
  dplyr::filter(!dup_drop) |>
  ## Select only records with a DETECT screening
  dplyr::filter(dt_screened) |>
  ## Select only negative DETECT screenings
  dplyr::filter(!dt_positive) |>
  ## Convert grouping variable to text for table functions
  dplyr::mutate(
    dt_aps_reported = dplyr::case_when(
      dt_aps_reported ~ 't',
      !dt_aps_reported ~ 'f'
    )
  )

## Subset-specific group order for tables
t_group_order = list(t = 'Intent to Report', f = 'No Intent')
```

###### Age

We calculated summary statistics for calculated age.

```{r}
#| label: sec1-t10-demo-intent-neg-resp-age-summ
# Get Summary Statistics for Age by Intent to Report, Response-Level
get_group_cont_summary(
  .df = t_df,
  .var_name = "age_calc",
  .group_var = "dt_aps_reported",
  .group_order = t_group_order
  ) 
```

We used a histogram to broadly examine the distribution of values for age. Values demonstrated a significant left skew, and were not approximately normally distributed

```{r}
#| label: sec1-t10-demo-intent-neg-resp-age-hist-f0-10
# Figure 0.9: Distribution of Age by Intent to Report, Negative Screenings, 
# Response-Level
## Create Histogram
plot <- ggplot2::ggplot(
  t_df |>
    dplyr::mutate(
      dt_aps_reported = factor(
        dt_aps_reported, levels = names(t_group_order),
        labels = as.character(t_group_order), ordered = T
        )
    ), 
  ggplot2::aes(
    x = age_calc, fill = dt_aps_reported, y = ggplot2::after_stat(density),
    alpha = 0.5
  )) +
  ggplot2::scale_alpha(guide = "none") +
  ggplot2::geom_histogram(binwidth = 1, position = 'identity') +
  ### Convert y-axis scale to a percent
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ### Labels
  ggplot2::labs(
    title = paste0(
      "Distribution of Age by Intent to Report, Negative Screenings,",
      " Response-Level"
      ),
    x = "Calculated Age at Encounter (Years)", 
    y = "Frequency (%)",
    fill = "Intent to Report"
    ) +
  ### Colors
  ggplot2::scale_fill_brewer(palette="Spectral")

## Save plot
ggplot2::ggsave(
  filename = paste0(
    plot_path,
    "f0-10_age-intent-neg-resp-hist.png"
    ),
  plot = plot
  )

## Display plot
plot
```

We performed Student T-Test and Wilcox Rank-Sum testing to assess for a statistical association.

```{r}
#| label: sec1-t10-demo-intent-neg-resp-age-stats
# T-Test and Wilcox Rank-Sum for Age, by Intent to Report
get_twos_num_stats(
  .df = t_df |>
    dplyr::mutate(
      dt_aps_reported = dplyr::case_when(
        dt_aps_reported == 't' ~ T,
        dt_aps_reported == 'f' ~ F
      )
    ),
  .var_name = "age_calc",
  .binary_var = "dt_aps_reported"
)
```

###### Sex

We calculated summary statistics for sex.

```{r}
#| label: sec1-t10-demo-intent-neg-resp-sex-summ
# Get Summary Statistics for Sex, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      sex_cat = ifelse(is.na(sex_cat), 'missing', sex_cat)
    ),
  "sex_cat",
  .val_order = sex_val_list,
  .group_var = "dt_aps_reported",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t10-demo-intent-neg-resp-sex-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Unable to Assess', 'Missing (NA)')
  )
```

###### Race

We calculated summary statistics for race.

```{r}
#| label: sec1-t10-demo-intent-neg-resp-race-summ
# Get Summary Statistics for Race, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      race_cat = ifelse(is.na(race_cat), 'missing', race_cat)
    ),
  "race_cat",
  .val_order = race_val_list,
  .group_var = "dt_aps_reported",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t10-demo-intent-neg-resp-race-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```

###### Ethnicity

We calculated summary statistics for ethnicity.

```{r}
#| label: sec1-t10-demo-intent-neg-resp-ethn-summ
# Get Summary Statistics for Ethnicity, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      hispanic = dplyr::case_when(
        is.na(hispanic) ~ 'missing',
        hispanic ~ 'hispanic',
        !hispanic ~ 'nonhispanic'
      )
    ),
  "hispanic",
  .val_order = hispanic_val_list,
  .group_var = "dt_aps_reported",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t10-demo-intent-neg-resp-ethn-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```


### By Matched APS Intake

#### Response-Level

##### Table 1.11: Any Reporter Type (#sec1-t11-demo-intake-any-resp)

We wished to examine demographic differences between responses that did and did not have a matched APS Intake, with any reporter type. We stored this internally as Table 1.11.

```{r}
#| label: sec1-t11-demo-intake-any-resp-subset
# Take response-level subset for the following analyses
t_df <- ms_records |>
  ## Drop "Duplicate" flagged records
  dplyr::filter(!dup_drop) |>
  ## Select only records with a DETECT screening
  dplyr::filter(dt_screened) |>
  ## Convert grouping variable to text for table functions
  dplyr::mutate(
    aps_intake = dplyr::case_when(
      aps_intake ~ 't',
      !aps_intake ~ 'f'
    )
  )

## Subset-specific group order for tables
t_group_order = list(t = 'Matched APS Intake', f = 'No Matched Intake')
```

###### Age

We calculated summary statistics for calculated age.

```{r}
#| label: sec1-t11-demo-intake-any-resp-age-summ
# Get Summary Statistics for Age by Intake Match (Any), Response-Level
get_group_cont_summary(
  .df = t_df,
  .var_name = "age_calc",
  .group_var = "aps_intake",
  .group_order = t_group_order
  ) 
```

We used a histogram to broadly examine the distribution of values for age. Values demonstrated a significant left skew, and were not approximately normally distributed

```{r}
#| label: sec1-t11-demo-intake-any-resp-age-hist-f0-11
# Figure 0.11: Distribution of Age by Intake Match (Any), Response-Level
## Create Histogram
plot <- ggplot2::ggplot(
  t_df |>
    dplyr::mutate(
      aps_intake = factor(
        aps_intake, levels = names(t_group_order),
        labels = as.character(t_group_order), ordered = T
        )
    ), 
  ggplot2::aes(
    x = age_calc, fill = aps_intake, y = ggplot2::after_stat(density),
    alpha = 0.5
  )) +
  ggplot2::scale_alpha(guide = "none") +
  ggplot2::geom_histogram(binwidth = 1, position = 'identity') +
  ### Convert y-axis scale to a percent
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ### Labels
  ggplot2::labs(
    title="Distribution of Age by Intake Match (Any), Response-Level",
    x= "Calculated Age at Encounter (Years)", 
    y = "Frequency (%)",
    fill = "Matched APS Intake (Any)"
    ) +
  ### Colors
  ggplot2::scale_fill_brewer(palette="Spectral")

## Save plot
ggplot2::ggsave(
  filename = paste0(
    plot_path,
    "f0-11-age-intake-any-resp-hist.png"
    ),
  plot = plot
  )

## Display plot
plot
```

We performed Student T-Test and Wilcox Rank-Sum testing to assess for a statistical association.

```{r}
#| label: sec1-t11-demo-intake-any-resp-age-stats
# T-Test and Wilcox Rank-Sum for Age, by Intake Match (Any)
get_twos_num_stats(
  .df = t_df |>
    dplyr::mutate(
      aps_intake = dplyr::case_when(
        aps_intake == 't' ~ T,
        aps_intake == 'f' ~ F
      )
    ),
  .var_name = "age_calc",
  .binary_var = "aps_intake"
)
```

###### Sex

We calculated summary statistics for sex.

```{r}
#| label: sec1-t11-demo-intake-any-resp-sex-summ
# Get Summary Statistics for Sex, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      sex_cat = ifelse(is.na(sex_cat), 'missing', sex_cat)
    ),
  "sex_cat",
  .val_order = sex_val_list,
  .group_var = "aps_intake",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t11-demo-intake-any-resp-sex-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Unable to Assess', 'Missing (NA)')
  )
```

###### Race

We calculated summary statistics for race.

```{r}
#| label: sec1-t11-demo-intake-any-resp-race-summ
# Get Summary Statistics for Race, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      race_cat = ifelse(is.na(race_cat), 'missing', race_cat)
    ),
  "race_cat",
  .val_order = race_val_list,
  .group_var = "aps_intake",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t11-demo-intake-any-resp-race-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```

###### Ethnicity

We calculated summary statistics for ethnicity.

```{r}
#| label: sec1-t11-demo-intake-any-resp-ethn-summ
# Get Summary Statistics for Ethnicity, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      hispanic = dplyr::case_when(
        is.na(hispanic) ~ 'missing',
        hispanic ~ 'hispanic',
        !hispanic ~ 'nonhispanic'
      )
    ),
  "hispanic",
  .val_order = hispanic_val_list,
  .group_var = "aps_intake",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t11-demo-intake-any-resp-ethn-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```

##### Table 1.12: EMS Possible Reporter Type (#sec1-t12-demo-intake-poss-resp)

We wished to examine demographic differences between responses that did and did not have a matched APS Intake, with reporter types that might indicate an EMS reporter accepted (‚ÄúHealth Care Providers/Staff -- EMS/EMT‚Äù, "Health Care Providers/Staff", "Other Providers", "Community Agencies/Organizations", "Others", "Anonymous", and "Unknown"). We stored this internally as Table 1.12.

```{r}
#| label: sec1-t12-demo-intake-poss-resp-subset
# Take response-level subset for the following analyses
t_df <- ms_records |>
  ## Drop "Duplicate" flagged records
  dplyr::filter(!dup_drop) |>
  ## Select only records with a DETECT screening
  dplyr::filter(dt_screened) |>
  ## Convert grouping variable to text for table functions
  dplyr::mutate(
    aps_intake_poss = dplyr::case_when(
      aps_intake_poss ~ 't',
      !aps_intake_poss | is.na(aps_intake_poss) ~ 'f'
    )
  )

## Subset-specific group order for tables
t_group_order = list(t = 'Matched APS Intake', f = 'No Matched Intake')
```

###### Age

We calculated summary statistics for calculated age.

```{r}
#| label: sec1-t12-demo-intake-poss-resp-age-summ
# Get Summary Statistics for Age by Intake Match (Possible), Response-Level
get_group_cont_summary(
  .df = t_df,
  .var_name = "age_calc",
  .group_var = "aps_intake_poss",
  .group_order = t_group_order
  ) 
```

We used a histogram to broadly examine the distribution of values for age. Values demonstrated a significant left skew, and were not approximately normally distributed

```{r}
#| label: sec1-t12-demo-intake-poss-resp-age-hist-f0-12
# Figure 0.12: Distribution of Age by Intake Match (Possible), Response-Level
## Create Histogram
plot <- ggplot2::ggplot(
  t_df |>
    dplyr::mutate(
      aps_intake_poss = factor(
        aps_intake_poss, levels = names(t_group_order),
        labels = as.character(t_group_order), ordered = T
        )
    ), 
  ggplot2::aes(
    x = age_calc, fill = aps_intake_poss, y = ggplot2::after_stat(density),
    alpha = 0.5
  )) +
  ggplot2::scale_alpha(guide = "none") +
  ggplot2::geom_histogram(binwidth = 1, position = 'identity') +
  ### Convert y-axis scale to a percent
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ### Labels
  ggplot2::labs(
    title="Distribution of Age by Intake Match (Possible), Response-Level",
    x= "Calculated Age at Encounter (Years)", 
    y = "Frequency (%)",
    fill = "Matched APS Intake (Possible)"
    ) +
  ### Colors
  ggplot2::scale_fill_brewer(palette="Spectral")

## Save plot
ggplot2::ggsave(
  filename = paste0(
    plot_path,
    "f0-12-age-intake-poss-resp-hist.png"
    ),
  plot = plot
  )

## Display plot
plot
```

We performed Student T-Test and Wilcox Rank-Sum testing to assess for a statistical association.

```{r}
#| label: sec1-t12-demo-intake-poss-resp-age-stats
# T-Test and Wilcox Rank-Sum for Age, by Intake Match (Possible)
get_twos_num_stats(
  .df = t_df |>
    dplyr::mutate(
      aps_intake_poss = dplyr::case_when(
        aps_intake_poss == 't' ~ T,
        aps_intake_poss == 'f' ~ F
      )
    ),
  .var_name = "age_calc",
  .binary_var = "aps_intake_poss"
)
```

###### Sex

We calculated summary statistics for sex.

```{r}
#| label: sec1-t12-demo-intake-poss-resp-sex-summ
# Get Summary Statistics for Sex, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      sex_cat = ifelse(is.na(sex_cat), 'missing', sex_cat)
    ),
  "sex_cat",
  .val_order = sex_val_list,
  .group_var = "aps_intake_poss",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t12-demo-intake-poss-resp-sex-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Unable to Assess', 'Missing (NA)')
  )
```

###### Race

We calculated summary statistics for race.

```{r}
#| label: sec1-t12-demo-intake-poss-resp-race-summ
# Get Summary Statistics for Race, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      race_cat = ifelse(is.na(race_cat), 'missing', race_cat)
    ),
  "race_cat",
  .val_order = race_val_list,
  .group_var = "aps_intake_poss",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t12-demo-intake-poss-resp-race-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```

###### Ethnicity

We calculated summary statistics for ethnicity.

```{r}
#| label: sec1-t12-demo-intake-poss-resp-ethn-summ
# Get Summary Statistics for Ethnicity, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      hispanic = dplyr::case_when(
        is.na(hispanic) ~ 'missing',
        hispanic ~ 'hispanic',
        !hispanic ~ 'nonhispanic'
      )
    ),
  "hispanic",
  .val_order = hispanic_val_list,
  .group_var = "aps_intake_poss",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t12-demo-intake-poss-resp-ethn-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```

##### Table 1.13: EMS Explicit Reporter Type (#sec1-t13-demo-intake-ems-resp)

We wished to examine demographic differences between responses that did and did not have a matched APS Intake, with only an explicit declaration of an EMS reporter accepted (‚ÄúHealth Care Providers/Staff -- EMS/EMT‚Äù). We stored this internally as Table 1.13.

```{r}
#| label: sec1-t13-demo-intake-ems-resp-subset
# Take response-level subset for the following analyses
t_df <- ms_records |>
  ## Drop "Duplicate" flagged records
  dplyr::filter(!dup_drop) |>
  ## Select only records with a DETECT screening
  dplyr::filter(dt_screened) |>
  ## Convert grouping variable to text for table functions
  dplyr::mutate(
    aps_intake_ems = dplyr::case_when(
      aps_intake_ems ~ 't',
      !aps_intake_ems | is.na(aps_intake_ems) ~ 'f'
    )
  )

## Subset-specific group order for tables
t_group_order = list(t = 'Matched APS Intake', f = 'No Matched Intake')
```

###### Age

We calculated summary statistics for calculated age.

```{r}
#| label: sec1-t13-demo-intake-ems-resp-age-summ
# Get Summary Statistics for Age by Intake Match (EMS), Response-Level
get_group_cont_summary(
  .df = t_df,
  .var_name = "age_calc",
  .group_var = "aps_intake_ems",
  .group_order = t_group_order
  ) 
```

We used a histogram to broadly examine the distribution of values for age. Values demonstrated a significant left skew, and were not approximately normally distributed

```{r}
#| label: sec1-t13-demo-intake-ems-resp-age-hist-f0-13
# Figure 0.13: Distribution of Age by Intake Match (EMS), Response-Level
## Create Histogram
plot <- ggplot2::ggplot(
  t_df |>
    dplyr::mutate(
      aps_intake_ems = factor(
        aps_intake_ems, levels = names(t_group_order),
        labels = as.character(t_group_order), ordered = T
        )
    ), 
  ggplot2::aes(
    x = age_calc, fill = aps_intake_ems, y = ggplot2::after_stat(density),
    alpha = 0.5
  )) +
  ggplot2::scale_alpha(guide = "none") +
  ggplot2::geom_histogram(binwidth = 1, position = 'identity') +
  ### Convert y-axis scale to a percent
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ### Labels
  ggplot2::labs(
    title="Distribution of Age by Intake Match (EMS), Response-Level",
    x= "Calculated Age at Encounter (Years)", 
    y = "Frequency (%)",
    fill = "Matched APS Intake (EMS)"
    ) +
  ### Colors
  ggplot2::scale_fill_brewer(palette="Spectral")

## Save plot
ggplot2::ggsave(
  filename = paste0(
    plot_path,
    "f0-13-age-intake-ems-resp-hist.png"
    ),
  plot = plot
  )

## Display plot
plot
```

We performed Student T-Test and Wilcox Rank-Sum testing to assess for a statistical association.

```{r}
#| label: sec1-t13-demo-intake-ems-resp-age-stats
# T-Test and Wilcox Rank-Sum for Age, by Intake Match (EMS)
get_twos_num_stats(
  .df = t_df |>
    dplyr::mutate(
      aps_intake_ems = dplyr::case_when(
        aps_intake_ems == 't' ~ T,
        aps_intake_ems == 'f' ~ F
      )
    ),
  .var_name = "age_calc",
  .binary_var = "aps_intake_ems"
)
```

###### Sex

We calculated summary statistics for sex.

```{r}
#| label: sec1-t13-demo-intake-ems-resp-sex-summ
# Get Summary Statistics for Sex, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      sex_cat = ifelse(is.na(sex_cat), 'missing', sex_cat)
    ),
  "sex_cat",
  .val_order = sex_val_list,
  .group_var = "aps_intake_ems",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t13-demo-intake-ems-resp-sex-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Unable to Assess', 'Missing (NA)')
  )
```

###### Race

We calculated summary statistics for race.

```{r}
#| label: sec1-t13-demo-intake-ems-resp-race-summ
# Get Summary Statistics for Race, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      race_cat = ifelse(is.na(race_cat), 'missing', race_cat)
    ),
  "race_cat",
  .val_order = race_val_list,
  .group_var = "aps_intake_ems",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t13-demo-intake-ems-resp-race-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```

###### Ethnicity

We calculated summary statistics for ethnicity.

```{r}
#| label: sec1-t13-demo-intake-ems-resp-ethn-summ
# Get Summary Statistics for Ethnicity, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      hispanic = dplyr::case_when(
        is.na(hispanic) ~ 'missing',
        hispanic ~ 'hispanic',
        !hispanic ~ 'nonhispanic'
      )
    ),
  "hispanic",
  .val_order = hispanic_val_list,
  .group_var = "aps_intake_ems",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t13-demo-intake-ems-resp-ethn-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```

#### Subject-Level

##### Table 1.14: Any Reporter Type (#sec1-t14-demo-intake-any-subj)

We wished to examine demographic differences between subjects that did and did not have a matched APS Intake, with any reporter type. We stored this internally as Table 1.14.

```{r}
#| label: sec1-t14-demo-intake-any-subj-subset
# Take response-level subset for the following analyses
t_df <- ms_subjs |>
  ## Select only records with a DETECT screening
  dplyr::filter(dt_screened) |>
  ## Convert grouping variable to text for table functions
  dplyr::mutate(
    aps_intake = dplyr::case_when(
      aps_intake ~ 't',
      !aps_intake ~ 'f'
    )
  )

## Subset-specific group order for tables
t_group_order = list(t = 'Matched APS Intake', f = 'No Matched Intake')
```

###### Age

We calculated summary statistics for calculated age.

```{r}
#| label: sec1-t14-demo-intake-any-subj-age-summ
# Get Summary Statistics for Age by Intake Match (Any), Subject-Level
get_group_cont_summary(
  .df = t_df,
  .var_name = "age_avg",
  .group_var = "aps_intake",
  .group_order = t_group_order
  ) 
```

We used a histogram to broadly examine the distribution of values for age. Values demonstrated a significant left skew, and were not approximately normally distributed

```{r}
#| label: sec1-t14-demo-intake-any-subj-age-hist-f0-14
# Figure 0.14: Distribution of Age by Intake Match (Any), Subject-Level
## Create Histogram
plot <- ggplot2::ggplot(
  t_df |>
    dplyr::mutate(
      aps_intake = factor(
        aps_intake, levels = names(t_group_order),
        labels = as.character(t_group_order), ordered = T
        )
    ), 
  ggplot2::aes(
    x = age_avg, fill = aps_intake, y = ggplot2::after_stat(density),
    alpha = 0.5
  )) +
  ggplot2::scale_alpha(guide = "none") +
  ggplot2::geom_histogram(binwidth = 1, position = 'identity') +
  ### Convert y-axis scale to a percent
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ### Labels
  ggplot2::labs(
    title="Distribution of Age by Intake Match (Any), Subject-Level",
    x= "Calculated Age at Encounter (Years)", 
    y = "Frequency (%)",
    fill = "Matched APS Intake (Any)"
    ) +
  ### Colors
  ggplot2::scale_fill_brewer(palette="Spectral")

## Save plot
ggplot2::ggsave(
  filename = paste0(
    plot_path,
    "f0-14-age-intake-any-subj-hist.png"
    ),
  plot = plot
  )

## Display plot
plot
```

We performed Student T-Test and Wilcox Rank-Sum testing to assess for a statistical association.

```{r}
#| label: sec1-t14-demo-intake-any-subj-age-stats
# T-Test and Wilcox Rank-Sum for Age, by Intake Match (Any)
get_twos_num_stats(
  .df = t_df |>
    dplyr::mutate(
      aps_intake = dplyr::case_when(
        aps_intake == 't' ~ T,
        aps_intake == 'f' ~ F
      )
    ),
  .var_name = "age_avg",
  .binary_var = "aps_intake"
)
```

###### Sex

We calculated summary statistics for sex.

```{r}
#| label: sec1-t14-demo-intake-any-subj-sex-summ
# Get Summary Statistics for Sex, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      sex_cat = ifelse(is.na(sex_cat), 'missing', sex_cat)
    ),
  "sex_cat",
  .val_order = sex_val_list,
  .group_var = "aps_intake",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t14-demo-intake-any-subj-sex-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Unable to Assess', 'Missing (NA)')
  )
```

###### Race

We calculated summary statistics for race.

```{r}
#| label: sec1-t14-demo-intake-any-subj-race-summ
# Get Summary Statistics for Race, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      race_cat = ifelse(is.na(race_cat), 'missing', race_cat)
    ),
  "race_cat",
  .val_order = race_val_list,
  .group_var = "aps_intake",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t14-demo-intake-any-subj-race-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```

###### Ethnicity

We calculated summary statistics for ethnicity.

```{r}
#| label: sec1-t14-demo-intake-any-subj-ethn-summ
# Get Summary Statistics for Ethnicity, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      hispanic = dplyr::case_when(
        is.na(hispanic) ~ 'missing',
        hispanic ~ 'hispanic',
        !hispanic ~ 'nonhispanic'
      )
    ),
  "hispanic",
  .val_order = hispanic_val_list,
  .group_var = "aps_intake",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t14-demo-intake-any-subj-ethn-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```

##### Table 1.15: EMS Possible Reporter Type (#sec1-t15-demo-intake-poss-subj)

We wished to examine demographic differences between subjects that did and did not have a matched APS Intake, with reporter types that might indicate an EMS reporter accepted (‚ÄúHealth Care Providers/Staff -- EMS/EMT‚Äù, "Health Care Providers/Staff", "Other Providers", "Community Agencies/Organizations", "Others", "Anonymous", and "Unknown"). We stored this internally as Table 1.15.

```{r}
#| label: sec1-t15-demo-intake-poss-subj-subset
# Take response-level subset for the following analyses
t_df <- ms_subjs |>
  ## Select only records with a DETECT screening
  dplyr::filter(dt_screened) |>
  ## Convert grouping variable to text for table functions
  dplyr::mutate(
    aps_intake_poss = dplyr::case_when(
      aps_intake_poss ~ 't',
      !aps_intake_poss | is.na(aps_intake_poss) ~ 'f'
    )
  )

## Subset-specific group order for tables
t_group_order = list(t = 'Matched APS Intake', f = 'No Matched Intake')
```

###### Age

We calculated summary statistics for calculated age.

```{r}
#| label: sec1-t15-demo-intake-poss-subj-age-summ
# Get Summary Statistics for Age by Intake Match (Possible), Subject-Level
get_group_cont_summary(
  .df = t_df,
  .var_name = "age_avg",
  .group_var = "aps_intake_poss",
  .group_order = t_group_order
  ) 
```

We used a histogram to broadly examine the distribution of values for age. Values demonstrated a significant left skew, and were not approximately normally distributed

```{r}
#| label: sec1-t15-demo-intake-poss-subj-age-hist-f0-15
# Figure 0.15: Distribution of Age by Intake Match (Possible), Subject-Level
## Create Histogram
plot <- ggplot2::ggplot(
  t_df |>
    dplyr::mutate(
      aps_intake_poss = factor(
        aps_intake_poss, levels = names(t_group_order),
        labels = as.character(t_group_order), ordered = T
        )
    ), 
  ggplot2::aes(
    x = age_avg, fill = aps_intake_poss, y = ggplot2::after_stat(density),
    alpha = 0.5
  )) +
  ggplot2::scale_alpha(guide = "none") +
  ggplot2::geom_histogram(binwidth = 1, position = 'identity') +
  ### Convert y-axis scale to a percent
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ### Labels
  ggplot2::labs(
    title="Distribution of Age by Intake Match (Possible), Subject-Level",
    x= "Calculated Age at Encounter (Years)", 
    y = "Frequency (%)",
    fill = "Matched APS Intake (Possible)"
    ) +
  ### Colors
  ggplot2::scale_fill_brewer(palette="Spectral")

## Save plot
ggplot2::ggsave(
  filename = paste0(
    plot_path,
    "f0-15-age-intake-poss-subj-hist.png"
    ),
  plot = plot
  )

## Display plot
plot
```

We performed Student T-Test and Wilcox Rank-Sum testing to assess for a statistical association.

```{r}
#| label: sec1-t15-demo-intake-poss-subj-age-stats
# T-Test and Wilcox Rank-Sum for Age, by Intake Match (Possible)
get_twos_num_stats(
  .df = t_df |>
    dplyr::mutate(
      aps_intake_poss = dplyr::case_when(
        aps_intake_poss == 't' ~ T,
        aps_intake_poss == 'f' ~ F
      )
    ),
  .var_name = "age_avg",
  .binary_var = "aps_intake_poss"
)
```

###### Sex

We calculated summary statistics for sex.

```{r}
#| label: sec1-t15-demo-intake-poss-subj-sex-summ
# Get Summary Statistics for Sex, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      sex_cat = ifelse(is.na(sex_cat), 'missing', sex_cat)
    ),
  "sex_cat",
  .val_order = sex_val_list,
  .group_var = "aps_intake_poss",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t15-demo-intake-poss-subj-sex-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Unable to Assess', 'Missing (NA)')
  )
```

###### Race

We calculated summary statistics for race.

```{r}
#| label: sec1-t15-demo-intake-poss-subj-race-summ
# Get Summary Statistics for Race, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      race_cat = ifelse(is.na(race_cat), 'missing', race_cat)
    ),
  "race_cat",
  .val_order = race_val_list,
  .group_var = "aps_intake_poss",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t15-demo-intake-poss-subj-race-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```

###### Ethnicity

We calculated summary statistics for ethnicity.

```{r}
#| label: sec1-t15-demo-intake-poss-subj-ethn-summ
# Get Summary Statistics for Ethnicity, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      hispanic = dplyr::case_when(
        is.na(hispanic) ~ 'missing',
        hispanic ~ 'hispanic',
        !hispanic ~ 'nonhispanic'
      )
    ),
  "hispanic",
  .val_order = hispanic_val_list,
  .group_var = "aps_intake_poss",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t15-demo-intake-poss-subj-ethn-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```

##### Table 1.16: EMS Explicit Reporter Type (#sec1-t16-demo-intake-ems-subj)

We wished to examine demographic differences between subjects that did and did not have a matched APS Intake, with only an explicit declaration of an EMS reporter accepted (‚ÄúHealth Care Providers/Staff -- EMS/EMT‚Äù). We stored this internally as Table 1.16.

```{r}
#| label: sec1-t16-demo-intake-ems-subj-subset
# Take response-level subset for the following analyses
t_df <- ms_subjs |>
  ## Select only records with a DETECT screening
  dplyr::filter(dt_screened) |>
  ## Convert grouping variable to text for table functions
  dplyr::mutate(
    aps_intake_ems = dplyr::case_when(
      aps_intake_ems ~ 't',
      !aps_intake_ems | is.na(aps_intake_ems) ~ 'f'
    )
  )

## Subset-specific group order for tables
t_group_order = list(t = 'Matched APS Intake', f = 'No Matched Intake')
```

###### Age

We calculated summary statistics for calculated age.

```{r}
#| label: sec1-t16-demo-intake-ems-subj-age-summ
# Get Summary Statistics for Age by Intake Match (EMS), Subject-Level
get_group_cont_summary(
  .df = t_df,
  .var_name = "age_avg",
  .group_var = "aps_intake_ems",
  .group_order = t_group_order
  ) 
```

We used a histogram to broadly examine the distribution of values for age. Values demonstrated a significant left skew, and were not approximately normally distributed

```{r}
#| label: sec1-t16-demo-intake-ems-subj-age-hist-f0-16
# Figure 0.16: Distribution of Age by Intake Match (EMS), Subject-Level
## Create Histogram
plot <- ggplot2::ggplot(
  t_df |>
    dplyr::mutate(
      aps_intake_ems = factor(
        aps_intake_ems, levels = names(t_group_order),
        labels = as.character(t_group_order), ordered = T
        )
    ), 
  ggplot2::aes(
    x = age_avg, fill = aps_intake_ems, y = ggplot2::after_stat(density),
    alpha = 0.5
  )) +
  ggplot2::scale_alpha(guide = "none") +
  ggplot2::geom_histogram(binwidth = 1, position = 'identity') +
  ### Convert y-axis scale to a percent
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ### Labels
  ggplot2::labs(
    title="Distribution of Age by Intake Match (EMS), Subject-Level",
    x= "Calculated Age at Encounter (Years)", 
    y = "Frequency (%)",
    fill = "Matched APS Intake (EMS)"
    ) +
  ### Colors
  ggplot2::scale_fill_brewer(palette="Spectral")

## Save plot
ggplot2::ggsave(
  filename = paste0(
    plot_path,
    "f0-16-age-intake-ems-subj-hist.png"
    ),
  plot = plot
  )

## Display plot
plot
```

We performed Student T-Test and Wilcox Rank-Sum testing to assess for a statistical association.

```{r}
#| label: sec1-t16-demo-intake-ems-subj-age-stats
# T-Test and Wilcox Rank-Sum for Age, by Intake Match (EMS)
get_twos_num_stats(
  .df = t_df |>
    dplyr::mutate(
      aps_intake_ems = dplyr::case_when(
        aps_intake_ems == 't' ~ T,
        aps_intake_ems == 'f' ~ F
      )
    ),
  .var_name = "age_avg",
  .binary_var = "aps_intake_ems"
)
```

###### Sex

We calculated summary statistics for sex.

```{r}
#| label: sec1-t16-demo-intake-ems-subj-sex-summ
# Get Summary Statistics for Sex, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      sex_cat = ifelse(is.na(sex_cat), 'missing', sex_cat)
    ),
  "sex_cat",
  .val_order = sex_val_list,
  .group_var = "aps_intake_ems",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t16-demo-intake-ems-subj-sex-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Unable to Assess', 'Missing (NA)')
  )
```

###### Race

We calculated summary statistics for race.

```{r}
#| label: sec1-t16-demo-intake-ems-subj-race-summ
# Get Summary Statistics for Race, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      race_cat = ifelse(is.na(race_cat), 'missing', race_cat)
    ),
  "race_cat",
  .val_order = race_val_list,
  .group_var = "aps_intake_ems",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t16-demo-intake-ems-subj-race-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```

###### Ethnicity

We calculated summary statistics for ethnicity.

```{r}
#| label: sec1-t16-demo-intake-ems-subj-ethn-summ
# Get Summary Statistics for Ethnicity, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      hispanic = dplyr::case_when(
        is.na(hispanic) ~ 'missing',
        hispanic ~ 'hispanic',
        !hispanic ~ 'nonhispanic'
      )
    ),
  "hispanic",
  .val_order = hispanic_val_list,
  .group_var = "aps_intake_ems",
  .group_order = t_group_order
  )

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
    )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t16-demo-intake-ems-subj-ethn-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
  dplyr::select(value_name, t_n, f_n) |>
  dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
  )
```


### By Matched APS Investigation

#### Response-Level

##### Table 1.17: Broad Match, Aggregate, All Screenings (#sec1-t17-demo-inv-broad-all-scrs-resp)

We wished to examine demographic differences between responses that did and did not have at least one valid allegation of EM in a matched APS Investigation, across all screenings (those without a paired investigation deemed "no valid allegations"). We used broad temporal matching (30 day window), and aggregated the dispositions of all matched investigations. We stored this internally as Table 1.17.

```{r}
#| label: sec1-t17-demo-inv-broad-all-scrs-resp-subset
# Take response-level subset for the following analyses
t_df <- ms_records |>
  ## Drop "Duplicate" flagged records
  dplyr::filter(!dup_drop) |>
  ## Select only records with a DETECT screening
  dplyr::filter(dt_screened) |>
  ## Convert grouping variable to text for table functions
  dplyr::mutate(
    aps_dispo = dplyr::case_when(
      aps_inv_window_dispo %in% c('valid', 'mixed_validity') ~ 't',
      TRUE ~ 'f'
    )
  )

## Subset-specific group order for tables
t_group_order = list(
  t = '1+ Valid EM Allegation', 
  f = 'No Valid Allegations'
)
```

###### Age

We calculated summary statistics for calculated age.

```{r}
#| label: sec1-t17-demo-inv-broad-all-scrs-resp-age-summ
# Get Summary Statistics for Age by Valid APS Inv (Broad, Agg.), Response-Level
get_group_cont_summary(
  .df = t_df,
  .var_name = "age_calc",
  .group_var = "aps_dispo",
  .group_order = t_group_order
) 
```

We used a histogram to broadly examine the distribution of values for age. Values demonstrated a significant left skew, and were not approximately normally distributed

```{r}
#| label: sec1-t17-demo-inv-broad-all-scrs-resp-age-hist-f0-17
# Figure 0.17: Distribution of Age by Valid APS Inv (Broad, Agg.), Response-Level
## Create Histogram
plot <- ggplot2::ggplot(
  t_df |>
    dplyr::mutate(
      aps_dispo = factor(
        aps_dispo, levels = names(t_group_order),
        labels = as.character(t_group_order), ordered = T
      )
    ), 
  ggplot2::aes(
    x = age_calc, fill = aps_dispo, y = ggplot2::after_stat(density),
    alpha = 0.5
  )) +
  ggplot2::scale_alpha(guide = "none") +
  ggplot2::geom_histogram(binwidth = 1, position = 'identity') +
  ### Convert y-axis scale to a percent
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ### Labels
  ggplot2::labs(
    title="Distribution of Age by Valid APS Inv. (Broad, Agg.), Response-Level",
    subtitle = "Includes no matched investigations with 'no valid allegations'",
    x= "Calculated Age at Encounter (Years)", 
    y = "Frequency (%)",
    fill = "APS Determinations"
  ) +
  ### Colors
  ggplot2::scale_fill_brewer(palette="Spectral")

## Save plot
ggplot2::ggsave(
  filename = paste0(
    plot_path,
    "f0-17-age-inv-broad-all-scrs-resp-hist.png"
  ),
  plot = plot
)

## Display plot
plot
```

We performed Student T-Test and Wilcox Rank-Sum testing to assess for a statistical association.

```{r}
#| label: sec1-t17-demo-inv-broad-all-scrs-resp-age-stats
# T-Test and Wilcox Rank-Sum for Age, by Valid APS Inv (Broad, Agg.)
get_twos_num_stats(
  .df = t_df |>
    dplyr::mutate(
      aps_dispo = dplyr::case_when(
        aps_dispo == 't' ~ T,
        aps_dispo == 'f' ~ F
      )
    ),
  .var_name = "age_calc",
  .binary_var = "aps_dispo"
)
```

###### Sex

We calculated summary statistics for sex.

```{r}
#| label: sec1-t17-demo-inv-broad-all-scrs-resp-sex-summ
# Get Summary Statistics for Sex, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      sex_cat = ifelse(is.na(sex_cat), 'missing', sex_cat)
    ),
  "sex_cat",
  .val_order = sex_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t17-demo-inv-broad-all-scrs-resp-sex-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Unable to Assess', 'Missing (NA)')
)
```

###### Race

We calculated summary statistics for race.

```{r}
#| label: sec1-t17-demo-inv-broad-all-scrs-resp-race-summ
# Get Summary Statistics for Race, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      race_cat = ifelse(is.na(race_cat), 'missing', race_cat)
    ),
  "race_cat",
  .val_order = race_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t17-demo-inv-broad-all-scrs-resp-race-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
)
```

###### Ethnicity

We calculated summary statistics for ethnicity.

```{r}
#| label: sec1-t17-demo-inv-broad-all-scrs-resp-ethn-summ
# Get Summary Statistics for Ethnicity, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      hispanic = dplyr::case_when(
        is.na(hispanic) ~ 'missing',
        hispanic ~ 'hispanic',
        !hispanic ~ 'nonhispanic'
      )
    ),
  "hispanic",
  .val_order = hispanic_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t17-demo-inv-broad-all-scrs-resp-ethn-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
)
```

##### Table 1.18: Broad Match, Aggregate, All Screenings (#sec1-t18-demo-inv-broad-all-matches-resp)

We wished to examine demographic differences between responses that did and did not have at least one valid allegation of EM in a matched APS Investigation, across records with a matched APS Investigation. We used broad temporal matching (30 day window), and aggregated the dispositions of all matched investigations. We stored this internally as Table 1.18.

```{r}
#| label: sec1-t18-demo-inv-broad-all-matches-resp-subset
# Take response-level subset for the following analyses
t_df <- ms_records |>
  ## Drop "Duplicate" flagged records
  dplyr::filter(!dup_drop) |>
  ## Select only records with a DETECT screening
  dplyr::filter(dt_screened) |>
  ## Select only records with a paired APS Investigation
  dplyr::filter(aps_inv_window) |>
  ## Convert grouping variable to text for table functions
  dplyr::mutate(
    aps_dispo = dplyr::case_when(
      aps_inv_window_dispo %in% c('valid', 'mixed_validity') ~ 't',
      TRUE ~ 'f'
    )
  )

## Subset-specific group order for tables
t_group_order = list(
  t = '1+ Valid EM Allegation', 
  f = 'No Valid Allegations'
)
```

###### Age

We calculated summary statistics for calculated age.

```{r}
#| label: sec1-t18-demo-inv-broad-all-matches-resp-age-summ
# Get Summary Statistics for Age by Valid APS Inv (Broad, Agg.), Response-Level
get_group_cont_summary(
  .df = t_df,
  .var_name = "age_calc",
  .group_var = "aps_dispo",
  .group_order = t_group_order
) 
```

We used a histogram to broadly examine the distribution of values for age. Values demonstrated a significant left skew, and were not approximately normally distributed

```{r}
#| label: sec1-t18-demo-inv-broad-all-matches-resp-age-hist-f0-18
# Figure 0.18: Distribution of Age by Valid APS Inv (Broad, Agg.), Response-Level
## Create Histogram
plot <- ggplot2::ggplot(
  t_df |>
    dplyr::mutate(
      aps_dispo = factor(
        aps_dispo, levels = names(t_group_order),
        labels = as.character(t_group_order), ordered = T
      )
    ), 
  ggplot2::aes(
    x = age_calc, fill = aps_dispo, y = ggplot2::after_stat(density),
    alpha = 0.5
  )) +
  ggplot2::scale_alpha(guide = "none") +
  ggplot2::geom_histogram(binwidth = 1, position = 'identity') +
  ### Convert y-axis scale to a percent
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ### Labels
  ggplot2::labs(
    title="Distribution of Age by Valid APS Inv. (Broad, Agg.), Response-Level",
    subtitle = "Only records with a matched APS Investigation",
    x= "Calculated Age at Encounter (Years)", 
    y = "Frequency (%)",
    fill = "APS Determinations"
  ) +
  ### Colors
  ggplot2::scale_fill_brewer(palette="Spectral")

## Save plot
ggplot2::ggsave(
  filename = paste0(
    plot_path,
    "f0-18-age-inv-broad-all-matches-resp-hist.png"
  ),
  plot = plot
)

## Display plot
plot
```

We performed Student T-Test and Wilcox Rank-Sum testing to assess for a statistical association.

```{r}
#| label: sec1-t18-demo-inv-broad-all-matches-resp-age-stats
# T-Test and Wilcox Rank-Sum for Age, by Valid APS Inv (Broad, Agg.)
get_twos_num_stats(
  .df = t_df |>
    dplyr::mutate(
      aps_dispo = dplyr::case_when(
        aps_dispo == 't' ~ T,
        aps_dispo == 'f' ~ F
      )
    ),
  .var_name = "age_calc",
  .binary_var = "aps_dispo"
)
```

###### Sex

We calculated summary statistics for sex.

```{r}
#| label: sec1-t18-demo-inv-broad-all-matches-resp-sex-summ
# Get Summary Statistics for Sex, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      sex_cat = ifelse(is.na(sex_cat), 'missing', sex_cat)
    ),
  "sex_cat",
  .val_order = sex_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t18-demo-inv-broad-all-matches-resp-sex-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Unable to Assess', 'Missing (NA)')
)
```

###### Race

We calculated summary statistics for race.

```{r}
#| label: sec1-t18-demo-inv-broad-all-matches-resp-race-summ
# Get Summary Statistics for Race, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      race_cat = ifelse(is.na(race_cat), 'missing', race_cat)
    ),
  "race_cat",
  .val_order = race_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t18-demo-inv-broad-all-matches-resp-race-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
)
```

###### Ethnicity

We calculated summary statistics for ethnicity.

```{r}
#| label: sec1-t18-demo-inv-broad-all-matches-resp-ethn-summ
# Get Summary Statistics for Ethnicity, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      hispanic = dplyr::case_when(
        is.na(hispanic) ~ 'missing',
        hispanic ~ 'hispanic',
        !hispanic ~ 'nonhispanic'
      )
    ),
  "hispanic",
  .val_order = hispanic_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t18-demo-inv-broad-all-matches-resp-ethn-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
)
```

##### Table 1.19: Broad Match, "Best", All Screenings (#sec1-t19-demo-inv-broad-best-scrs-resp)

We wished to examine demographic differences between responses that did and did not have at least one valid allegation of EM in a matched APS Investigation, across all screenings (those without a paired investigation deemed "no valid allegations"). We used broad temporal matching (30 day window), and used dispositions of the single "best" paired investigation. We stored this internally as Table 1.19.

```{r}
#| label: sec1-t19-demo-inv-broad-best-scrs-resp-subset
# Take response-level subset for the following analyses
t_df <- ms_records |>
  ## Drop "Duplicate" flagged records
  dplyr::filter(!dup_drop) |>
  ## Select only records with a DETECT screening
  dplyr::filter(dt_screened) |>
  ## Convert grouping variable to text for table functions
  dplyr::mutate(
    aps_dispo = dplyr::case_when(
      aps_inv_window_dispo_best %in% c('valid', 'mixed_validity') ~ 't',
      TRUE ~ 'f'
    )
  )

## Subset-specific group order for tables
t_group_order = list(
  t = '1+ Valid EM Allegation', 
  f = 'No Valid Allegations'
)
```

###### Age

We calculated summary statistics for calculated age.

```{r}
#| label: sec1-t19-demo-inv-broad-best-scrs-resp-age-summ
# Get Summary Statistics for Age by Valid APS Inv (Broad, 'Best'), Response-Level
get_group_cont_summary(
  .df = t_df,
  .var_name = "age_calc",
  .group_var = "aps_dispo",
  .group_order = t_group_order
) 
```

We used a histogram to broadly examine the distribution of values for age. Values demonstrated a significant left skew, and were not approximately normally distributed

```{r}
#| label: sec1-t19-demo-inv-broad-best-scrs-resp-age-hist-f0-19
# Figure 0.19: Distribution of Age by Valid APS Inv (Broad, 'Best'), Response-Level
## Create Histogram
plot <- ggplot2::ggplot(
  t_df |>
    dplyr::mutate(
      aps_dispo = factor(
        aps_dispo, levels = names(t_group_order),
        labels = as.character(t_group_order), ordered = T
      )
    ), 
  ggplot2::aes(
    x = age_calc, fill = aps_dispo, y = ggplot2::after_stat(density),
    alpha = 0.5
  )) +
  ggplot2::scale_alpha(guide = "none") +
  ggplot2::geom_histogram(binwidth = 1, position = 'identity') +
  ### Convert y-axis scale to a percent
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ### Labels
  ggplot2::labs(
    title="Distribution of Age by Valid APS Inv. (Broad, 'Best'), Response-Level",
    subtitle = "Includes no matched investigations with 'no valid allegations'",
    x= "Calculated Age at Encounter (Years)", 
    y = "Frequency (%)",
    fill = "APS Determinations"
  ) +
  ### Colors
  ggplot2::scale_fill_brewer(palette="Spectral")

## Save plot
ggplot2::ggsave(
  filename = paste0(
    plot_path,
    "f0-19-age-inv-broad-best-scrs-resp-hist.png"
  ),
  plot = plot
)

## Display plot
plot
```

We performed Student T-Test and Wilcox Rank-Sum testing to assess for a statistical association.

```{r}
#| label: sec1-t19-demo-inv-broad-best-scrs-resp-age-stats
# T-Test and Wilcox Rank-Sum for Age, by Valid APS Inv (Broad, 'Best')
get_twos_num_stats(
  .df = t_df |>
    dplyr::mutate(
      aps_dispo = dplyr::case_when(
        aps_dispo == 't' ~ T,
        aps_dispo == 'f' ~ F
      )
    ),
  .var_name = "age_calc",
  .binary_var = "aps_dispo"
)
```

###### Sex

We calculated summary statistics for sex.

```{r}
#| label: sec1-t19-demo-inv-broad-best-scrs-resp-sex-summ
# Get Summary Statistics for Sex, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      sex_cat = ifelse(is.na(sex_cat), 'missing', sex_cat)
    ),
  "sex_cat",
  .val_order = sex_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t19-demo-inv-broad-best-scrs-resp-sex-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Unable to Assess', 'Missing (NA)')
)
```

###### Race

We calculated summary statistics for race.

```{r}
#| label: sec1-t19-demo-inv-broad-best-scrs-resp-race-summ
# Get Summary Statistics for Race, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      race_cat = ifelse(is.na(race_cat), 'missing', race_cat)
    ),
  "race_cat",
  .val_order = race_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t19-demo-inv-broad-best-scrs-resp-race-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
)
```

###### Ethnicity

We calculated summary statistics for ethnicity.

```{r}
#| label: sec1-t19-demo-inv-broad-best-scrs-resp-ethn-summ
# Get Summary Statistics for Ethnicity, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      hispanic = dplyr::case_when(
        is.na(hispanic) ~ 'missing',
        hispanic ~ 'hispanic',
        !hispanic ~ 'nonhispanic'
      )
    ),
  "hispanic",
  .val_order = hispanic_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t19-demo-inv-broad-best-scrs-resp-ethn-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
)
```

##### Table 1.20: Broad Match, "Best", All Screenings (#sec1-t20-demo-inv-broad-best-matches-resp)

We wished to examine demographic differences between responses that did and did not have at least one valid allegation of EM in a matched APS Investigation, across records with a matched APS Investigation. We used broad temporal matching (30 day window), and aggregated the dispositions of all matched investigations. We stored this internally as Table 1.20.

```{r}
#| label: sec1-t20-demo-inv-broad-best-matches-resp-subset
# Take response-level subset for the following analyses
t_df <- ms_records |>
  ## Drop "Duplicate" flagged records
  dplyr::filter(!dup_drop) |>
  ## Select only records with a DETECT screening
  dplyr::filter(dt_screened) |>
  ## Select only records with a paired APS Investigation
  dplyr::filter(aps_inv_window) |>
  ## Convert grouping variable to text for table functions
  dplyr::mutate(
    aps_dispo = dplyr::case_when(
      aps_inv_window_dispo_best %in% c('valid', 'mixed_validity') ~ 't',
      TRUE ~ 'f'
    )
  )

## Subset-specific group order for tables
t_group_order = list(
  t = '1+ Valid EM Allegation', 
  f = 'No Valid Allegations'
)
```

###### Age

We calculated summary statistics for calculated age.

```{r}
#| label: sec1-t20-demo-inv-broad-best-matches-resp-age-summ
# Get Summary Statistics for Age by Valid APS Inv (Broad, 'Best'), Response-Level
get_group_cont_summary(
  .df = t_df,
  .var_name = "age_calc",
  .group_var = "aps_dispo",
  .group_order = t_group_order
) 
```

We used a histogram to broadly examine the distribution of values for age. Values demonstrated a significant left skew, and were not approximately normally distributed

```{r}
#| label: sec1-t20-demo-inv-broad-best-matches-resp-age-hist-f0-20
# Figure 0.20: Distribution of Age by Valid APS Inv (Broad, 'Best'), Response-Level
## Create Histogram
plot <- ggplot2::ggplot(
  t_df |>
    dplyr::mutate(
      aps_dispo = factor(
        aps_dispo, levels = names(t_group_order),
        labels = as.character(t_group_order), ordered = T
      )
    ), 
  ggplot2::aes(
    x = age_calc, fill = aps_dispo, y = ggplot2::after_stat(density),
    alpha = 0.5
  )) +
  ggplot2::scale_alpha(guide = "none") +
  ggplot2::geom_histogram(binwidth = 1, position = 'identity') +
  ### Convert y-axis scale to a percent
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ### Labels
  ggplot2::labs(
    title="Distribution of Age by Valid APS Inv. (Broad, 'Best'), Response-Level",
    subtitle = "Only records with a matched APS Investigation",
    x= "Calculated Age at Encounter (Years)", 
    y = "Frequency (%)",
    fill = "APS Determinations"
  ) +
  ### Colors
  ggplot2::scale_fill_brewer(palette="Spectral")

## Save plot
ggplot2::ggsave(
  filename = paste0(
    plot_path,
    "f0-20-age-inv-broad-best-matches-resp-hist.png"
  ),
  plot = plot
)

## Display plot
plot
```

We performed Student T-Test and Wilcox Rank-Sum testing to assess for a statistical association.

```{r}
#| label: sec1-t20-demo-inv-broad-best-matches-resp-age-stats
# T-Test and Wilcox Rank-Sum for Age, by Valid APS Inv (Broad, 'Best')
get_twos_num_stats(
  .df = t_df |>
    dplyr::mutate(
      aps_dispo = dplyr::case_when(
        aps_dispo == 't' ~ T,
        aps_dispo == 'f' ~ F
      )
    ),
  .var_name = "age_calc",
  .binary_var = "aps_dispo"
)
```

###### Sex

We calculated summary statistics for sex.

```{r}
#| label: sec1-t20-demo-inv-broad-best-matches-resp-sex-summ
# Get Summary Statistics for Sex, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      sex_cat = ifelse(is.na(sex_cat), 'missing', sex_cat)
    ),
  "sex_cat",
  .val_order = sex_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t20-demo-inv-broad-best-matches-resp-sex-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Unable to Assess', 'Missing (NA)')
)
```

###### Race

We calculated summary statistics for race.

```{r}
#| label: sec1-t20-demo-inv-broad-best-matches-resp-race-summ
# Get Summary Statistics for Race, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      race_cat = ifelse(is.na(race_cat), 'missing', race_cat)
    ),
  "race_cat",
  .val_order = race_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t20-demo-inv-broad-best-matches-resp-race-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
)
```

###### Ethnicity

We calculated summary statistics for ethnicity.

```{r}
#| label: sec1-t20-demo-inv-broad-best-matches-resp-ethn-summ
# Get Summary Statistics for Ethnicity, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      hispanic = dplyr::case_when(
        is.na(hispanic) ~ 'missing',
        hispanic ~ 'hispanic',
        !hispanic ~ 'nonhispanic'
      )
    ),
  "hispanic",
  .val_order = hispanic_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t20-demo-inv-broad-best-matches-resp-ethn-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
)
```


##### Table 1.21: Exact Match, Aggregate, All Screenings (#sec1-t21-demo-inv-exact-all-scrs-resp)

We wished to examine demographic differences between responses that did and did not have at least one valid allegation of EM in a matched APS Investigation, across all screenings (those without a paired investigation deemed "no valid allegations"). We used exact matching (case open at the time of the response), and aggregated the dispositions of all matched investigations. We stored this internally as Table 1.21.

```{r}
#| label: sec1-t21-demo-inv-exact-all-scrs-resp-subset
# Take response-level subset for the following analyses
t_df <- ms_records |>
  ## Drop "Duplicate" flagged records
  dplyr::filter(!dup_drop) |>
  ## Select only records with a DETECT screening
  dplyr::filter(dt_screened) |>
  ## Convert grouping variable to text for table functions
  dplyr::mutate(
    aps_dispo = dplyr::case_when(
      aps_inv_window_dispo %in% c('valid', 'mixed_validity') ~ 't',
      TRUE ~ 'f'
    )
  )

## Subset-specific group order for tables
t_group_order = list(
  t = '1+ Valid EM Allegation', 
  f = 'No Valid Allegations'
)
```

###### Age

We calculated summary statistics for calculated age.

```{r}
#| label: sec1-t21-demo-inv-exact-all-scrs-resp-age-summ
# Get Summary Statistics for Age by Valid APS Inv (Exact, Agg.), Response-Level
get_group_cont_summary(
  .df = t_df,
  .var_name = "age_calc",
  .group_var = "aps_dispo",
  .group_order = t_group_order
) 
```

We used a histogram to broadly examine the distribution of values for age. Values demonstrated a significant left skew, and were not approximately normally distributed

```{r}
#| label: sec1-t21-demo-inv-exact-all-scrs-resp-age-hist-f0-21
# Figure 0.21: Distribution of Age by Valid APS Inv (Exact, Agg.), Response-Level
## Create Histogram
plot <- ggplot2::ggplot(
  t_df |>
    dplyr::mutate(
      aps_dispo = factor(
        aps_dispo, levels = names(t_group_order),
        labels = as.character(t_group_order), ordered = T
      )
    ), 
  ggplot2::aes(
    x = age_calc, fill = aps_dispo, y = ggplot2::after_stat(density),
    alpha = 0.5
  )) +
  ggplot2::scale_alpha(guide = "none") +
  ggplot2::geom_histogram(binwidth = 1, position = 'identity') +
  ### Convert y-axis scale to a percent
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ### Labels
  ggplot2::labs(
    title="Distribution of Age by Valid APS Inv. (Exact, Agg.), Response-Level",
    subtitle = "Includes no matched investigations with 'no valid allegations'",
    x= "Calculated Age at Encounter (Years)", 
    y = "Frequency (%)",
    fill = "APS Determinations"
  ) +
  ### Colors
  ggplot2::scale_fill_brewer(palette="Spectral")

## Save plot
ggplot2::ggsave(
  filename = paste0(
    plot_path,
    "f0-21-age-inv-exact-all-scrs-resp-hist.png"
  ),
  plot = plot
)

## Display plot
plot
```

We performed Student T-Test and Wilcox Rank-Sum testing to assess for a statistical association.

```{r}
#| label: sec1-t21-demo-inv-exact-all-scrs-resp-age-stats
# T-Test and Wilcox Rank-Sum for Age, by Valid APS Inv (Exact, Agg.)
get_twos_num_stats(
  .df = t_df |>
    dplyr::mutate(
      aps_dispo = dplyr::case_when(
        aps_dispo == 't' ~ T,
        aps_dispo == 'f' ~ F
      )
    ),
  .var_name = "age_calc",
  .binary_var = "aps_dispo"
)
```

###### Sex

We calculated summary statistics for sex.

```{r}
#| label: sec1-t21-demo-inv-exact-all-scrs-resp-sex-summ
# Get Summary Statistics for Sex, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      sex_cat = ifelse(is.na(sex_cat), 'missing', sex_cat)
    ),
  "sex_cat",
  .val_order = sex_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t21-demo-inv-exact-all-scrs-resp-sex-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Unable to Assess', 'Missing (NA)')
)
```

###### Race

We calculated summary statistics for race.

```{r}
#| label: sec1-t21-demo-inv-exact-all-scrs-resp-race-summ
# Get Summary Statistics for Race, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      race_cat = ifelse(is.na(race_cat), 'missing', race_cat)
    ),
  "race_cat",
  .val_order = race_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t21-demo-inv-exact-all-scrs-resp-race-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
)
```

###### Ethnicity

We calculated summary statistics for ethnicity.

```{r}
#| label: sec1-t21-demo-inv-exact-all-scrs-resp-ethn-summ
# Get Summary Statistics for Ethnicity, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      hispanic = dplyr::case_when(
        is.na(hispanic) ~ 'missing',
        hispanic ~ 'hispanic',
        !hispanic ~ 'nonhispanic'
      )
    ),
  "hispanic",
  .val_order = hispanic_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t21-demo-inv-exact-all-scrs-resp-ethn-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
)
```

##### Table 1.22: Exact Match, Aggregate, All Screenings (#sec1-t22-demo-inv-exact-all-matches-resp)

We wished to examine demographic differences between responses that did and did not have at least one valid allegation of EM in a matched APS Investigation, across records with a matched APS Investigation. We used exact matching (case open at the time of the response), and aggregated the dispositions of all matched investigations. We stored this internally as Table 1.22.

```{r}
#| label: sec1-t22-demo-inv-exact-all-matches-resp-subset
# Take response-level subset for the following analyses
t_df <- ms_records |>
  ## Drop "Duplicate" flagged records
  dplyr::filter(!dup_drop) |>
  ## Select only records with a DETECT screening
  dplyr::filter(dt_screened) |>
  ## Select only records with a paired APS Investigation
  dplyr::filter(aps_inv_window) |>
  ## Convert grouping variable to text for table functions
  dplyr::mutate(
    aps_dispo = dplyr::case_when(
      aps_inv_window_dispo %in% c('valid', 'mixed_validity') ~ 't',
      TRUE ~ 'f'
    )
  )

## Subset-specific group order for tables
t_group_order = list(
  t = '1+ Valid EM Allegation', 
  f = 'No Valid Allegations'
)
```

###### Age

We calculated summary statistics for calculated age.

```{r}
#| label: sec1-t22-demo-inv-exact-all-matches-resp-age-summ
# Get Summary Statistics for Age by Valid APS Inv (Exact, Agg.), Response-Level
get_group_cont_summary(
  .df = t_df,
  .var_name = "age_calc",
  .group_var = "aps_dispo",
  .group_order = t_group_order
) 
```

We used a histogram to broadly examine the distribution of values for age. Values demonstrated a significant left skew, and were not approximately normally distributed

```{r}
#| label: sec1-t22-demo-inv-exact-all-matches-resp-age-hist-f0-22
# Figure 0.22: Distribution of Age by Valid APS Inv (Exact, Agg.), Response-Level
## Create Histogram
plot <- ggplot2::ggplot(
  t_df |>
    dplyr::mutate(
      aps_dispo = factor(
        aps_dispo, levels = names(t_group_order),
        labels = as.character(t_group_order), ordered = T
      )
    ), 
  ggplot2::aes(
    x = age_calc, fill = aps_dispo, y = ggplot2::after_stat(density),
    alpha = 0.5
  )) +
  ggplot2::scale_alpha(guide = "none") +
  ggplot2::geom_histogram(binwidth = 1, position = 'identity') +
  ### Convert y-axis scale to a percent
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ### Labels
  ggplot2::labs(
    title="Distribution of Age by Valid APS Inv. (Exact, Agg.), Response-Level",
    subtitle = "Only records with a matched APS Investigation",
    x= "Calculated Age at Encounter (Years)", 
    y = "Frequency (%)",
    fill = "APS Determinations"
  ) +
  ### Colors
  ggplot2::scale_fill_brewer(palette="Spectral")

## Save plot
ggplot2::ggsave(
  filename = paste0(
    plot_path,
    "f0-22-age-inv-exact-all-matches-resp-hist.png"
  ),
  plot = plot
)

## Display plot
plot
```

We performed Student T-Test and Wilcox Rank-Sum testing to assess for a statistical association.

```{r}
#| label: sec1-t22-demo-inv-exact-all-matches-resp-age-stats
# T-Test and Wilcox Rank-Sum for Age, by Valid APS Inv (Exact, Agg.)
get_twos_num_stats(
  .df = t_df |>
    dplyr::mutate(
      aps_dispo = dplyr::case_when(
        aps_dispo == 't' ~ T,
        aps_dispo == 'f' ~ F
      )
    ),
  .var_name = "age_calc",
  .binary_var = "aps_dispo"
)
```

###### Sex

We calculated summary statistics for sex.

```{r}
#| label: sec1-t22-demo-inv-exact-all-matches-resp-sex-summ
# Get Summary Statistics for Sex, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      sex_cat = ifelse(is.na(sex_cat), 'missing', sex_cat)
    ),
  "sex_cat",
  .val_order = sex_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t22-demo-inv-exact-all-matches-resp-sex-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Unable to Assess', 'Missing (NA)')
)
```

###### Race

We calculated summary statistics for race.

```{r}
#| label: sec1-t22-demo-inv-exact-all-matches-resp-race-summ
# Get Summary Statistics for Race, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      race_cat = ifelse(is.na(race_cat), 'missing', race_cat)
    ),
  "race_cat",
  .val_order = race_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t22-demo-inv-exact-all-matches-resp-race-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
)
```

###### Ethnicity

We calculated summary statistics for ethnicity.

```{r}
#| label: sec1-t22-demo-inv-exact-all-matches-resp-ethn-summ
# Get Summary Statistics for Ethnicity, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      hispanic = dplyr::case_when(
        is.na(hispanic) ~ 'missing',
        hispanic ~ 'hispanic',
        !hispanic ~ 'nonhispanic'
      )
    ),
  "hispanic",
  .val_order = hispanic_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t22-demo-inv-exact-all-matches-resp-ethn-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
)
```

##### Table 1.23: Exact Match, "Best", All Screenings (#sec1-t23-demo-inv-exact-best-scrs-resp)

We wished to examine demographic differences between responses that did and did not have at least one valid allegation of EM in a matched APS Investigation, across all screenings (those without a paired investigation deemed "no valid allegations"). We used exact matching (case open at the time of the response), and used dispositions of the single "best" paired investigation. We stored this internally as Table 1.23.

```{r}
#| label: sec1-t23-demo-inv-exact-best-scrs-resp-subset
# Take response-level subset for the following analyses
t_df <- ms_records |>
  ## Drop "Duplicate" flagged records
  dplyr::filter(!dup_drop) |>
  ## Select only records with a DETECT screening
  dplyr::filter(dt_screened) |>
  ## Convert grouping variable to text for table functions
  dplyr::mutate(
    aps_dispo = dplyr::case_when(
      aps_inv_window_dispo_best %in% c('valid', 'mixed_validity') ~ 't',
      TRUE ~ 'f'
    )
  )

## Subset-specific group order for tables
t_group_order = list(
  t = '1+ Valid EM Allegation', 
  f = 'No Valid Allegations'
)
```

###### Age

We calculated summary statistics for calculated age.

```{r}
#| label: sec1-t23-demo-inv-exact-best-scrs-resp-age-summ
# Get Summary Statistics for Age by Valid APS Inv (Exact, 'Best'), Response-Level
get_group_cont_summary(
  .df = t_df,
  .var_name = "age_calc",
  .group_var = "aps_dispo",
  .group_order = t_group_order
) 
```

We used a histogram to broadly examine the distribution of values for age. Values demonstrated a significant left skew, and were not approximately normally distributed

```{r}
#| label: sec1-t23-demo-inv-exact-best-scrs-resp-age-hist-f0-23
# Figure 0.23: Distribution of Age by Valid APS Inv (Exact, 'Best'), Response-Level
## Create Histogram
plot <- ggplot2::ggplot(
  t_df |>
    dplyr::mutate(
      aps_dispo = factor(
        aps_dispo, levels = names(t_group_order),
        labels = as.character(t_group_order), ordered = T
      )
    ), 
  ggplot2::aes(
    x = age_calc, fill = aps_dispo, y = ggplot2::after_stat(density),
    alpha = 0.5
  )) +
  ggplot2::scale_alpha(guide = "none") +
  ggplot2::geom_histogram(binwidth = 1, position = 'identity') +
  ### Convert y-axis scale to a percent
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ### Labels
  ggplot2::labs(
    title="Distribution of Age by Valid APS Inv. (Exact, 'Best'), Response-Level",
    subtitle = "Includes no matched investigations with 'no valid allegations'",
    x= "Calculated Age at Encounter (Years)", 
    y = "Frequency (%)",
    fill = "APS Determinations"
  ) +
  ### Colors
  ggplot2::scale_fill_brewer(palette="Spectral")

## Save plot
ggplot2::ggsave(
  filename = paste0(
    plot_path,
    "f0-23-age-inv-exact-best-scrs-resp-hist.png"
  ),
  plot = plot
)

## Display plot
plot
```

We performed Student T-Test and Wilcox Rank-Sum testing to assess for a statistical association.

```{r}
#| label: sec1-t23-demo-inv-exact-best-scrs-resp-age-stats
# T-Test and Wilcox Rank-Sum for Age, by Valid APS Inv (Exact, 'Best')
get_twos_num_stats(
  .df = t_df |>
    dplyr::mutate(
      aps_dispo = dplyr::case_when(
        aps_dispo == 't' ~ T,
        aps_dispo == 'f' ~ F
      )
    ),
  .var_name = "age_calc",
  .binary_var = "aps_dispo"
)
```

###### Sex

We calculated summary statistics for sex.

```{r}
#| label: sec1-t23-demo-inv-exact-best-scrs-resp-sex-summ
# Get Summary Statistics for Sex, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      sex_cat = ifelse(is.na(sex_cat), 'missing', sex_cat)
    ),
  "sex_cat",
  .val_order = sex_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t23-demo-inv-exact-best-scrs-resp-sex-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Unable to Assess', 'Missing (NA)')
)
```

###### Race

We calculated summary statistics for race.

```{r}
#| label: sec1-t23-demo-inv-exact-best-scrs-resp-race-summ
# Get Summary Statistics for Race, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      race_cat = ifelse(is.na(race_cat), 'missing', race_cat)
    ),
  "race_cat",
  .val_order = race_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t23-demo-inv-exact-best-scrs-resp-race-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
)
```

###### Ethnicity

We calculated summary statistics for ethnicity.

```{r}
#| label: sec1-t23-demo-inv-exact-best-scrs-resp-ethn-summ
# Get Summary Statistics for Ethnicity, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      hispanic = dplyr::case_when(
        is.na(hispanic) ~ 'missing',
        hispanic ~ 'hispanic',
        !hispanic ~ 'nonhispanic'
      )
    ),
  "hispanic",
  .val_order = hispanic_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t23-demo-inv-exact-best-scrs-resp-ethn-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
)
```

##### Table 1.24: Exact Match, "Best", All Screenings (#sec1-t24-demo-inv-exact-best-matches-resp)

We wished to examine demographic differences between responses that did and did not have at least one valid allegation of EM in a matched APS Investigation, across records with a matched APS Investigation. We used exact matching (case open at the time of the response), and aggregated the dispositions of all matched investigations. We stored this internally as Table 1.24.

```{r}
#| label: sec1-t24-demo-inv-exact-best-matches-resp-subset
# Take response-level subset for the following analyses
t_df <- ms_records |>
  ## Drop "Duplicate" flagged records
  dplyr::filter(!dup_drop) |>
  ## Select only records with a DETECT screening
  dplyr::filter(dt_screened) |>
  ## Select only records with a paired APS Investigation
  dplyr::filter(aps_inv_window) |>
  ## Convert grouping variable to text for table functions
  dplyr::mutate(
    aps_dispo = dplyr::case_when(
      aps_inv_window_dispo_best %in% c('valid', 'mixed_validity') ~ 't',
      TRUE ~ 'f'
    )
  )

## Subset-specific group order for tables
t_group_order = list(
  t = '1+ Valid EM Allegation', 
  f = 'No Valid Allegations'
)
```

###### Age

We calculated summary statistics for calculated age.

```{r}
#| label: sec1-t24-demo-inv-exact-best-matches-resp-age-summ
# Get Summary Statistics for Age by Valid APS Inv (Exact, 'Best'), Response-Level
get_group_cont_summary(
  .df = t_df,
  .var_name = "age_calc",
  .group_var = "aps_dispo",
  .group_order = t_group_order
) 
```

We used a histogram to broadly examine the distribution of values for age. Values demonstrated a significant left skew, and were not approximately normally distributed

```{r}
#| label: sec1-t24-demo-inv-exact-best-matches-resp-age-hist-f0-24
# Figure 0.24: Distribution of Age by Valid APS Inv (Exact, 'Best'), Response-Level
## Create Histogram
plot <- ggplot2::ggplot(
  t_df |>
    dplyr::mutate(
      aps_dispo = factor(
        aps_dispo, levels = names(t_group_order),
        labels = as.character(t_group_order), ordered = T
      )
    ), 
  ggplot2::aes(
    x = age_calc, fill = aps_dispo, y = ggplot2::after_stat(density),
    alpha = 0.5
  )) +
  ggplot2::scale_alpha(guide = "none") +
  ggplot2::geom_histogram(binwidth = 1, position = 'identity') +
  ### Convert y-axis scale to a percent
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ### Labels
  ggplot2::labs(
    title="Distribution of Age by Valid APS Inv. (Exact, 'Best'), Response-Level",
    subtitle = "Only records with a matched APS Investigation",
    x= "Calculated Age at Encounter (Years)", 
    y = "Frequency (%)",
    fill = "APS Determinations"
  ) +
  ### Colors
  ggplot2::scale_fill_brewer(palette="Spectral")

## Save plot
ggplot2::ggsave(
  filename = paste0(
    plot_path,
    "f0-24-age-inv-exact-best-matches-resp-hist.png"
  ),
  plot = plot
)

## Display plot
plot
```

We performed Student T-Test and Wilcox Rank-Sum testing to assess for a statistical association.

```{r}
#| label: sec1-t24-demo-inv-exact-best-matches-resp-age-stats
# T-Test and Wilcox Rank-Sum for Age, by Valid APS Inv (Exact, 'Best')
get_twos_num_stats(
  .df = t_df |>
    dplyr::mutate(
      aps_dispo = dplyr::case_when(
        aps_dispo == 't' ~ T,
        aps_dispo == 'f' ~ F
      )
    ),
  .var_name = "age_calc",
  .binary_var = "aps_dispo"
)
```

###### Sex

We calculated summary statistics for sex.

```{r}
#| label: sec1-t24-demo-inv-exact-best-matches-resp-sex-summ
# Get Summary Statistics for Sex, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      sex_cat = ifelse(is.na(sex_cat), 'missing', sex_cat)
    ),
  "sex_cat",
  .val_order = sex_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t24-demo-inv-exact-best-matches-resp-sex-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Unable to Assess', 'Missing (NA)')
)
```

###### Race

We calculated summary statistics for race.

```{r}
#| label: sec1-t24-demo-inv-exact-best-matches-resp-race-summ
# Get Summary Statistics for Race, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      race_cat = ifelse(is.na(race_cat), 'missing', race_cat)
    ),
  "race_cat",
  .val_order = race_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t24-demo-inv-exact-best-matches-resp-race-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
)
```

###### Ethnicity

We calculated summary statistics for ethnicity.

```{r}
#| label: sec1-t24-demo-inv-exact-best-matches-resp-ethn-summ
# Get Summary Statistics for Ethnicity, Response-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      hispanic = dplyr::case_when(
        is.na(hispanic) ~ 'missing',
        hispanic ~ 'hispanic',
        !hispanic ~ 'nonhispanic'
      )
    ),
  "hispanic",
  .val_order = hispanic_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t24-demo-inv-exact-best-matches-resp-ethn-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
)
```

#### Subject-Level

##### Table 1.25: Broad Match, Aggregate, All Screenings (#sec1-t25-demo-inv-broad-all-scrs-subj)

We wished to examine demographic differences between subjects that did and did not have at least one valid allegation of EM in a matched APS Investigation, across all screenings (those without a paired investigation deemed "no valid allegations"). We used broad temporal matching (30 day window), and aggregated the dispositions of all matched investigations. We stored this internally as Table 1.25.

```{r}
#| label: sec1-t25-demo-inv-broad-all-scrs-subj-subset
# Take subject-level subset for the following analyses
t_df <- ms_subjs |>
  ## Select only records with a DETECT screening
  dplyr::filter(dt_screened) |>
  ## Convert grouping variable to text for table functions
  dplyr::mutate(
    aps_dispo = dplyr::case_when(
      aps_inv_window_dispo %in% c('valid', 'mixed_validity') ~ 't',
      TRUE ~ 'f'
    )
  )

## Subset-specific group order for tables
t_group_order = list(
  t = '1+ Valid EM Allegation', 
  f = 'No Valid Allegations'
)
```

###### Age

We calculated summary statistics for calculated age.

```{r}
#| label: sec1-t25-demo-inv-broad-all-scrs-subj-age-summ
# Get Summary Statistics for Age by Valid APS Inv (Broad, Agg.), Subject-Level
get_group_cont_summary(
  .df = t_df,
  .var_name = "age_avg",
  .group_var = "aps_dispo",
  .group_order = t_group_order
) 
```

We used a histogram to broadly examine the distribution of values for age. Values demonstrated a significant left skew, and were not approximately normally distributed

```{r}
#| label: sec1-t25-demo-inv-broad-all-scrs-subj-age-hist-f0-25
# Figure 0.25: Distribution of Age by Valid APS Inv (Broad, Agg.), Subject-Level
## Create Histogram
plot <- ggplot2::ggplot(
  t_df |>
    dplyr::mutate(
      aps_dispo = factor(
        aps_dispo, levels = names(t_group_order),
        labels = as.character(t_group_order), ordered = T
      )
    ), 
  ggplot2::aes(
    x = age_avg, fill = aps_dispo, y = ggplot2::after_stat(density),
    alpha = 0.5
  )) +
  ggplot2::scale_alpha(guide = "none") +
  ggplot2::geom_histogram(binwidth = 1, position = 'identity') +
  ### Convert y-axis scale to a percent
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ### Labels
  ggplot2::labs(
    title="Distribution of Age by Valid APS Inv. (Broad, Agg.), Subject-Level",
    subtitle = "Includes no matched investigations with 'no valid allegations'",
    x= "Average Calculated Age at Encounter (Years)", 
    y = "Frequency (%)",
    fill = "APS Determinations"
  ) +
  ### Colors
  ggplot2::scale_fill_brewer(palette="Spectral")

## Save plot
ggplot2::ggsave(
  filename = paste0(
    plot_path,
    "f0-25-age-inv-broad-all-scrs-subj-hist.png"
  ),
  plot = plot
)

## Display plot
plot
```

We performed Student T-Test and Wilcox Rank-Sum testing to assess for a statistical association.

```{r}
#| label: sec1-t25-demo-inv-broad-all-scrs-subj-age-stats
# T-Test and Wilcox Rank-Sum for Age, by Valid APS Inv (Broad, Agg.)
get_twos_num_stats(
  .df = t_df |>
    dplyr::mutate(
      aps_dispo = dplyr::case_when(
        aps_dispo == 't' ~ T,
        aps_dispo == 'f' ~ F
      )
    ),
  .var_name = "age_avg",
  .binary_var = "aps_dispo"
)
```

###### Sex

We calculated summary statistics for sex.

```{r}
#| label: sec1-t25-demo-inv-broad-all-scrs-subj-sex-summ
# Get Summary Statistics for Sex, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      sex_cat = ifelse(is.na(sex_cat), 'missing', sex_cat)
    ),
  "sex_cat",
  .val_order = sex_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t25-demo-inv-broad-all-scrs-subj-sex-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Unable to Assess', 'Missing (NA)')
)
```

###### Race

We calculated summary statistics for race.

```{r}
#| label: sec1-t25-demo-inv-broad-all-scrs-subj-race-summ
# Get Summary Statistics for Race, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      race_cat = ifelse(is.na(race_cat), 'missing', race_cat)
    ),
  "race_cat",
  .val_order = race_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t25-demo-inv-broad-all-scrs-subj-race-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
)
```

###### Ethnicity

We calculated summary statistics for ethnicity.

```{r}
#| label: sec1-t25-demo-inv-broad-all-scrs-subj-ethn-summ
# Get Summary Statistics for Ethnicity, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      hispanic = dplyr::case_when(
        is.na(hispanic) ~ 'missing',
        hispanic ~ 'hispanic',
        !hispanic ~ 'nonhispanic'
      )
    ),
  "hispanic",
  .val_order = hispanic_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t25-demo-inv-broad-all-scrs-subj-ethn-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
)
```

##### Table 1.26: Broad Match, Aggregate, All Screenings (#sec1-t26-demo-inv-broad-all-matches-subj)

We wished to examine demographic differences between subjects that did and did not have at least one valid allegation of EM in a matched APS Investigation, across records with a matched APS Investigation. We used broad temporal matching (30 day window), and aggregated the dispositions of all matched investigations. We stored this internally as Table 1.26.

```{r}
#| label: sec1-t26-demo-inv-broad-all-matches-subj-subset
# Take subject-level subset for the following analyses
t_df <- ms_subjs |>
  ## Select only records with a DETECT screening
  dplyr::filter(dt_screened) |>
  ## Select only records with a paired APS Investigation
  dplyr::filter(aps_inv_window) |>
  ## Convert grouping variable to text for table functions
  dplyr::mutate(
    aps_dispo = dplyr::case_when(
      aps_inv_window_dispo %in% c('valid', 'mixed_validity') ~ 't',
      TRUE ~ 'f'
    )
  )

## Subset-specific group order for tables
t_group_order = list(
  t = '1+ Valid EM Allegation', 
  f = 'No Valid Allegations'
)
```

###### Age

We calculated summary statistics for calculated age.

```{r}
#| label: sec1-t26-demo-inv-broad-all-matches-subj-age-summ
# Get Summary Statistics for Age by Valid APS Inv (Broad, Agg.), Subject-Level
get_group_cont_summary(
  .df = t_df,
  .var_name = "age_avg",
  .group_var = "aps_dispo",
  .group_order = t_group_order
) 
```

We used a histogram to broadly examine the distribution of values for age. Values demonstrated a significant left skew, and were not approximately normally distributed

```{r}
#| label: sec1-t26-demo-inv-broad-all-matches-subj-age-hist-f0-26
# Figure 0.26: Distribution of Age by Valid APS Inv (Broad, Agg.), Subject-Level
## Create Histogram
plot <- ggplot2::ggplot(
  t_df |>
    dplyr::mutate(
      aps_dispo = factor(
        aps_dispo, levels = names(t_group_order),
        labels = as.character(t_group_order), ordered = T
      )
    ), 
  ggplot2::aes(
    x = age_avg, fill = aps_dispo, y = ggplot2::after_stat(density),
    alpha = 0.5
  )) +
  ggplot2::scale_alpha(guide = "none") +
  ggplot2::geom_histogram(binwidth = 1, position = 'identity') +
  ### Convert y-axis scale to a percent
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ### Labels
  ggplot2::labs(
    title="Distribution of Age by Valid APS Inv. (Broad, Agg.), Subject-Level",
    subtitle = "Only records with a matched APS Investigation",
    x= "Average Calculated Age at Encounter (Years)", 
    y = "Frequency (%)",
    fill = "APS Determinations"
  ) +
  ### Colors
  ggplot2::scale_fill_brewer(palette="Spectral")

## Save plot
ggplot2::ggsave(
  filename = paste0(
    plot_path,
    "f0-26-age-inv-broad-all-matches-subj-hist.png"
  ),
  plot = plot
)

## Display plot
plot
```

We performed Student T-Test and Wilcox Rank-Sum testing to assess for a statistical association.

```{r}
#| label: sec1-t26-demo-inv-broad-all-matches-subj-age-stats
# T-Test and Wilcox Rank-Sum for Age, by Valid APS Inv (Broad, Agg.)
get_twos_num_stats(
  .df = t_df |>
    dplyr::mutate(
      aps_dispo = dplyr::case_when(
        aps_dispo == 't' ~ T,
        aps_dispo == 'f' ~ F
      )
    ),
  .var_name = "age_avg",
  .binary_var = "aps_dispo"
)
```

###### Sex

We calculated summary statistics for sex.

```{r}
#| label: sec1-t26-demo-inv-broad-all-matches-subj-sex-summ
# Get Summary Statistics for Sex, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      sex_cat = ifelse(is.na(sex_cat), 'missing', sex_cat)
    ),
  "sex_cat",
  .val_order = sex_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t26-demo-inv-broad-all-matches-subj-sex-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Unable to Assess', 'Missing (NA)')
)
```

###### Race

We calculated summary statistics for race.

```{r}
#| label: sec1-t26-demo-inv-broad-all-matches-subj-race-summ
# Get Summary Statistics for Race, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      race_cat = ifelse(is.na(race_cat), 'missing', race_cat)
    ),
  "race_cat",
  .val_order = race_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t26-demo-inv-broad-all-matches-subj-race-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
)
```

###### Ethnicity

We calculated summary statistics for ethnicity.

```{r}
#| label: sec1-t26-demo-inv-broad-all-matches-subj-ethn-summ
# Get Summary Statistics for Ethnicity, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      hispanic = dplyr::case_when(
        is.na(hispanic) ~ 'missing',
        hispanic ~ 'hispanic',
        !hispanic ~ 'nonhispanic'
      )
    ),
  "hispanic",
  .val_order = hispanic_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t26-demo-inv-broad-all-matches-subj-ethn-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
)
```

##### Table 1.27: Broad Match, "Best", All Screenings (#sec1-t27-demo-inv-broad-best-scrs-subj)

We wished to examine demographic differences between subjects that did and did not have at least one valid allegation of EM in a matched APS Investigation, across all screenings (those without a paired investigation deemed "no valid allegations"). We used broad temporal matching (30 day window), and used dispositions of the single "best" paired investigation. We stored this internally as Table 1.27.

```{r}
#| label: sec1-t27-demo-inv-broad-best-scrs-subj-subset
# Take subject-level subset for the following analyses
t_df <- ms_subjs |>
  ## Select only records with a DETECT screening
  dplyr::filter(dt_screened) |>
  ## Convert grouping variable to text for table functions
  dplyr::mutate(
    aps_dispo = dplyr::case_when(
      aps_inv_window_dispo_best %in% c('valid', 'mixed_validity') ~ 't',
      TRUE ~ 'f'
    )
  )

## Subset-specific group order for tables
t_group_order = list(
  t = '1+ Valid EM Allegation', 
  f = 'No Valid Allegations'
)
```

###### Age

We calculated summary statistics for calculated age.

```{r}
#| label: sec1-t27-demo-inv-broad-best-scrs-subj-age-summ
# Get Summary Statistics for Age by Valid APS Inv (Broad, 'Best'), Subject-Level
get_group_cont_summary(
  .df = t_df,
  .var_name = "age_avg",
  .group_var = "aps_dispo",
  .group_order = t_group_order
) 
```

We used a histogram to broadly examine the distribution of values for age. Values demonstrated a significant left skew, and were not approximately normally distributed

```{r}
#| label: sec1-t27-demo-inv-broad-best-scrs-subj-age-hist-f0-27
# Figure 0.27: Distribution of Age by Valid APS Inv (Broad, 'Best'), Subject-Level
## Create Histogram
plot <- ggplot2::ggplot(
  t_df |>
    dplyr::mutate(
      aps_dispo = factor(
        aps_dispo, levels = names(t_group_order),
        labels = as.character(t_group_order), ordered = T
      )
    ), 
  ggplot2::aes(
    x = age_avg, fill = aps_dispo, y = ggplot2::after_stat(density),
    alpha = 0.5
  )) +
  ggplot2::scale_alpha(guide = "none") +
  ggplot2::geom_histogram(binwidth = 1, position = 'identity') +
  ### Convert y-axis scale to a percent
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ### Labels
  ggplot2::labs(
    title="Distribution of Age by Valid APS Inv. (Broad, 'Best'), Subject-Level",
    subtitle = "Includes no matched investigations with 'no valid allegations'",
    x= "Average Calculated Age at Encounter (Years)", 
    y = "Frequency (%)",
    fill = "APS Determinations"
  ) +
  ### Colors
  ggplot2::scale_fill_brewer(palette="Spectral")

## Save plot
ggplot2::ggsave(
  filename = paste0(
    plot_path,
    "f0-27-age-inv-broad-best-scrs-subj-hist.png"
  ),
  plot = plot
)

## Display plot
plot
```

We performed Student T-Test and Wilcox Rank-Sum testing to assess for a statistical association.

```{r}
#| label: sec1-t27-demo-inv-broad-best-scrs-subj-age-stats
# T-Test and Wilcox Rank-Sum for Age, by Valid APS Inv (Broad, 'Best')
get_twos_num_stats(
  .df = t_df |>
    dplyr::mutate(
      aps_dispo = dplyr::case_when(
        aps_dispo == 't' ~ T,
        aps_dispo == 'f' ~ F
      )
    ),
  .var_name = "age_avg",
  .binary_var = "aps_dispo"
)
```

###### Sex

We calculated summary statistics for sex.

```{r}
#| label: sec1-t27-demo-inv-broad-best-scrs-subj-sex-summ
# Get Summary Statistics for Sex, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      sex_cat = ifelse(is.na(sex_cat), 'missing', sex_cat)
    ),
  "sex_cat",
  .val_order = sex_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t27-demo-inv-broad-best-scrs-subj-sex-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Unable to Assess', 'Missing (NA)')
)
```

###### Race

We calculated summary statistics for race.

```{r}
#| label: sec1-t27-demo-inv-broad-best-scrs-subj-race-summ
# Get Summary Statistics for Race, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      race_cat = ifelse(is.na(race_cat), 'missing', race_cat)
    ),
  "race_cat",
  .val_order = race_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t27-demo-inv-broad-best-scrs-subj-race-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
)
```

###### Ethnicity

We calculated summary statistics for ethnicity.

```{r}
#| label: sec1-t27-demo-inv-broad-best-scrs-subj-ethn-summ
# Get Summary Statistics for Ethnicity, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      hispanic = dplyr::case_when(
        is.na(hispanic) ~ 'missing',
        hispanic ~ 'hispanic',
        !hispanic ~ 'nonhispanic'
      )
    ),
  "hispanic",
  .val_order = hispanic_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t27-demo-inv-broad-best-scrs-subj-ethn-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
)
```

##### Table 1.28: Broad Match, "Best", All Screenings (#sec1-t28-demo-inv-broad-best-matches-subj)

We wished to examine demographic differences between subjects that did and did not have at least one valid allegation of EM in a matched APS Investigation, across records with a matched APS Investigation. We used broad temporal matching (30 day window), and aggregated the dispositions of all matched investigations. We stored this internally as Table 1.28.

```{r}
#| label: sec1-t28-demo-inv-broad-best-matches-subj-subset
# Take subject-level subset for the following analyses
t_df <- ms_subjs |>
  ## Select only records with a DETECT screening
  dplyr::filter(dt_screened) |>
  ## Select only records with a paired APS Investigation
  dplyr::filter(aps_inv_window) |>
  ## Convert grouping variable to text for table functions
  dplyr::mutate(
    aps_dispo = dplyr::case_when(
      aps_inv_window_dispo_best %in% c('valid', 'mixed_validity') ~ 't',
      TRUE ~ 'f'
    )
  )

## Subset-specific group order for tables
t_group_order = list(
  t = '1+ Valid EM Allegation', 
  f = 'No Valid Allegations'
)
```

###### Age

We calculated summary statistics for calculated age.

```{r}
#| label: sec1-t28-demo-inv-broad-best-matches-subj-age-summ
# Get Summary Statistics for Age by Valid APS Inv (Broad, 'Best'), Subject-Level
get_group_cont_summary(
  .df = t_df,
  .var_name = "age_avg",
  .group_var = "aps_dispo",
  .group_order = t_group_order
) 
```

We used a histogram to broadly examine the distribution of values for age. Values demonstrated a significant left skew, and were not approximately normally distributed

```{r}
#| label: sec1-t28-demo-inv-broad-best-matches-subj-age-hist-f0-28
# Figure 0.28: Distribution of Age by Valid APS Inv (Broad, 'Best'), Subject-Level
## Create Histogram
plot <- ggplot2::ggplot(
  t_df |>
    dplyr::mutate(
      aps_dispo = factor(
        aps_dispo, levels = names(t_group_order),
        labels = as.character(t_group_order), ordered = T
      )
    ), 
  ggplot2::aes(
    x = age_avg, fill = aps_dispo, y = ggplot2::after_stat(density),
    alpha = 0.5
  )) +
  ggplot2::scale_alpha(guide = "none") +
  ggplot2::geom_histogram(binwidth = 1, position = 'identity') +
  ### Convert y-axis scale to a percent
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ### Labels
  ggplot2::labs(
    title="Distribution of Age by Valid APS Inv. (Broad, 'Best'), Subject-Level",
    subtitle = "Only records with a matched APS Investigation",
    x= "Average Calculated Age at Encounter (Years)", 
    y = "Frequency (%)",
    fill = "APS Determinations"
  ) +
  ### Colors
  ggplot2::scale_fill_brewer(palette="Spectral")

## Save plot
ggplot2::ggsave(
  filename = paste0(
    plot_path,
    "f0-28-age-inv-broad-best-matches-subj-hist.png"
  ),
  plot = plot
)

## Display plot
plot
```

We performed Student T-Test and Wilcox Rank-Sum testing to assess for a statistical association.

```{r}
#| label: sec1-t28-demo-inv-broad-best-matches-subj-age-stats
# T-Test and Wilcox Rank-Sum for Age, by Valid APS Inv (Broad, 'Best')
get_twos_num_stats(
  .df = t_df |>
    dplyr::mutate(
      aps_dispo = dplyr::case_when(
        aps_dispo == 't' ~ T,
        aps_dispo == 'f' ~ F
      )
    ),
  .var_name = "age_avg",
  .binary_var = "aps_dispo"
)
```

###### Sex

We calculated summary statistics for sex.

```{r}
#| label: sec1-t28-demo-inv-broad-best-matches-subj-sex-summ
# Get Summary Statistics for Sex, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      sex_cat = ifelse(is.na(sex_cat), 'missing', sex_cat)
    ),
  "sex_cat",
  .val_order = sex_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t28-demo-inv-broad-best-matches-subj-sex-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Unable to Assess', 'Missing (NA)')
)
```

###### Race

We calculated summary statistics for race.

```{r}
#| label: sec1-t28-demo-inv-broad-best-matches-subj-race-summ
# Get Summary Statistics for Race, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      race_cat = ifelse(is.na(race_cat), 'missing', race_cat)
    ),
  "race_cat",
  .val_order = race_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t28-demo-inv-broad-best-matches-subj-race-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
)
```

###### Ethnicity

We calculated summary statistics for ethnicity.

```{r}
#| label: sec1-t28-demo-inv-broad-best-matches-subj-ethn-summ
# Get Summary Statistics for Ethnicity, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      hispanic = dplyr::case_when(
        is.na(hispanic) ~ 'missing',
        hispanic ~ 'hispanic',
        !hispanic ~ 'nonhispanic'
      )
    ),
  "hispanic",
  .val_order = hispanic_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t28-demo-inv-broad-best-matches-subj-ethn-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
)
```


##### Table 1.29: Exact Match, Aggregate, All Screenings (#sec1-t29-demo-inv-exact-all-scrs-subj)

We wished to examine demographic differences between subjects that did and did not have at least one valid allegation of EM in a matched APS Investigation, across all screenings (those without a paired investigation deemed "no valid allegations"). We used exact matching (case open at the time of the subject), and aggregated the dispositions of all matched investigations. We stored this internally as Table 1.29.

```{r}
#| label: sec1-t29-demo-inv-exact-all-scrs-subj-subset
# Take subject-level subset for the following analyses
t_df <- ms_subjs |>
  ## Select only records with a DETECT screening
  dplyr::filter(dt_screened) |>
  ## Convert grouping variable to text for table functions
  dplyr::mutate(
    aps_dispo = dplyr::case_when(
      aps_inv_window_dispo %in% c('valid', 'mixed_validity') ~ 't',
      TRUE ~ 'f'
    )
  )

## Subset-specific group order for tables
t_group_order = list(
  t = '1+ Valid EM Allegation', 
  f = 'No Valid Allegations'
)
```

###### Age

We calculated summary statistics for calculated age.

```{r}
#| label: sec1-t29-demo-inv-exact-all-scrs-subj-age-summ
# Get Summary Statistics for Age by Valid APS Inv (Exact, Agg.), Subject-Level
get_group_cont_summary(
  .df = t_df,
  .var_name = "age_avg",
  .group_var = "aps_dispo",
  .group_order = t_group_order
) 
```

We used a histogram to broadly examine the distribution of values for age. Values demonstrated a significant left skew, and were not approximately normally distributed

```{r}
#| label: sec1-t29-demo-inv-exact-all-scrs-subj-age-hist-f0-29
# Figure 0.29: Distribution of Age by Valid APS Inv (Exact, Agg.), Subject-Level
## Create Histogram
plot <- ggplot2::ggplot(
  t_df |>
    dplyr::mutate(
      aps_dispo = factor(
        aps_dispo, levels = names(t_group_order),
        labels = as.character(t_group_order), ordered = T
      )
    ), 
  ggplot2::aes(
    x = age_avg, fill = aps_dispo, y = ggplot2::after_stat(density),
    alpha = 0.5
  )) +
  ggplot2::scale_alpha(guide = "none") +
  ggplot2::geom_histogram(binwidth = 1, position = 'identity') +
  ### Convert y-axis scale to a percent
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ### Labels
  ggplot2::labs(
    title="Distribution of Age by Valid APS Inv. (Exact, Agg.), Subject-Level",
    subtitle = "Includes no matched investigations with 'no valid allegations'",
    x= "Average Calculated Age at Encounter (Years)", 
    y = "Frequency (%)",
    fill = "APS Determinations"
  ) +
  ### Colors
  ggplot2::scale_fill_brewer(palette="Spectral")

## Save plot
ggplot2::ggsave(
  filename = paste0(
    plot_path,
    "f0-29-age-inv-exact-all-scrs-subj-hist.png"
  ),
  plot = plot
)

## Display plot
plot
```

We performed Student T-Test and Wilcox Rank-Sum testing to assess for a statistical association.

```{r}
#| label: sec1-t29-demo-inv-exact-all-scrs-subj-age-stats
# T-Test and Wilcox Rank-Sum for Age, by Valid APS Inv (Exact, Agg.)
get_twos_num_stats(
  .df = t_df |>
    dplyr::mutate(
      aps_dispo = dplyr::case_when(
        aps_dispo == 't' ~ T,
        aps_dispo == 'f' ~ F
      )
    ),
  .var_name = "age_avg",
  .binary_var = "aps_dispo"
)
```

###### Sex

We calculated summary statistics for sex.

```{r}
#| label: sec1-t29-demo-inv-exact-all-scrs-subj-sex-summ
# Get Summary Statistics for Sex, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      sex_cat = ifelse(is.na(sex_cat), 'missing', sex_cat)
    ),
  "sex_cat",
  .val_order = sex_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t29-demo-inv-exact-all-scrs-subj-sex-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Unable to Assess', 'Missing (NA)')
)
```

###### Race

We calculated summary statistics for race.

```{r}
#| label: sec1-t29-demo-inv-exact-all-scrs-subj-race-summ
# Get Summary Statistics for Race, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      race_cat = ifelse(is.na(race_cat), 'missing', race_cat)
    ),
  "race_cat",
  .val_order = race_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t29-demo-inv-exact-all-scrs-subj-race-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
)
```

###### Ethnicity

We calculated summary statistics for ethnicity.

```{r}
#| label: sec1-t29-demo-inv-exact-all-scrs-subj-ethn-summ
# Get Summary Statistics for Ethnicity, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      hispanic = dplyr::case_when(
        is.na(hispanic) ~ 'missing',
        hispanic ~ 'hispanic',
        !hispanic ~ 'nonhispanic'
      )
    ),
  "hispanic",
  .val_order = hispanic_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t29-demo-inv-exact-all-scrs-subj-ethn-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
)
```

##### Table 1.30: Exact Match, Aggregate, All Screenings (#sec1-t30-demo-inv-exact-all-matches-subj)

We wished to examine demographic differences between subjects that did and did not have at least one valid allegation of EM in a matched APS Investigation, across records with a matched APS Investigation. We used exact matching (case open at the time of the subject), and aggregated the dispositions of all matched investigations. We stored this internally as Table 1.30.

```{r}
#| label: sec1-t30-demo-inv-exact-all-matches-subj-subset
# Take subject-level subset for the following analyses
t_df <- ms_subjs |>
  ## Select only records with a DETECT screening
  dplyr::filter(dt_screened) |>
  ## Select only records with a paired APS Investigation
  dplyr::filter(aps_inv_window) |>
  ## Convert grouping variable to text for table functions
  dplyr::mutate(
    aps_dispo = dplyr::case_when(
      aps_inv_window_dispo %in% c('valid', 'mixed_validity') ~ 't',
      TRUE ~ 'f'
    )
  )

## Subset-specific group order for tables
t_group_order = list(
  t = '1+ Valid EM Allegation', 
  f = 'No Valid Allegations'
)
```

###### Age

We calculated summary statistics for calculated age.

```{r}
#| label: sec1-t30-demo-inv-exact-all-matches-subj-age-summ
# Get Summary Statistics for Age by Valid APS Inv (Exact, Agg.), Subject-Level
get_group_cont_summary(
  .df = t_df,
  .var_name = "age_avg",
  .group_var = "aps_dispo",
  .group_order = t_group_order
) 
```

We used a histogram to broadly examine the distribution of values for age. Values demonstrated a significant left skew, and were not approximately normally distributed

```{r}
#| label: sec1-t30-demo-inv-exact-all-matches-subj-age-hist-f0-30
# Figure 0.30: Distribution of Age by Valid APS Inv (Exact, Agg.), Subject-Level
## Create Histogram
plot <- ggplot2::ggplot(
  t_df |>
    dplyr::mutate(
      aps_dispo = factor(
        aps_dispo, levels = names(t_group_order),
        labels = as.character(t_group_order), ordered = T
      )
    ), 
  ggplot2::aes(
    x = age_avg, fill = aps_dispo, y = ggplot2::after_stat(density),
    alpha = 0.5
  )) +
  ggplot2::scale_alpha(guide = "none") +
  ggplot2::geom_histogram(binwidth = 1, position = 'identity') +
  ### Convert y-axis scale to a percent
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ### Labels
  ggplot2::labs(
    title="Distribution of Age by Valid APS Inv. (Exact, Agg.), Subject-Level",
    subtitle = "Only records with a matched APS Investigation",
    x= "Average Calculated Age at Encounter (Years)", 
    y = "Frequency (%)",
    fill = "APS Determinations"
  ) +
  ### Colors
  ggplot2::scale_fill_brewer(palette="Spectral")

## Save plot
ggplot2::ggsave(
  filename = paste0(
    plot_path,
    "f0-30-age-inv-exact-all-matches-subj-hist.png"
  ),
  plot = plot
)

## Display plot
plot
```

We performed Student T-Test and Wilcox Rank-Sum testing to assess for a statistical association.

```{r}
#| label: sec1-t30-demo-inv-exact-all-matches-subj-age-stats
# T-Test and Wilcox Rank-Sum for Age, by Valid APS Inv (Exact, Agg.)
get_twos_num_stats(
  .df = t_df |>
    dplyr::mutate(
      aps_dispo = dplyr::case_when(
        aps_dispo == 't' ~ T,
        aps_dispo == 'f' ~ F
      )
    ),
  .var_name = "age_avg",
  .binary_var = "aps_dispo"
)
```

###### Sex

We calculated summary statistics for sex.

```{r}
#| label: sec1-t30-demo-inv-exact-all-matches-subj-sex-summ
# Get Summary Statistics for Sex, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      sex_cat = ifelse(is.na(sex_cat), 'missing', sex_cat)
    ),
  "sex_cat",
  .val_order = sex_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t30-demo-inv-exact-all-matches-subj-sex-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Unable to Assess', 'Missing (NA)')
)
```

###### Race

We calculated summary statistics for race.

```{r}
#| label: sec1-t30-demo-inv-exact-all-matches-subj-race-summ
# Get Summary Statistics for Race, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      race_cat = ifelse(is.na(race_cat), 'missing', race_cat)
    ),
  "race_cat",
  .val_order = race_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t30-demo-inv-exact-all-matches-subj-race-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
)
```

###### Ethnicity

We calculated summary statistics for ethnicity.

```{r}
#| label: sec1-t30-demo-inv-exact-all-matches-subj-ethn-summ
# Get Summary Statistics for Ethnicity, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      hispanic = dplyr::case_when(
        is.na(hispanic) ~ 'missing',
        hispanic ~ 'hispanic',
        !hispanic ~ 'nonhispanic'
      )
    ),
  "hispanic",
  .val_order = hispanic_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t30-demo-inv-exact-all-matches-subj-ethn-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
)
```

##### Table 1.31: Exact Match, "Best", All Screenings (#sec1-t31-demo-inv-exact-best-scrs-subj)

We wished to examine demographic differences between subjects that did and did not have at least one valid allegation of EM in a matched APS Investigation, across all screenings (those without a paired investigation deemed "no valid allegations"). We used exact matching (case open at the time of the subject), and used dispositions of the single "best" paired investigation. We stored this internally as Table 1.31.

```{r}
#| label: sec1-t31-demo-inv-exact-best-scrs-subj-subset
# Take subject-level subset for the following analyses
t_df <- ms_subjs |>
  ## Select only records with a DETECT screening
  dplyr::filter(dt_screened) |>
  ## Convert grouping variable to text for table functions
  dplyr::mutate(
    aps_dispo = dplyr::case_when(
      aps_inv_window_dispo_best %in% c('valid', 'mixed_validity') ~ 't',
      TRUE ~ 'f'
    )
  )

## Subset-specific group order for tables
t_group_order = list(
  t = '1+ Valid EM Allegation', 
  f = 'No Valid Allegations'
)
```

###### Age

We calculated summary statistics for calculated age.

```{r}
#| label: sec1-t31-demo-inv-exact-best-scrs-subj-age-summ
# Get Summary Statistics for Age by Valid APS Inv (Exact, 'Best'), Subject-Level
get_group_cont_summary(
  .df = t_df,
  .var_name = "age_avg",
  .group_var = "aps_dispo",
  .group_order = t_group_order
) 
```

We used a histogram to broadly examine the distribution of values for age. Values demonstrated a significant left skew, and were not approximately normally distributed

```{r}
#| label: sec1-t31-demo-inv-exact-best-scrs-subj-age-hist-f0-31
# Figure 0.31: Distribution of Age by Valid APS Inv (Exact, 'Best'), Subject-Level
## Create Histogram
plot <- ggplot2::ggplot(
  t_df |>
    dplyr::mutate(
      aps_dispo = factor(
        aps_dispo, levels = names(t_group_order),
        labels = as.character(t_group_order), ordered = T
      )
    ), 
  ggplot2::aes(
    x = age_avg, fill = aps_dispo, y = ggplot2::after_stat(density),
    alpha = 0.5
  )) +
  ggplot2::scale_alpha(guide = "none") +
  ggplot2::geom_histogram(binwidth = 1, position = 'identity') +
  ### Convert y-axis scale to a percent
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ### Labels
  ggplot2::labs(
    title="Distribution of Age by Valid APS Inv. (Exact, 'Best'), Subject-Level",
    subtitle = "Includes no matched investigations with 'no valid allegations'",
    x= "Average Calculated Age at Encounter (Years)", 
    y = "Frequency (%)",
    fill = "APS Determinations"
  ) +
  ### Colors
  ggplot2::scale_fill_brewer(palette="Spectral")

## Save plot
ggplot2::ggsave(
  filename = paste0(
    plot_path,
    "f0-31-age-inv-exact-best-scrs-subj-hist.png"
  ),
  plot = plot
)

## Display plot
plot
```

We performed Student T-Test and Wilcox Rank-Sum testing to assess for a statistical association.

```{r}
#| label: sec1-t31-demo-inv-exact-best-scrs-subj-age-stats
# T-Test and Wilcox Rank-Sum for Age, by Valid APS Inv (Exact, 'Best')
get_twos_num_stats(
  .df = t_df |>
    dplyr::mutate(
      aps_dispo = dplyr::case_when(
        aps_dispo == 't' ~ T,
        aps_dispo == 'f' ~ F
      )
    ),
  .var_name = "age_avg",
  .binary_var = "aps_dispo"
)
```

###### Sex

We calculated summary statistics for sex.

```{r}
#| label: sec1-t31-demo-inv-exact-best-scrs-subj-sex-summ
# Get Summary Statistics for Sex, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      sex_cat = ifelse(is.na(sex_cat), 'missing', sex_cat)
    ),
  "sex_cat",
  .val_order = sex_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t31-demo-inv-exact-best-scrs-subj-sex-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Unable to Assess', 'Missing (NA)')
)
```

###### Race

We calculated summary statistics for race.

```{r}
#| label: sec1-t31-demo-inv-exact-best-scrs-subj-race-summ
# Get Summary Statistics for Race, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      race_cat = ifelse(is.na(race_cat), 'missing', race_cat)
    ),
  "race_cat",
  .val_order = race_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t31-demo-inv-exact-best-scrs-subj-race-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
)
```

###### Ethnicity

We calculated summary statistics for ethnicity.

```{r}
#| label: sec1-t31-demo-inv-exact-best-scrs-subj-ethn-summ
# Get Summary Statistics for Ethnicity, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      hispanic = dplyr::case_when(
        is.na(hispanic) ~ 'missing',
        hispanic ~ 'hispanic',
        !hispanic ~ 'nonhispanic'
      )
    ),
  "hispanic",
  .val_order = hispanic_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t31-demo-inv-exact-best-scrs-subj-ethn-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
)
```

##### Table 1.32: Exact Match, "Best", All Screenings (#sec1-t32-demo-inv-exact-best-matches-subj)

We wished to examine demographic differences between subjects that did and did not have at least one valid allegation of EM in a matched APS Investigation, across records with a matched APS Investigation. We used exact matching (case open at the time of the subject), and aggregated the dispositions of all matched investigations. We stored this internally as Table 1.32.

```{r}
#| label: sec1-t32-demo-inv-exact-best-matches-subj-subset
# Take subject-level subset for the following analyses
t_df <- ms_subjs |>
  ## Select only records with a DETECT screening
  dplyr::filter(dt_screened) |>
  ## Select only records with a paired APS Investigation
  dplyr::filter(aps_inv_window) |>
  ## Convert grouping variable to text for table functions
  dplyr::mutate(
    aps_dispo = dplyr::case_when(
      aps_inv_window_dispo_best %in% c('valid', 'mixed_validity') ~ 't',
      TRUE ~ 'f'
    )
  )

## Subset-specific group order for tables
t_group_order = list(
  t = '1+ Valid EM Allegation', 
  f = 'No Valid Allegations'
)
```

###### Age

We calculated summary statistics for calculated age.

```{r}
#| label: sec1-t32-demo-inv-exact-best-matches-subj-age-summ
# Get Summary Statistics for Age by Valid APS Inv (Exact, 'Best'), Subject-Level
get_group_cont_summary(
  .df = t_df,
  .var_name = "age_avg",
  .group_var = "aps_dispo",
  .group_order = t_group_order
) 
```

We used a histogram to broadly examine the distribution of values for age. Values demonstrated a significant left skew, and were not approximately normally distributed

```{r}
#| label: sec1-t32-demo-inv-exact-best-matches-subj-age-hist-f0-32
# Figure 0.32: Distribution of Age by Valid APS Inv (Exact, 'Best'), Subject-Level
## Create Histogram
plot <- ggplot2::ggplot(
  t_df |>
    dplyr::mutate(
      aps_dispo = factor(
        aps_dispo, levels = names(t_group_order),
        labels = as.character(t_group_order), ordered = T
      )
    ), 
  ggplot2::aes(
    x = age_avg, fill = aps_dispo, y = ggplot2::after_stat(density),
    alpha = 0.5
  )) +
  ggplot2::scale_alpha(guide = "none") +
  ggplot2::geom_histogram(binwidth = 1, position = 'identity') +
  ### Convert y-axis scale to a percent
  ggplot2::scale_y_continuous(labels = scales::percent) +
  ### Labels
  ggplot2::labs(
    title="Distribution of Age by Valid APS Inv. (Exact, 'Best'), Subject-Level",
    subtitle = "Only records with a matched APS Investigation",
    x= "Average Calculated Age at Encounter (Years)", 
    y = "Frequency (%)",
    fill = "APS Determinations"
  ) +
  ### Colors
  ggplot2::scale_fill_brewer(palette="Spectral")

## Save plot
ggplot2::ggsave(
  filename = paste0(
    plot_path,
    "f0-32-age-inv-exact-best-matches-subj-hist.png"
  ),
  plot = plot
)

## Display plot
plot
```

We performed Student T-Test and Wilcox Rank-Sum testing to assess for a statistical association.

```{r}
#| label: sec1-t32-demo-inv-exact-best-matches-subj-age-stats
# T-Test and Wilcox Rank-Sum for Age, by Valid APS Inv (Exact, 'Best')
get_twos_num_stats(
  .df = t_df |>
    dplyr::mutate(
      aps_dispo = dplyr::case_when(
        aps_dispo == 't' ~ T,
        aps_dispo == 'f' ~ F
      )
    ),
  .var_name = "age_avg",
  .binary_var = "aps_dispo"
)
```

###### Sex

We calculated summary statistics for sex.

```{r}
#| label: sec1-t32-demo-inv-exact-best-matches-subj-sex-summ
# Get Summary Statistics for Sex, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      sex_cat = ifelse(is.na(sex_cat), 'missing', sex_cat)
    ),
  "sex_cat",
  .val_order = sex_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t32-demo-inv-exact-best-matches-subj-sex-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Unable to Assess', 'Missing (NA)')
)
```

###### Race

We calculated summary statistics for race.

```{r}
#| label: sec1-t32-demo-inv-exact-best-matches-subj-race-summ
# Get Summary Statistics for Race, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      race_cat = ifelse(is.na(race_cat), 'missing', race_cat)
    ),
  "race_cat",
  .val_order = race_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t32-demo-inv-exact-best-matches-subj-race-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
)
```

###### Ethnicity

We calculated summary statistics for ethnicity.

```{r}
#| label: sec1-t32-demo-inv-exact-best-matches-subj-ethn-summ
# Get Summary Statistics for Ethnicity, Subject-Level
## Calculate summary statistics
obs <- get_group_cat_summary(
  .df = t_df |>
    dplyr::mutate(
      hispanic = dplyr::case_when(
        is.na(hispanic) ~ 'missing',
        hispanic ~ 'hispanic',
        !hispanic ~ 'nonhispanic'
      )
    ),
  "hispanic",
  .val_order = hispanic_val_list,
  .group_var = "aps_dispo",
  .group_order = t_group_order
)

## Display Table - Text columns only
obs |>
  dplyr::select(
    !dplyr::all_of(c(dplyr::ends_with("_n"), dplyr::ends_with("_perc")))
  )
```

We performed Chi-Square and Fisher's Exact test to assess for an association.

```{r}
#| label: sec1-t32-demo-inv-exact-best-matches-subj-ethn-stats
# Chi-Square and Fisher's Exact test
get_chi_fisher(
  .df = obs |> 
    dplyr::select(value_name, t_n, f_n) |>
    dplyr::filter(value_name != "TOTAL"),
  .counts_a_var = 't_n',
  .counts_b_var = 'f_n',
  .value_var = 'value_name',
  .omit_vals = c('Missing (NA)')
)
```

# üßπ Clean up

```{r}
#| label: end-cleanup
rm(list=ls())
```

