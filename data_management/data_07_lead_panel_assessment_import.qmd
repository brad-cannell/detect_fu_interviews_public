---
title: "LEAD Panel Assessment Import"
format: html
---

```{r, message= FALSE}
# Load all necessary libraries
library(readr)
library(purrr)
library(stringr)
library(tidyverse)
library(expss)
library(janitor)
library(dplyr)
```

# Load the data

Load the data table into the global environment as a data frame using the raw csv file. We will create categorical variables with numerical values that match the codebook and also create a factor variable for each categorical variable in the data frame to be used for analysis.

```{r}
lpa <- read_csv("../data/filemaker_pro_exports/lead_panel_assessment_import.csv")
```

# Clean the data

Here we will convert all variable names to snake case so that everything is uniform.

```{r}
# Convert all variable names to snake case
lpa <- clean_names(lpa)
```

## Coerce categorical variables to factor variables

```{r}
# Panelist names
lpa <- lpa %>%
  mutate(
    panelist_name_10cat_f = factor(
      panelist_name,
      levels = c("Hannah Bell", "Janice Knebl", "Jason Burnett", "Jason Knebl", 
                 "John Halphen", "Jordan Rolfe", "Kristen Reuter",
                 "Samantha Fant", "Stephanie Large", 
                 "Tarrant County District Attorney's Office"
                )
      )
    )

# Assessment type    
lpa <- lpa %>%
  mutate(
    assessment_type_3cat_f = factor(
      assessment_type,
      levels = c("Initial assessment", "Secondary assessment",
                 "Post-detect assessment" 
                )
      )
    )

# Abuse variables
lpa <- lpa %>%
  mutate(
    across(
      .cols  = ends_with(c("_abuse", "neglect", "_exploitation", "abandonment")),
      .fns   = ~ case_when(
        .x   == "No"  ~ 0,
        .x   == "Yes" ~ 1
      ),
      .names = "{col}_2cat"
    ),
    across(
      .cols = ends_with(c("_abuse_2cat", "neglect_2cat", "exploitation_2cat", "abandonment_2cat")),
      .fns   = ~ factor(.x, levels = c(0, 1)),
      .names = "{col}_f"
      )
    )

lpa <- lpa %>%
  mutate(
    xc_assessment_screened_2cat = case_when(
      xc_assessment_screened == "Negative"  ~ 0,
      xc_assessment_screened == "Positive"  ~ 1
    ),
    xc_assessment_screened_2cat_f = factor(
      xc_assessment_screened_2cat,
      levels = c(0, 1)
      )
    )

```

### Remove variables that have recoded forms

```{r}
lpa <- lpa %>% select(-c(13, 16:23,25))
```

# Save as rds file

```{r}
saveRDS(lpa, "lead_panel_assessment_import.rds")

```
