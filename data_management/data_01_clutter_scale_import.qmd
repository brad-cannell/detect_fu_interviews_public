---
title: "Import Data from FileMaker Pro: Clutter Rating Scale"
---

# Overview

In this file, we import and do some initial cleaning of the Clutter Rating Scale data collected and stored in FileMaker Pro.


# Load packages

```{r, message= FALSE}
library(dplyr, warn.conflicts = FALSE)
library(readr)
library(janitor)
library(here)
```


# Load data

Load the data table into the global environment as a data frame using the raw csv file. See this Wiki page for more information about the location of the data: https://github.com/brad-cannell/detect_fu_interviews_public/wiki/Using-this-repository. 

```{r}
clutter_scale_path <- here::here("data", "filemaker_pro_exports", "clutter_scale_import.csv")
```

```{r}
clutter_scale <- readr::read_csv(clutter_scale_path)
rm(clutter_scale_path)
```

## Data check

The initial number of rows and columns.

```{r}
# Data check
dims <- c(893, 23)
if (nrow(clutter_scale) != dims[1] || ncol(clutter_scale) != dims[2]) {
  stop(
    "Expecting ", dims[1], " rows and ", dims[2], " columns in clutter_scale. Found ",
    paste(dim(clutter_scale), collapse = ", "), " instead. Check into it."
  )
}
```


# Data cleaning

We will create categorical variables with numerical values that match the codebook and also create a factor variable for each categorical variable in the data frame to be used for analysis.

## Convert all variable names to snake case

Here we will convert all variable names to snake case so that everything is uniform.

```{r}
clutter_scale <- clean_names(clutter_scale)
```

## Remove rows

For MedStar ID ...debe8, No consent given. There was no follow-up interview scheduled. There weren't any items checked in any of the follow-up interview survey instruments. However, there was a value for `name_last` in the Clutter Rating Scale survey instrument. This is autopopulated by FM Pro if the interviewer even opens the Clutter Rating Scale survey instrument. It looks like someone just clicked it by mistake. We will delete this record.

```{r}
clutter_scale <- clutter_scale |>
  filter(!stringr::str_detect(medstar_id, "debe8"))
```

```{r}
# Data check
dims <- c(892, 23)
if (nrow(clutter_scale) != dims[1] || ncol(clutter_scale) != dims[2]) {
  stop(
    "Expecting ", dims[1], " rows and ", dims[2], " columns in self_rep. Found ",
    paste(dim(clutter_scale), collapse = ", "), " instead. Check into it."
  )
}
```

## Clean categorical variables

- By default, FM Pro exports all categorical variables as character variables.
- When analyzing data in R, we prefer to work factors and occasionally with numeric values.
- Below, we:
  - Convert character values to numeric values
  - Create a version of each column with "Don't know" and "Refused" converted to NA
  - Create a factor version of each column (w/o "Don't know" and "Refused")
  - Arrange the columns as: original column, numeric column w/o "Don't know" and "Refused", 
    and the factor version of the column.

```{r}
# Create recoded variable for look_living
clutter_scale <- clutter_scale %>%
  mutate(
    look_living_3cat = case_when(
      look_living == "No" ~ 0,
      look_living == "Yes" ~ 1,
      look_living == "No living room" ~ 7
    ),
    # Create factor variable for look_living
    look_living_3cat_f = factor(
      look_living,
      levels = c("No", "Yes", "No living room")
    )
  )
```

```{r}
# Create factor variable for clutter_living
clutter_scale <- clutter_scale %>%
  mutate(
    clutter_living_f = factor(
      clutter_living
    ),
    # Create recoded variable for clutter_living_photo
    clutter_living_photo_3cat = case_when(
      clutter_living_photo == "No" ~ 0,
      clutter_living_photo == "Yes" ~ 1,
      clutter_living_photo == "No living room" ~ 7
    ),
    # Create factor variable for clutter_living_photo
    clutter_living_photo_3cat_f = factor(
      clutter_living_photo,
      levels = c("No", "Yes", "No living room")
    )
  )
```

```{r}
# Create recoded variable for look_kitchen
clutter_scale <- clutter_scale %>%
  mutate(
    look_kitchen_3cat = case_when(
      look_kitchen == "No" ~ 0,
      look_kitchen == "Yes" ~ 1,
      look_kitchen == "No kitchen" ~ 7
    ),
    # Create factor variable for look_kitchen
    look_kitchen_3cat_f = factor(
      look_kitchen,
      levels = c("No", "Yes", "No kitchen")
    )
  )
```

```{r}
# Create factor variable for clutter_kitchen
clutter_scale <- clutter_scale %>%
  mutate(
    clutter_kitchen_f = factor(
      clutter_kitchen
    ),
    # Create recoded variable for clutter_kitchen_photo
    clutter_kitchen_photo_3cat = case_when(
      clutter_kitchen_photo == "No" ~ 0,
      clutter_kitchen_photo == "Yes" ~ 1,
      clutter_kitchen_photo == "No kitchen" ~ 7
    ),
    # Create factor variable for clutter_kitchen_photo
    clutter_kitchen_photo_3cat_f = factor(
      clutter_kitchen_photo,
      levels = c("No", "Yes", "No living room")
    )
  )
```

```{r}
# Create recoded variable for look_bedroom
clutter_scale <- clutter_scale %>%
  mutate(
    look_bedroom_3cat = case_when(
      look_bedroom == "No" ~ 0,
      look_bedroom == "Yes" ~ 1,
      look_bedroom == "No bedroom" ~ 7
    ),
    # Create factor variable for look_bedroom
    look_bedroom_3cat_f = factor(
      look_bedroom,
      levels = c("No", "Yes", "No bedroom")
    )
  )
```

```{r}
# Create factor variable for clutter_bedroom
clutter_scale <- clutter_scale %>%
  mutate(
    clutter_bedroom_f = factor(
      clutter_bedroom
    ),
    # Create recoded variable for clutter_bedroom_photo
    clutter_bedroom_photo_3cat = case_when(
      clutter_bedroom_photo == "No" ~ 0,
      clutter_bedroom_photo == "Yes" ~ 1,
      clutter_bedroom_photo == "No bedroom" ~ 7
    ),
    # Create factor variable for clutter_bedroom_photo
    clutter_bedroom_photo_3cat_f = factor(
      clutter_bedroom_photo,
      levels = c("No", "Yes", "No bedroom")
    )
  )
```

## Remove raw variables that have recoded forms

```{r}
clutter_scale <- clutter_scale %>%
  select(-c(
    look_living, clutter_living, clutter_living_photo, look_kitchen, clutter_kitchen,
    clutter_kitchen_photo, look_bedroom, clutter_bedroom, clutter_bedroom_photo
  ))
```

### Data check

Number of columns after cleaning the environment variables section.

```{r}
# Data check
ncols <- 29
if (ncol(clutter_scale) != ncols) {
  stop(
    ncols, " columns expected in clutter_scale after cleaning the environment variables. ", 
    ncol(clutter_scale), " columns found. Check into it."
  )
}
```


# Save as rds file

```{r}
write_rds(clutter_scale, 
          here::here("data", "cleaned_rds_files", "clutter_scale_import.rds"))
```
