---
title: "Import Data from FileMaker Pro: Participant"
---


```{r, message= FALSE}
library(readr)
library(stringr)
library(janitor)
library(dplyr)
library(tidyr)
```
# Load the data

Load the data table into the global environment as a data frame using the raw csv file. We will create categorical variables with numerical values that match the codebook and also create a factor variable for each categorical variable in the data frame to be used for analysis.

```{r}

participant <- read_csv("../data/filemaker_pro_exports/participant_import.csv")

```

# Clean the data

Here we will convert all variable names to snake case so that everything is uniform.

```{r}
participant <- clean_names(participant)
```

```{r}
# Data check
dim(participant) # 92160 94
```

## Coerce categorical variables to factor variables

## Create recoded factor variables
### Change N/A string values to logical constant values
```{r}
# select variables that contain N/A string values
change_na <- participant %>% select_if(is.character) %>% select_if(~any(. == "N/A")) %>% colnames()
```

```{r}
participant <- participant %>%
  mutate(
    across(
      .cols = all_of(change_na),
      .fns = ~ case_when(
        .x == "N/A" ~ NA,
        TRUE        ~ .x
      )
    )
  )
```

### Create recoded variables for DETECT tool variables

```{r}
participant <- participant %>%
  mutate(
    # Make the case of the row values match that of the responses from the DETECT F/U Interviews
    across(
      .cols  = c(starts_with("x_un"), ends_with("_medications"), x_disarray_hoarding, x_health_safety_concern, 
                 contains("x_caregiver_"), x_isolated_home, x_depressed, x_poor_personal_hygiene, x_inadequately_clothed,
                 x_difficulty_medications, x_hoarding_medications),
      .fns   = ~ str_to_sentence(.x)
    ),
    across(
      .cols = c(starts_with("x_un"), ends_with("_medications"), x_disarray_hoarding, x_health_safety_concern, contains("x_caregiver_"),
                x_isolated_home, x_depressed, x_poor_personal_hygiene, x_inadequately_clothed, x_difficulty_medications,
                x_hoarding_medications),
      .fns = ~ factor(.x, levels = c("Yes", "No", "No caregiver present", "Unable to assess", "Did not enter patientâ€™s home")
      ),
      .names = "{col}_5cat_f"
    )
  )
```

### Create dummy variables for race

```{r}
# Identify unique values for race
participant %>% mutate(race_split = str_split(race, ', ')) %>% 
  select(race_split) %>%
  unnest(race_split) %>%
  unique() %>% 
  arrange(race_split)
```

```{r}
# Create dummy variables for race
participant <- participant %>%
  mutate(
    american_indian_alaska_native          = ifelse(grepl("American Indian or Alaska Native", race), 1, 0),
    asian                                  = ifelse(grepl("Asian", race), 1, 0),
    black_african_american                 = ifelse(grepl("Black or African American", race), 1, 0),
    hispanic_latino                        = ifelse(grepl("Hispanic or Latino", race), 1, 0),
    middle_eastern_north_african           = ifelse(grepl("Middle Eastern or North African", race), 1, 0),
    native_hawaiian_other_pacific_islander = ifelse(grepl("Native Hawaiian or Other Pacific Islander", race), 1, 0),
    white                                  = ifelse(grepl("White", race), 1, 0),
    other_race                             = ifelse(grepl("Other Race", race), 1, 0),
  ) %>% relocate(c(american_indian_alaska_native, asian, black_african_american, hispanic_latino, middle_eastern_north_african,
                   native_hawaiian_other_pacific_islander, white, other_race), .after = race)
```

### Create factor variables for sex, x_detect_status, x_aps_reported and x_do_not_call

```{r}
participant <- participant %>%
  mutate(
    xc_detect_status_2cat_f = factor(
      xc_detect_status,
      levels = c("Negative", "Positive")
      ),

    sex_3cat_f = factor(
      str_to_sentence(sex),
      levels = c("Female", "Male", "Unknown (unable to determine)")
      )
    )
```

```{r}
participant <- participant %>%
  mutate(
    across(
      .cols  = c(x_do_not_call, x_aps_reported),
      .fns   = ~ factor(.x, levels = c("No", "Yes")),
      .names = "{col}_2cat_f"
      )
    )
```


## Remove raw variables that have recoded forms

```{r}
participant <- participant %>% 
  select(-c(x_unmet_needs, x_unusual_odor, ends_with("_medications"), x_disarray_hoarding, x_health_safety_concern,
(starts_with("x_caregiver_") & !ends_with("_f")), x_isolated_home, x_depressed, x_poor_personal_hygiene,
            x_inadequately_clothed, x_difficulty_medications, x_hoarding_medications, sex, xc_detect_status, x_do_not_call, x_aps_reported))
```


```{r}
# Data check
dim(participant) # 92160 84
```

# Save as rds file

```{r}
write_rds(participant, "../data/cleaned_rds_files/participant_import.rds")

```
