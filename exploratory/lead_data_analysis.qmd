---
title: "LEAD Data Analysis"
format: html
---

# Load packages

```{r, warning=FALSE, echo=FALSE, output = FALSE}
library(flextable)
library(table1)
library(dplyr)
library(tibble)
library(misty)
library(officer)
library(tidyverse)
library(readr)
library(purrr)
library(stringr)
library(mice)
```

# Load cleaned data

Load the participant, self report, LEAD panel assessment and sociodemographic information datasets

```{r}
#| warning: false
socio_demo <- readRDS("../data/cleaned_rds_files/sociodemographic_information_import.rds")
observational_measures <- readRDS("../data/cleaned_rds_files/observational_measures_import.rds")
lead_panel_assessment <- readRDS("../data/cleaned_rds_files/lead_panel_assessment_import.rds")
```

# Data preparation

Prepare and then merge the relevant variables in the self report, LEAD panel assessment and sociodemographic information data sets into one data frame.

## Sociodemographic Information

```{r}
# select relevant variables from sociodemographic information df
soc_dem <- socio_demo %>%
  select(medstar_id, sode_hispanic_4cat_f, sode_race, sode_income_9cat_f)

# create dummy variables for race
soc_dem <- soc_dem %>% 
  mutate(
    american_indian_or_alaska_native               = ifelse(grepl("American Indian or Alaska Native", sode_race),1, 0),
    asian                                          = ifelse(grepl("Asian", sode_race),1, 0),
    black_or_african_american                      = ifelse(grepl("Black or African American", sode_race),1, 0),
    native_hawaiian_or_other_pacific_islander      = ifelse(grepl("Native Hawaiian or Other Pacific Islander", sode_race),1, 0),
    white                                          = ifelse(grepl("White", sode_race),1, 0),
    other                                          = ifelse(grepl("Other", sode_race),1, 0),
  )

# Create factor variables and set labels
soc_dem <- soc_dem %>% 
  mutate(
    across(
      .cols = american_indian_or_alaska_native:other,
      .fns  = ~ factor(.x,
                       levels = c(0,1), 
                       labels = c("No", "Yes")
      ),
      .names = "{col}"
    )
  )
    
```

## MedStar Medic Assessment (Observational Measures Dataset)

```{r}
obs_meas <- observational_measures %>% select(medstar_id, at_physical_4cat_f: at_self_4cat_f)
```

#### Any positive determinations across all subtypes

```{r}
obs_meas <- obs_meas %>%
  mutate(
    medic_abuse_any = case_when(
      if_any(at_physical_4cat_f : at_self_4cat_f, ~. == "Yes")  ~ 1,
      if_all(at_physical_4cat_f : at_self_4cat_f, ~. == "No")   ~ 0,
      TRUE                                                      ~ NA
    )
  )%>%
  mutate(
    medic_abuse_any = factor(
      medic_abuse_any,
      levels = c(0, 1),
      labels = c("No", "Yes")
    )
  )
```

## LEAD Panel Assessment

```{r}
# select relevant variables from LEAD panel assessment df
lpa <- lead_panel_assessment %>%
  select(medstar_id, panelist_name_10cat_f:xc_assessment_screened_2cat_f)
```


```{r}
# subset with initial assessment only
initial <- lpa %>% filter(assessment_type_3cat_f == "Initial assessment")

# subset with Secondary assessment only
secondary <- lpa %>% filter(assessment_type_3cat_f == "Secondary assessment")

# subset with Post-detect assessment only
post_detect <- lpa %>% filter(assessment_type_3cat_f == "Post-detect assessment")
```
# ðŸ”´ Ebie, please review this.
### Create overall EM determination columns

For each medstar_id reviewed by the LEAD panel, we want to calculate:

1. Create a column containing the number of positive determinations at each assessment (initial, secondary, and post-DETECT) for each subtype of EM.

2. Create a column containing the proportion (denominator is number of non-missing votes) of positive determinations at each assessment (initial, secondary, and post-DETECT) for each subtype of EM.

#### Total and proportion of positive votes for each Medstar iD

```{r}
# create columns with number of positive votes and proportion of positive votes for each medstar_id
initial <- initial %>%
  group_by(medstar_id) %>%
  reframe(
    physical_abuse_total          = sum(physical_abuse_2cat),
    sexual_abuse_total            = sum(sexual_abuse_2cat),
    emotional_psycho_abuse_total  = sum(emotional_psycho_abuse_2cat),
    neglect_total                 = sum(neglect_2cat),
    abandonment_total             = sum(abandonment_2cat),
    financial_exploitation_total  = sum(financial_exploitation_2cat),
    self_neglect_total            = sum(self_neglect_2cat),
    xc_assessment_screened_total  = sum(xc_assessment_screened_2cat),
    physical_abuse_prop           = ifelse(sum(physical_abuse_2cat)         
                                           == 0, 0, sum(physical_abuse_2cat)/ n()),
    sexual_abuse_prop             = ifelse(sum(sexual_abuse_2cat)           
                                           == 0, 0, sum(sexual_abuse_2cat)/n()),
    emotional_psycho_abuse_prop   = ifelse(sum(emotional_psycho_abuse_2cat) 
                                           == 0, 0, sum(emotional_psycho_abuse_2cat)/ n()),
    neglect_prop                  = ifelse(sum(neglect_2cat)                
                                           == 0, 0, sum(neglect_2cat)/ n()),
    abandonment_prop              = ifelse(sum(abandonment_2cat)            
                                           == 0, 0, sum(abandonment_2cat)/ n()),
    
    financial_exploitation_prop   = ifelse(sum(financial_exploitation_2cat) 
                                           == 0, 0, sum(financial_exploitation_2cat)/ n()),
    self_neglect_prop             = ifelse(sum(self_neglect_2cat)           
                                           == 0, 0, sum(self_neglect_2cat)/ n()),
    xc_assessment_screened_prop   = ifelse(sum(xc_assessment_screened_2cat) 
                                           == 0, 0, sum(xc_assessment_screened_2cat)/ n()),
    medstar_id                    = unique(medstar_id),
    assessment_type_3cat_f        = unique(assessment_type_3cat_f)
  )

secondary <- secondary %>%
  group_by(medstar_id) %>%
  reframe(
    physical_abuse_total          = sum(physical_abuse_2cat),
    sexual_abuse_total            = sum(sexual_abuse_2cat),
    emotional_psycho_abuse_total  = sum(emotional_psycho_abuse_2cat),
    neglect_total                 = sum(neglect_2cat),
    abandonment_total             = sum(abandonment_2cat),
    financial_exploitation_total  = sum(financial_exploitation_2cat),
    self_neglect_total            = sum(self_neglect_2cat),
    xc_assessment_screened_total  = sum(xc_assessment_screened_2cat),
    physical_abuse_prop           = ifelse(sum(physical_abuse_2cat)         
                                           == 0, 0, sum(physical_abuse_2cat)/ n()),
    sexual_abuse_prop             = ifelse(sum(sexual_abuse_2cat)           
                                           == 0, 0, sum(sexual_abuse_2cat)/n()),
    emotional_psycho_abuse_prop   = ifelse(sum(emotional_psycho_abuse_2cat) 
                                           == 0, 0, sum(emotional_psycho_abuse_2cat)/ n()),
    neglect_prop                  = ifelse(sum(neglect_2cat)                
                                           == 0, 0, sum(neglect_2cat)/ n()),
    abandonment_prop              = ifelse(sum(abandonment_2cat)            
                                           == 0, 0, sum(abandonment_2cat)/ n()),
    
    financial_exploitation_prop   = ifelse(sum(financial_exploitation_2cat) 
                                           == 0, 0, sum(financial_exploitation_2cat)/ n()),
    self_neglect_prop             = ifelse(sum(self_neglect_2cat)           
                                           == 0, 0, sum(self_neglect_2cat)/ n()),
    xc_assessment_screened_prop   = ifelse(sum(xc_assessment_screened_2cat) 
                                           == 0, 0, sum(xc_assessment_screened_2cat)/ n()),
    medstar_id                    = unique(medstar_id),
    assessment_type_3cat_f        = unique(assessment_type_3cat_f)
  )

post_detect <- post_detect %>%
  group_by(medstar_id) %>%
  reframe(
    physical_abuse_total          = sum(physical_abuse_2cat),
    sexual_abuse_total            = sum(sexual_abuse_2cat),
    emotional_psycho_abuse_total  = sum(emotional_psycho_abuse_2cat),
    neglect_total                 = sum(neglect_2cat),
    abandonment_total             = sum(abandonment_2cat),
    financial_exploitation_total  = sum(financial_exploitation_2cat),
    self_neglect_total            = sum(self_neglect_2cat),
    xc_assessment_screened_total  = sum(xc_assessment_screened_2cat),
    physical_abuse_prop           = ifelse(sum(physical_abuse_2cat)         
                                           == 0, 0, sum(physical_abuse_2cat)/ n()),
    sexual_abuse_prop             = ifelse(sum(sexual_abuse_2cat)           
                                           == 0, 0, sum(sexual_abuse_2cat)/n()),
    emotional_psycho_abuse_prop   = ifelse(sum(emotional_psycho_abuse_2cat) 
                                           == 0, 0, sum(emotional_psycho_abuse_2cat)/ n()),
    neglect_prop                  = ifelse(sum(neglect_2cat)                
                                           == 0, 0, sum(neglect_2cat)/ n()),
    abandonment_prop              = ifelse(sum(abandonment_2cat)            
                                           == 0, 0, sum(abandonment_2cat)/ n()),
    
    financial_exploitation_prop   = ifelse(sum(financial_exploitation_2cat) 
                                           == 0, 0, sum(financial_exploitation_2cat)/ n()),
    self_neglect_prop             = ifelse(sum(self_neglect_2cat)           
                                           == 0, 0, sum(self_neglect_2cat)/ n()),
    xc_assessment_screened_prop   = ifelse(sum(xc_assessment_screened_2cat) 
                                           == 0, 0, sum(xc_assessment_screened_2cat)/ n()),
    medstar_id                    = unique(medstar_id),
    assessment_type_3cat_f        = unique(assessment_type_3cat_f)
  )
```

#### Any positive determinations for each subtypes

3. Create a dichotomous variable that indicates if there were _any_ positive determinations at each assessment (initial, secondary, and post-DETECT) for each subtype of EM.


```{r}
# create columns with dichotomous variables indicating if there are any positive determinations for each subtype
initial <- initial %>%
  mutate(
    physical_abuse_any  = case_when(
      physical_abuse_total == 0  ~ 0,
      physical_abuse_total  > 0  ~ 1
    ),
    sexual_abuse_any  = case_when(
      sexual_abuse_total == 0  ~ 0,
      sexual_abuse_total  > 0  ~ 1
    ),
    emotional_psycho_abuse_any  = case_when(
      emotional_psycho_abuse_total == 0  ~ 0,
      emotional_psycho_abuse_total  > 0  ~ 1
    ),
    neglect_any = case_when(
      neglect_total == 0  ~ 0,
      neglect_total  > 0  ~ 1
    ),
    abandonment_any  = case_when(
      abandonment_total == 0  ~ 0,
      abandonment_total  > 0  ~ 1
    ),
    financial_exploitation_any  = case_when(
      financial_exploitation_total == 0  ~ 0,
      financial_exploitation_total  > 0  ~ 1
    ),
    self_neglect_any  = case_when(
      self_neglect_total == 0  ~ 0,
      self_neglect_total  > 0  ~ 1
    ),
    xc_assessment_screened_any  = case_when(
      xc_assessment_screened_total == 0  ~ 0,
      xc_assessment_screened_total  > 0  ~ 1
    )
  )

secondary <- secondary %>%
  mutate(
    physical_abuse_any = case_when(
      physical_abuse_total == 0  ~ 0,
      physical_abuse_total  > 0  ~ 1
    ),
    sexual_abuse_any  = case_when(
      sexual_abuse_total == 0  ~ 0,
      sexual_abuse_total  > 0  ~ 1
    ),
    emotional_psycho_abuse_any  = case_when(
      emotional_psycho_abuse_total == 0  ~ 0,
      emotional_psycho_abuse_total  > 0  ~ 1
    ),
    neglect_any  = case_when(
      neglect_total == 0  ~ 0,
      neglect_total  > 0  ~ 1
    ),
    abandonment_any  = case_when(
      abandonment_total == 0  ~ 0,
      abandonment_total  > 0  ~ 1
    ),
    financial_exploitation_any  = case_when(
      financial_exploitation_total == 0  ~ 0,
      financial_exploitation_total  > 0  ~ 1
    ),
    self_neglect_any  = case_when(
      self_neglect_total == 0  ~ 0,
      self_neglect_total  > 0  ~ 1
    ),
    xc_assessment_screened_any  = case_when(
      xc_assessment_screened_total == 0  ~ 0,
      xc_assessment_screened_total  > 0  ~ 1
    )
  )

post_detect <- post_detect %>%
  mutate(
    physical_abuse_any = case_when(
      physical_abuse_total == 0  ~ 0,
      physical_abuse_total  > 0  ~ 1
    ),
    sexual_abuse_any = case_when(
      sexual_abuse_total == 0  ~ 0,
      sexual_abuse_total  > 0  ~ 1
    ),
    emotional_psycho_abuse_any = case_when(
      emotional_psycho_abuse_total == 0  ~ 0,
      emotional_psycho_abuse_total  > 0  ~ 1
    ),
    neglect_any  = case_when(
      neglect_total == 0  ~ 0,
      neglect_total  > 0  ~ 1
    ),
    abandonment_any  = case_when(
      abandonment_total == 0  ~ 0,
      abandonment_total  > 0  ~ 1
    ),
    financial_exploitation_any = case_when(
      financial_exploitation_total == 0  ~ 0,
      financial_exploitation_total  > 0  ~ 1
    ),
    self_neglect_any = case_when(
      self_neglect_total == 0  ~ 0,
      self_neglect_total  > 0  ~ 1
    ),
    xc_assessment_screened_any = case_when(
      xc_assessment_screened_total == 0  ~ 0,
      xc_assessment_screened_total  > 0  ~ 1
    )
  )
```

```{r}
# Make columns factor variables
initial <- initial %>% 
  mutate(
    across(
      .cols = physical_abuse_any: xc_assessment_screened_any,
      .fns  = ~factor(.x, 
                      levels = c(0,1),
                      labels = c("No", "Yes")),
      .names = "{col}"
    )
  )

secondary <- secondary %>% 
  mutate(
    across(
      .cols = c(physical_abuse_any:xc_assessment_screened_any),
      .fns  = ~factor(.x, 
                      levels = c(0,1),
                      labels = c("No", "Yes"))
    )
  )

post_detect <- post_detect %>% 
  mutate(
    across(
      .cols = c(physical_abuse_any:xc_assessment_screened_any),
      .fns  = ~factor(.x, 
                      levels = c(0,1),
                      labels = c("No", "Yes"))
    )
  )
```

#### Majority vote variable for each abuse type

Final determination will be by majority vote of the secondary assessment (if one was done) or initial assessment (if a secondary assessment wasn't done)

```{r}
initial <- initial %>%
  mutate(
    physical_abuse_det = case_when(
      physical_abuse_prop <= 0.5  ~ 0,
      physical_abuse_prop  > 0.5  ~ 1
    ),
    sexual_abuse_det = case_when(
      sexual_abuse_prop <= 0.5  ~ 0,
      sexual_abuse_prop  > 0.5  ~ 1
    ),
    emotional_psycho_abuse_det = case_when(
      emotional_psycho_abuse_prop <= 0.5  ~ 0,
      emotional_psycho_abuse_prop  > 0.5  ~ 1
    ),
    neglect_det = case_when(
      neglect_prop <= 0.5  ~ 0,
      neglect_prop  > 0.5  ~ 1
    ),
    abandonment_det = case_when(
      abandonment_prop <= 0.5  ~ 0,
      abandonment_prop  > 0.5  ~ 1
    ),
    financial_exploitation_det = case_when(
      financial_exploitation_prop <= 0.5  ~ 0,
      financial_exploitation_prop  > 0.5  ~ 1
    ),
    self_neglect_det = case_when(
      self_neglect_prop <= 0.5  ~ 0,
      self_neglect_prop  > 0.5  ~ 1
    ),
    xc_assessment_screened_det = case_when(
      xc_assessment_screened_prop <= 0.5  ~ 0,
      xc_assessment_screened_prop  > 0.5  ~ 1
    )
  )

secondary <- secondary %>%
  mutate(
    physical_abuse_det = case_when(
      physical_abuse_prop <= 0.5  ~ 0,
      physical_abuse_prop  > 0.5  ~ 1
    ),
    sexual_abuse_det = case_when(
      sexual_abuse_prop <= 0.5  ~ 0,
      sexual_abuse_prop  > 0.5  ~ 1
    ),
    emotional_psycho_abuse_det = case_when(
      emotional_psycho_abuse_prop <= 0.5  ~ 0,
      emotional_psycho_abuse_prop  > 0.5  ~ 1
    ),
    neglect_det = case_when(
      neglect_prop <= 0.5  ~ 0,
      neglect_prop  > 0.5  ~ 1
    ),
    abandonment_det = case_when(
      abandonment_prop <= 0.5  ~ 0,
      abandonment_prop  > 0.5  ~ 1
    ),
    financial_exploitation_det = case_when(
      financial_exploitation_prop<= 0.5  ~ 0,
      financial_exploitation_prop > 0.5  ~ 1
    ),
    self_neglect_det = case_when(
      self_neglect_prop <= 0.5  ~ 0,
      self_neglect_prop  > 0.5  ~ 1
    ),
    xc_assessment_screened_det = case_when(
      xc_assessment_screened_prop <= 0.5  ~ 0,
      xc_assessment_screened_prop  > 0.5  ~ 1
    )
  )

post_detect <- post_detect %>%
  mutate(
    physical_abuse_det = case_when(
      physical_abuse_prop <= 0.5  ~ 0,
      physical_abuse_prop  > 0.5  ~ 1
    ),
    sexual_abuse_det = case_when(
      sexual_abuse_prop <= 0.5  ~ 0,
      sexual_abuse_prop  > 0.5  ~ 1
    ),
    emotional_psycho_abuse_det = case_when(
      emotional_psycho_abuse_prop<= 0.5  ~ 0,
      emotional_psycho_abuse_prop > 0.5  ~ 1
    ),
    neglect_det = case_when(
      neglect_prop <= 0.5  ~ 0,
      neglect_prop  > 0.5  ~ 1
    ),
    abandonment_det = case_when(
      abandonment_prop <= 0.5  ~ 0,
      abandonment_prop  > 0.5   ~ 1
    ),
    financial_exploitation_det = case_when(
      financial_exploitation_prop <= 0.5  ~ 0,
      financial_exploitation_prop  > 0.5  ~ 1
    ),
    self_neglect_det = case_when(
      self_neglect_prop <= 0.5  ~ 0,
      self_neglect_prop  > 0.5  ~ 1
    ),
    xc_assessment_screened_det = case_when(
      xc_assessment_screened_prop <= 0.5  ~ 0,
      xc_assessment_screened_prop  > 0.5  ~ 1
    )
  )
```

```{r}
# Make columns factor variables
initial <- initial %>% 
  mutate(
    across(
      .cols = physical_abuse_det: xc_assessment_screened_det,
      .fns  = ~factor(.x, 
                      levels = c(0,1),
                      labels = c("No", "Yes")),
      .names = "{col}"
    )
  )

secondary <- secondary %>% 
  mutate(
    across(
      .cols = c(physical_abuse_det:xc_assessment_screened_det),
      .fns  = ~factor(.x, 
                      levels = c(0,1),
                      labels = c("No", "Yes"))
    )
  )

post_detect <- post_detect %>% 
  mutate(
    across(
      .cols = c(physical_abuse_det:xc_assessment_screened_det),
      .fns  = ~factor(.x, 
                      levels = c(0,1),
                      labels = c("No", "Yes"))
    )
  )
```

#### Any positive determinations across all subtypes

4. Create a dichotomous variable that indicates if there were _any_ positive determinations at each assessment (initial, secondary, and post-DETECT) across _all_ subtypes of EM.

```{r}
initial <- initial %>%
  mutate(
    abuse_any = case_when(
      if_any(physical_abuse_det:self_neglect_det, ~. == "Yes")  ~ 1,
      if_all(physical_abuse_det:self_neglect_det, ~. == "No")   ~ 0,
      TRUE                                                      ~ NA
    )
  )%>%
  mutate(
    abuse_any = factor(
      abuse_any,
      levels = c(0, 1),
      labels = c("No", "Yes")
    )
  )

# Co-erce to factor
secondary <- secondary %>%
  mutate(
    abuse_any = case_when(
      if_any(physical_abuse_det:self_neglect_det, ~. == "Yes")  ~ 1,
      if_all(physical_abuse_det:self_neglect_det, ~. == "No")   ~ 0,
      TRUE                                                      ~ NA
    )
  )%>%
  mutate(
    abuse_any = factor(
      abuse_any,
      levels = c(0, 1),
      labels = c("No", "Yes")
    )
  )

post_detect <- post_detect %>%
   mutate(
    abuse_any = case_when(
      if_any(physical_abuse_det:self_neglect_det, ~. == "Yes")  ~ 1,
      if_all(physical_abuse_det:self_neglect_det, ~. == "No")   ~ 0,
      TRUE                                                      ~ NA
    )
  )%>%
  mutate(
    abuse_any = factor(
      abuse_any,
      levels = c(0, 1),
      labels = c("No", "Yes")
    )
  )
```


```{r}
# Merge the initial and secondary data sets, keeping only the secondary for each medstar_id when it is available
final_determination <- initial[!initial$medstar_id %in% secondary$medstar_id,]
final_determination <- rbind(final_determination, secondary)
```

## Merge observational measures, sociodemographic and LEAD dateframes

```{r}
# Merge subset dfs into a new df

final_determination <- purrr::reduce(list(final_determination, soc_dem, obs_meas), dplyr::left_join, by = 'medstar_id')
final_det_initial   <- purrr::reduce(list(initial, soc_dem, obs_meas), dplyr::left_join, by = 'medstar_id')
final_det_sec       <- purrr::reduce(list(secondary, soc_dem, obs_meas), dplyr::left_join, by = 'medstar_id')
final_det_post      <- purrr::reduce(list(post_detect, soc_dem, obs_meas), dplyr::left_join, by = 'medstar_id')
```

# Analaysis

## Number and proportion of assessements completed by type of assesement

How many unique MedStar IDs went to the LEAD panel for review?

```{r, include=FALSE}
unique_medstar_ids <- unique(lpa$medstar_id) |> length()
cat("Unique MedStar ID's =", unique_medstar_ids)
```

### Initial assessment

```{r, include=FALSE}
unique_medstar_ids_initial <- unique(initial$medstar_id) |> length()
cat("Unique MedStar ID's at intitial assessment =", unique_medstar_ids_initial)
```

```{r, include=FALSE}
cat("Proportion of MedStar ID's with an intitial assessment =", unique_medstar_ids_initial/unique_medstar_ids)
```

### Secondary assessment

```{r, include=FALSE}
unique_medstar_ids_secondary <- unique(secondary$medstar_id) |> length()
cat("Unique MedStar ID's at secondary assessment =", unique_medstar_ids_secondary)
```

```{r, include=FALSE}
cat("Proportion of MedStar ID's with an secondary assessment =", unique_medstar_ids_secondary/unique_medstar_ids)
```

### Post-DETECT assessment

```{r, include=FALSE}
unique_medstar_ids_post_detect <- unique(post_detect$medstar_id) |> length()
cat("Unique MedStar ID's at post-DETECT assessment =", unique_medstar_ids_post_detect)
```

```{r, include=FALSE}
cat("Proportion of MedStar ID's with an post-DETECT assessment =", unique_medstar_ids_post_detect/unique_medstar_ids)
```

### Summary table
```{r}
sum_table <- data.frame(
                        Value = c("Unique MedStar ID's at intitial assessment", 
                                  "Unique MedStar ID's at secondary assessment", 
                                  "Unique MedStar ID's at post-DETECT assessment", 
                                  "Total unique MedStar ID's across all assessments"),
                        Count = c(unique_medstar_ids_initial, unique_medstar_ids_secondary,
                                  unique_medstar_ids_post_detect, unique_medstar_ids),
                        Proportion = c((unique_medstar_ids_initial/unique_medstar_ids), 
                                       (unique_medstar_ids_secondary/unique_medstar_ids), 
                                       (unique_medstar_ids_post_detect/unique_medstar_ids), 
                                       1)
                        ) %>%
  flextable()
# Set caption

sum_table <- set_caption(sum_table, "Summary of Unique Medstar IDs for the LEAD Assessment Data")
sum_table <- bold(sum_table, i = 4, bold = TRUE)
sum_table <- width(sum_table, width = 2)


sum_table
```

## Missing data summary

```{r, fig.width = 15}
fd_m <- final_determination %>% 
  select(
    physical_abuse_det: at_self_4cat_f,  
    )%>% md.pattern(., plot = T, rotate.names = T)
```


# ðŸ”´ NOTE

Before we analyze race, we want to know the number and proportion of determinations overall. Secondarily, we will repeat the analysis by race/ethnicity (and probably a bunch of other characteristics). Let's don't drop any rows yet that have NA for race/ethnicity. Only drop rows that have NA for determinations (hopefully, there aren't any).

## Sumary Statistics Tables

### Determinations Overall

#### Final determinations for the secondary assessment except when not available (initial assessment in this case)

```{r}
# Create caption/ title
cap_1  <- "Summary Statistics for Abuse Determinations Overall - Secondary (Initial When Unavailable)"


overall_tab <- table1(~ physical_abuse_det + sexual_abuse_det + emotional_psycho_abuse_det + neglect_det + abandonment_det + financial_exploitation_det + self_neglect_det + abuse_any, 
               data = final_determination, 
               caption = cap_1)
overall_tab <- t1flex(overall_tab, tablefn = c("qflextable", "flextable", "regulartable"))
overall_tab <- width(overall_tab, width = 3)
overall_tab
```


#### Final determinations for the intial assessment

```{r}
# Create caption/ title
cap_1  <- "Summary Statistics for Abuse Determinations Overall - Intial Assessment"


initial_tab <- table1(~ physical_abuse_det + sexual_abuse_det + emotional_psycho_abuse_det + neglect_det + abandonment_det + financial_exploitation_det + self_neglect_det + xc_assessment_screened_det, 
               data = final_det_initial, 
               caption = cap_1)
initial_tab <- t1flex(initial_tab, tablefn = c("qflextable", "flextable", "regulartable"))
initial_tab <- width(initial_tab, width = 3)
initial_tab
```

#### Final determinations for the secondary assessment

```{r}
# Create caption/ title
cap_1  <- "Summary Statistics for Abuse Determinations Overall - Secondary Assessment"


sec_tab <- table1(~ physical_abuse_det + sexual_abuse_det + emotional_psycho_abuse_det + neglect_det + abandonment_det + financial_exploitation_det + self_neglect_det + xc_assessment_screened_det, 
               data = final_det_sec, 
               caption = cap_1)
sec_tab <- t1flex(sec_tab, tablefn = c("qflextable", "flextable", "regulartable"))
sec_tab <- width(sec_tab, width = 3)
sec_tab
```

#### Final determinations for the post detect assessment

```{r}
# Create caption/ title
cap_1  <- "Summary Statistics for Abuse Determinations Overall - Post-Detect Assessment"


post_tab <- table1(~ physical_abuse_det + sexual_abuse_det + emotional_psycho_abuse_det + neglect_det + abandonment_det + financial_exploitation_det + self_neglect_det + xc_assessment_screened_det, 
               data = final_det_post, 
               caption = cap_1)
post_tab <- t1flex(post_tab, tablefn = c("qflextable", "flextable", "regulartable"))
post_tab <- width(post_tab, width = 3)
post_tab
```


### Race/ Ethnicity stratified by abuse determination

```{r}
# Remove missing rows for LEAD data
fd_na <- final_determination %>% drop_na(physical_abuse_det: 	
xc_assessment_screened_det)
```


#### Abuse Determination Overall by Race/ Ethnicity
The data set includes the Secondary Assessment (initial When unavailable)

```{r}
# Create caption/ title
cap_1  <- "Summary Statistics for Race/ Ethnicity by Abuse Determination"


abuse_any_tab <- table1(~ sode_hispanic_4cat_f + american_indian_or_alaska_native + asian + black_or_african_american + native_hawaiian_or_other_pacific_islander + white + other| abuse_any, 
               data = fd_na, 
               caption = cap_1)
abuse_any_tab <- t1flex(abuse_any_tab, tablefn = c("qflextable", "flextable", "regulartable"))
abuse_any_tab <- width(abuse_any_tab, width = 3)
abuse_any_tab
```

#### Abuse Determination Overall by Household Income
The data set includes the Secondary Assessment (initial When unavailable)

```{r}
# Create caption/ title
cap_1  <- "Summary Statistics for Household Income by Abuse Determination"


income_tab <- table1(~ sode_income_9cat_f | abuse_any, 
               data = fd_na, 
               caption = cap_1)
income_tab <- t1flex(income_tab, tablefn = c("qflextable", "flextable", "regulartable"))
income_tab <- width(income_tab, width = 3)
income_tab
```

#### MedStar Medic vs LEAD Abuse Determination

```{r}
# Create caption/ title
cap_1  <- "Summary Statistics for MedStar Medic Abuse Determinations"


medic_tab <- table1(~ at_physical_4cat_f + at_sexual_4cat_f + at_emotional_4cat_f + at_neglect_4cat_f + at_abandon_4cat_f + at_financial_4cat_f + at_self_4cat_f + medic_abuse_any,
               data = final_determination,
               caption = cap_1)
medic_tab <- t1flex(medic_tab, tablefn = c("qflextable", "flextable", "regulartable"))
medic_tab <- width(medic_tab, width = 3)
medic_tab
```

```{r}
# Create caption/ title
cap_1  <- "Summary Statistics for Overall MedStar Medic Abuse Abuse Determinations by Overall LEAD Determinations"


mvl_tab <- table1(~ medic_abuse_any | abuse_any,
               data = fd_na,
               caption = cap_1)
mvl_tab <- t1flex(mvl_tab, tablefn = c("qflextable", "flextable", "regulartable"))
mvl_tab <- width(mvl_tab, width = 3)
mvl_tab
```
